!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/",n(n.s=25)}([function(e,t,n){e.exports=n(16)()},function(e,t,n){"use strict";e.exports=n(12)},function(e,t,n){"use strict";e.exports=function(){}},function(e,t,n){"use strict";e.exports=function(e,t,n,r,o,i,a,l){if(!e){var u;if(void 0===t)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,i,a,l],s=0;(u=new Error(t.replace(/%s/g,function(){return c[s++]}))).name="Invariant Violation"}throw u.framesToPop=1,u}}},function(e,t,n){"use strict";var r=function(){};e.exports=r},function(e,t,n){var r=n(24);e.exports=d,e.exports.parse=i,e.exports.compile=function(e,t){return l(i(e,t))},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=p;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,r=[],i=0,a=0,l="",s=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],p=n[1],d=n.index;if(l+=e.slice(a,d),a=d+f.length,p)l+=p[1];else{var h=e[a],m=n[2],y=n[3],v=n[4],g=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var k=null!=m&&null!=h&&h!==m,x="+"===b||"*"===b,T="?"===b||"*"===b,E=n[2]||s,C=v||g;r.push({name:y||i++,prefix:m||"",delimiter:E,optional:T,repeat:x,partial:k,asterisk:!!w,pattern:C?c(C):w?".*":"[^"+u(E)+"]+?"})}}return a<e.length&&(l+=e.substr(a)),l&&r.push(l),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function l(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^(?:"+e[n].pattern+")$"));return function(n,o){for(var i="",l=n||{},u=(o||{}).pretty?a:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,p=l[s.name];if(null==p){if(s.optional){s.partial&&(i+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(p)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var d=0;d<p.length;d++){if(f=u(p[d]),!t[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");i+=(0===d?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(p).replace(/[?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}):u(p),!t[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');i+=s.prefix+f}}else i+=s}return i}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e.sensitive?"":"i"}function p(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<e.length;l++){var c=e[l];if("string"==typeof c)a+=u(c);else{var p=u(c.prefix),d="(?:"+c.pattern+")";t.push(c),c.repeat&&(d+="(?:"+p+d+")*"),a+=d=c.optional?c.partial?p+"("+d+")?":"(?:"+p+"("+d+"))?":p+"("+d+")"}}var h=u(n.delimiter||"/"),m=a.slice(-h.length)===h;return o||(a=(m?a.slice(0,-h.length):a)+"(?:"+h+"(?=$))?"),a+=i?"$":o&&m?"":"(?="+h+"|$)",s(new RegExp("^"+a,f(n)),t)}function d(e,t,n){return r(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(e,t):r(e)?function(e,t,n){for(var r=[],o=0;o<e.length;o++)r.push(d(e[o],t,n).source);return s(new RegExp("(?:"+r.join("|")+")",f(n)),t)}(e,t,n):function(e,t,n){return p(i(e,n),t,n)}(e,t,n)}},,function(e,t,n){"use strict";t.decode=t.parse=n(18),t.encode=t.stringify=n(19)},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,l=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var c in n=Object(arguments[u]))o.call(n,c)&&(l[c]=n[c]);if(r){a=r(n);for(var s=0;s<a.length;s++)i.call(n,a[s])&&(l[a[s]]=n[a[s]])}}return l}},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(13)},function(e,t,n){var r=n(20);"string"==typeof r&&(r=[[e.i,r,""]]);var o={sourceMap:!0,hmr:!0,transform:void 0,insertInto:void 0};n(22)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){"use strict";var r={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i=Object.defineProperty,a=Object.getOwnPropertyNames,l=Object.getOwnPropertySymbols,u=Object.getOwnPropertyDescriptor,c=Object.getPrototypeOf,s=c&&c(Object);e.exports=function e(t,n,f){if("string"!=typeof n){if(s){var p=c(n);p&&p!==s&&e(t,p,f)}var d=a(n);l&&(d=d.concat(l(n)));for(var h=0;h<d.length;++h){var m=d[h];if(!(r[m]||o[m]||f&&f[m])){var y=u(n,m);try{i(t,m,y)}catch(e){}}}return t}return t}},function(e,t,n){"use strict";
/** @license React v16.6.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(8),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,p=o?Symbol.for("react.concurrent_mode"):60111,d=o?Symbol.for("react.forward_ref"):60112,h=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,y=o?Symbol.for("react.lazy"):60116,v="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,a,l],c=0;(e=Error(t.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w={};function k(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}function x(){}function T(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||b}k.prototype.isReactComponent={},k.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&g("85"),this.updater.enqueueSetState(this,e,t,"setState")},k.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},x.prototype=k.prototype;var E=T.prototype=new x;E.constructor=T,r(E,k.prototype),E.isPureReactComponent=!0;var C={current:null,currentDispatcher:null},S=Object.prototype.hasOwnProperty,_={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r=void 0,o={},a=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)S.call(t,r)&&!_.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:a,ref:l,props:o,_owner:C.current}}function O(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var R=/\/+/g,j=[];function N(e,t,n,r){if(j.length){var o=j.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function A(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>j.length&&j.push(e)}function U(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case i:case a:u=!0}}if(u)return r(o,t,""===n?"."+M(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+M(l=t[c],c);u+=e(l,s,r,o)}else if(s=null===t||"object"!=typeof t?null:"function"==typeof(s=v&&t[v]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(l=t.next()).done;)u+=e(l=l.value,s=n+M(l,c++),r,o);else"object"===l&&g("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return u}(e,"",t,n)}function M(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function I(e,t){e.func.call(e.context,t,e.count++)}function L(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?D(e,r,n,function(e){return e}):null!=e&&(O(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(R,"$&/")+"/")+n)),r.push(e))}function D(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(R,"$&/")+"/"),U(e,L,t=N(t,i,r,o)),A(t)}var F={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return D(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;U(e,I,t=N(null,null,t,n)),A(t)},count:function(e){return U(e,function(){return null},null)},toArray:function(e){var t=[];return D(e,t,null,function(e){return e}),t},only:function(e){return O(e)||g("143"),e}},createRef:function(){return{current:null}},Component:k,PureComponent:T,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:d,render:e}},lazy:function(e){return{$$typeof:y,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},Fragment:l,StrictMode:u,Suspense:h,createElement:P,cloneElement:function(e,t,n){null==e&&g("267",e);var o=void 0,a=r({},e.props),l=e.key,u=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(u=t.ref,c=C.current),void 0!==t.key&&(l=""+t.key);var s=void 0;for(o in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)S.call(t,o)&&!_.hasOwnProperty(o)&&(a[o]=void 0===t[o]&&void 0!==s?s[o]:t[o])}if(1===(o=arguments.length-2))a.children=n;else if(1<o){s=Array(o);for(var f=0;f<o;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:i,type:e.type,key:l,ref:u,props:a,_owner:c}},createFactory:function(e){var t=P.bind(null,e);return t.type=e,t},isValidElement:O,version:"16.6.3",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:C,assign:r}};F.unstable_ConcurrentMode=p,F.unstable_Profiler=c;var z={default:F},W=z&&F||z;e.exports=W.default||W},function(e,t,n){"use strict";
/** @license React v16.6.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(1),o=n(8),i=n(14);function a(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,i,a,l],c=0;(e=Error(t.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||a("227");var l=!1,u=null,c=!1,s=null,f={onError:function(e){l=!0,u=e}};function p(e,t,n,r,o,i,a,c,s){l=!1,u=null,function(e,t,n,r,o,i,a,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}.apply(f,arguments)}var d=null,h={};function m(){if(d)for(var e in h){var t=h[e],n=d.indexOf(e);if(-1<n||a("96",e),!v[n])for(var r in t.extractEvents||a("97",e),v[n]=t,n=t.eventTypes){var o=void 0,i=n[r],l=t,u=r;g.hasOwnProperty(u)&&a("99",u),g[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&y(c[o],l,u);o=!0}else i.registrationName?(y(i.registrationName,l,u),o=!0):o=!1;o||a("98",r,e)}}}function y(e,t,n){b[e]&&a("100",e),b[e]=t,w[e]=t.eventTypes[n].dependencies}var v=[],g={},b={},w={},k=null,x=null,T=null;function E(e,t,n){var r=e.type||"unknown-event";e.currentTarget=T(n),function(e,t,n,r,o,i,f,d,h){if(p.apply(this,arguments),l){if(l){var m=u;l=!1,u=null}else a("198"),m=void 0;c||(c=!0,s=m)}}(r,t,void 0,e),e.currentTarget=null}function C(e,t){return null==t&&a("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function S(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var _=null;function P(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)E(e,t[r],n[r]);else t&&E(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var O={injectEventPluginOrder:function(e){d&&a("101"),d=Array.prototype.slice.call(e),m()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];h.hasOwnProperty(t)&&h[t]===r||(h[t]&&a("102",t),h[t]=r,n=!0)}n&&m()}};function R(e,t){var n=e.stateNode;if(!n)return null;var r=k(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&a("231",t,typeof n),n)}function j(e){if(null!==e&&(_=C(_,e)),e=_,_=null,e&&(S(e,P),_&&a("95"),c))throw e=s,c=!1,s=null,e}var N=Math.random().toString(36).slice(2),A="__reactInternalInstance$"+N,U="__reactEventHandlers$"+N;function M(e){if(e[A])return e[A];for(;!e[A];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[A]).tag||6===e.tag?e:null}function I(e){return!(e=e[A])||5!==e.tag&&6!==e.tag?null:e}function L(e){if(5===e.tag||6===e.tag)return e.stateNode;a("33")}function D(e){return e[U]||null}function F(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function z(e,t,n){(t=R(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=C(n._dispatchListeners,t),n._dispatchInstances=C(n._dispatchInstances,e))}function W(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=F(t);for(t=n.length;0<t--;)z(n[t],"captured",e);for(t=0;t<n.length;t++)z(n[t],"bubbled",e)}}function B(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=R(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=C(n._dispatchListeners,t),n._dispatchInstances=C(n._dispatchInstances,e))}function V(e){e&&e.dispatchConfig.registrationName&&B(e._targetInst,null,e)}function H(e){S(e,W)}var $=!("undefined"==typeof window||!window.document||!window.document.createElement);function q(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Y={animationend:q("Animation","AnimationEnd"),animationiteration:q("Animation","AnimationIteration"),animationstart:q("Animation","AnimationStart"),transitionend:q("Transition","TransitionEnd")},K={},Q={};function G(e){if(K[e])return K[e];if(!Y[e])return e;var t,n=Y[e];for(t in n)if(n.hasOwnProperty(t)&&t in Q)return K[e]=n[t];return e}$&&(Q=document.createElement("div").style,"AnimationEvent"in window||(delete Y.animationend.animation,delete Y.animationiteration.animation,delete Y.animationstart.animation),"TransitionEvent"in window||delete Y.transitionend.transition);var X=G("animationend"),J=G("animationiteration"),Z=G("animationstart"),ee=G("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,oe=null;function ie(){if(oe)return oe;var e,t,n=re,r=n.length,o="value"in ne?ne.value:ne.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return oe=o.slice(e,1<t?1-t:void 0)}function ae(){return!0}function le(){return!1}function ue(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ae:le,this.isPropagationStopped=le,this}function ce(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function se(e){e instanceof this||a("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function fe(e){e.eventPool=[],e.getPooled=ce,e.release=se}o(ue.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ae)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ae)},persist:function(){this.isPersistent=ae},isPersistent:le,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=le,this._dispatchInstances=this._dispatchListeners=null}}),ue.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},ue.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,fe(n),n},fe(ue);var pe=ue.extend({data:null}),de=ue.extend({data:null}),he=[9,13,27,32],me=$&&"CompositionEvent"in window,ye=null;$&&"documentMode"in document&&(ye=document.documentMode);var ve=$&&"TextEvent"in window&&!ye,ge=$&&(!me||ye&&8<ye&&11>=ye),be=String.fromCharCode(32),we={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},ke=!1;function xe(e,t){switch(e){case"keyup":return-1!==he.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Te(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Ee=!1;var Ce={eventTypes:we,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(me)e:{switch(e){case"compositionstart":o=we.compositionStart;break e;case"compositionend":o=we.compositionEnd;break e;case"compositionupdate":o=we.compositionUpdate;break e}o=void 0}else Ee?xe(e,n)&&(o=we.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=we.compositionStart);return o?(ge&&"ko"!==n.locale&&(Ee||o!==we.compositionStart?o===we.compositionEnd&&Ee&&(i=ie()):(re="value"in(ne=r)?ne.value:ne.textContent,Ee=!0)),o=pe.getPooled(o,t,n,r),i?o.data=i:null!==(i=Te(n))&&(o.data=i),H(o),i=o):i=null,(e=ve?function(e,t){switch(e){case"compositionend":return Te(t);case"keypress":return 32!==t.which?null:(ke=!0,be);case"textInput":return(e=t.data)===be&&ke?null:e;default:return null}}(e,n):function(e,t){if(Ee)return"compositionend"===e||!me&&xe(e,t)?(e=ie(),oe=re=ne=null,Ee=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return ge&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=de.getPooled(we.beforeInput,t,n,r)).data=e,H(t)):t=null,null===i?t:null===t?i:[i,t]}},Se=null,_e=null,Pe=null;function Oe(e){if(e=x(e)){"function"!=typeof Se&&a("280");var t=k(e.stateNode);Se(e.stateNode,e.type,t)}}function Re(e){_e?Pe?Pe.push(e):Pe=[e]:_e=e}function je(){if(_e){var e=_e,t=Pe;if(Pe=_e=null,Oe(e),t)for(e=0;e<t.length;e++)Oe(t[e])}}function Ne(e,t){return e(t)}function Ae(e,t,n){return e(t,n)}function Ue(){}var Me=!1;function Ie(e,t){if(Me)return e(t);Me=!0;try{return Ne(e,t)}finally{Me=!1,(null!==_e||null!==Pe)&&(Ue(),je())}}var Le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function De(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Le[e.type]:"textarea"===t}function Fe(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ze(e){if(!$)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function We(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Be(e){e._valueTracker||(e._valueTracker=function(e){var t=We(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Ve(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=We(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var He=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,$e=/^(.*)[\\\/]/,qe="function"==typeof Symbol&&Symbol.for,Ye=qe?Symbol.for("react.element"):60103,Ke=qe?Symbol.for("react.portal"):60106,Qe=qe?Symbol.for("react.fragment"):60107,Ge=qe?Symbol.for("react.strict_mode"):60108,Xe=qe?Symbol.for("react.profiler"):60114,Je=qe?Symbol.for("react.provider"):60109,Ze=qe?Symbol.for("react.context"):60110,et=qe?Symbol.for("react.concurrent_mode"):60111,tt=qe?Symbol.for("react.forward_ref"):60112,nt=qe?Symbol.for("react.suspense"):60113,rt=qe?Symbol.for("react.memo"):60115,ot=qe?Symbol.for("react.lazy"):60116,it="function"==typeof Symbol&&Symbol.iterator;function at(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=it&&e[it]||e["@@iterator"])?e:null}function lt(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case et:return"ConcurrentMode";case Qe:return"Fragment";case Ke:return"Portal";case Xe:return"Profiler";case Ge:return"StrictMode";case nt:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case Ze:return"Context.Consumer";case Je:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return lt(e.type);case ot:if(e=1===e._status?e._result:null)return lt(e)}return null}function ut(e){var t="";do{e:switch(e.tag){case 2:case 16:case 0:case 1:case 5:case 8:case 13:var n=e._debugOwner,r=e._debugSource,o=lt(e.type),i=null;n&&(i=lt(n.type)),n=o,o="",r?o=" (at "+r.fileName.replace($e,"")+":"+r.lineNumber+")":i&&(o=" (created by "+i+")"),i="\n    in "+(n||"Unknown")+o;break e;default:i=""}t+=i,e=e.return}while(e);return t}var ct=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,st=Object.prototype.hasOwnProperty,ft={},pt={};function dt(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var ht={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){ht[e]=new dt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];ht[t]=new dt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){ht[e]=new dt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){ht[e]=new dt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){ht[e]=new dt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){ht[e]=new dt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){ht[e]=new dt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){ht[e]=new dt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){ht[e]=new dt(e,5,!1,e.toLowerCase(),null)});var mt=/[\-:]([a-z])/g;function yt(e){return e[1].toUpperCase()}function vt(e,t,n,r){var o=ht.hasOwnProperty(t)?ht[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!st.call(pt,e)||!st.call(ft,e)&&(ct.test(e)?pt[e]=!0:(ft[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function gt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function bt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function wt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=gt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function kt(e,t){null!=(t=t.checked)&&vt(e,"checked",t,!1)}function xt(e,t){kt(e,t);var n=gt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Et(e,t.type,n):t.hasOwnProperty("defaultValue")&&Et(e,t.type,gt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Tt(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Et(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(mt,yt);ht[t]=new dt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(mt,yt);ht[t]=new dt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(mt,yt);ht[t]=new dt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),ht.tabIndex=new dt("tabIndex",1,!1,"tabindex",null);var Ct={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function St(e,t,n){return(e=ue.getPooled(Ct.change,e,t,n)).type="change",Re(n),H(e),e}var _t=null,Pt=null;function Ot(e){j(e)}function Rt(e){if(Ve(L(e)))return e}function jt(e,t){if("change"===e)return t}var Nt=!1;function At(){_t&&(_t.detachEvent("onpropertychange",Ut),Pt=_t=null)}function Ut(e){"value"===e.propertyName&&Rt(Pt)&&Ie(Ot,e=St(Pt,e,Fe(e)))}function Mt(e,t,n){"focus"===e?(At(),Pt=n,(_t=t).attachEvent("onpropertychange",Ut)):"blur"===e&&At()}function It(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Rt(Pt)}function Lt(e,t){if("click"===e)return Rt(t)}function Dt(e,t){if("input"===e||"change"===e)return Rt(t)}$&&(Nt=ze("input")&&(!document.documentMode||9<document.documentMode));var Ft={eventTypes:Ct,_isInputEventSupported:Nt,extractEvents:function(e,t,n,r){var o=t?L(t):window,i=void 0,a=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?i=jt:De(o)?Nt?i=Dt:(i=It,a=Mt):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=Lt),i&&(i=i(e,t)))return St(i,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Et(o,"number",o.value)}},zt=ue.extend({view:null,detail:null}),Wt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Bt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Wt[e])&&!!t[e]}function Vt(){return Bt}var Ht=0,$t=0,qt=!1,Yt=!1,Kt=zt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Vt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Ht;return Ht=e.screenX,qt?"mousemove"===e.type?e.screenX-t:0:(qt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=$t;return $t=e.screenY,Yt?"mousemove"===e.type?e.screenY-t:0:(Yt=!0,0)}}),Qt=Kt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Gt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Xt={eventTypes:Gt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,t=(t=n.relatedTarget||n.toElement)?M(t):null):i=null,i===t)return null;var a=void 0,l=void 0,u=void 0,c=void 0;"mouseout"===e||"mouseover"===e?(a=Kt,l=Gt.mouseLeave,u=Gt.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(a=Qt,l=Gt.pointerLeave,u=Gt.pointerEnter,c="pointer");var s=null==i?o:L(i);if(o=null==t?o:L(t),(e=a.getPooled(l,i,n,r)).type=c+"leave",e.target=s,e.relatedTarget=o,(n=a.getPooled(u,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=s,r=t,i&&r)e:{for(o=r,c=0,a=t=i;a;a=F(a))c++;for(a=0,u=o;u;u=F(u))a++;for(;0<c-a;)t=F(t),c--;for(;0<a-c;)o=F(o),a--;for(;c--;){if(t===o||t===o.alternate)break e;t=F(t),o=F(o)}t=null}else t=null;for(o=t,t=[];i&&i!==o&&(null===(c=i.alternate)||c!==o);)t.push(i),i=F(i);for(i=[];r&&r!==o&&(null===(c=r.alternate)||c!==o);)i.push(r),r=F(r);for(r=0;r<t.length;r++)B(t[r],"bubbled",e);for(r=i.length;0<r--;)B(i[r],"captured",n);return[e,n]}},Jt=Object.prototype.hasOwnProperty;function Zt(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}function en(e,t){if(Zt(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Jt.call(t,n[r])||!Zt(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&a("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&a("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,i=o?o.alternate:null;if(!o||!i)break;if(o.child===i.child){for(var l=o.child;l;){if(l===n)return nn(o),e;if(l===r)return nn(o),t;l=l.sibling}a("188")}if(n.return!==r.return)n=o,r=i;else{l=!1;for(var u=o.child;u;){if(u===n){l=!0,n=o,r=i;break}if(u===r){l=!0,r=o,n=i;break}u=u.sibling}if(!l){for(u=i.child;u;){if(u===n){l=!0,n=i,r=o;break}if(u===r){l=!0,r=i,n=o;break}u=u.sibling}l||a("189")}}n.alternate!==r&&a("190")}return 3!==n.tag&&a("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var on=ue.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=ue.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),ln=zt.extend({relatedTarget:null});function un(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var cn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},fn=zt.extend({key:function(e){if(e.key){var t=cn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=un(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?sn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Vt,charCode:function(e){return"keypress"===e.type?un(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?un(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),pn=Kt.extend({dataTransfer:null}),dn=zt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Vt}),hn=ue.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),mn=Kt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),yn=[["abort","abort"],[X,"animationEnd"],[J,"animationIteration"],[Z,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],vn={},gn={};function bn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},vn[e]=t,gn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){bn(e,!0)}),yn.forEach(function(e){bn(e,!1)});var wn={eventTypes:vn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=gn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=gn[e];if(!o)return null;switch(e){case"keypress":if(0===un(n))return null;case"keydown":case"keyup":e=fn;break;case"blur":case"focus":e=ln;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Kt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=pn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=dn;break;case X:case J:case Z:e=on;break;case ee:e=hn;break;case"scroll":e=zt;break;case"wheel":e=mn;break;case"copy":case"cut":case"paste":e=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Qt;break;default:e=ue}return H(t=e.getPooled(o,t,n,r)),t}},kn=wn.isInteractiveTopLevelEventType,xn=[];function Tn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=M(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=Fe(e.nativeEvent);r=e.topLevelType;for(var i=e.nativeEvent,a=null,l=0;l<v.length;l++){var u=v[l];u&&(u=u.extractEvents(r,t,i,o))&&(a=C(a,u))}j(a)}}var En=!0;function Cn(e,t){if(!t)return null;var n=(kn(e)?_n:Pn).bind(null,e);t.addEventListener(e,n,!1)}function Sn(e,t){if(!t)return null;var n=(kn(e)?_n:Pn).bind(null,e);t.addEventListener(e,n,!0)}function _n(e,t){Ae(Pn,e,t)}function Pn(e,t){if(En){var n=Fe(t);if(null===(n=M(n))||"number"!=typeof n.tag||2===tn(n)||(n=null),xn.length){var r=xn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Ie(Tn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>xn.length&&xn.push(e)}}}var On={},Rn=0,jn="_reactListenersID"+(""+Math.random()).slice(2);function Nn(e){return Object.prototype.hasOwnProperty.call(e,jn)||(e[jn]=Rn++,On[e[jn]]={}),On[e[jn]]}function An(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Un(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Mn(e,t){var n,r=Un(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Un(r)}}function In(){for(var e=window,t=An();t instanceof e.HTMLIFrameElement;){try{e=t.contentDocument.defaultView}catch(e){break}t=An(e.document)}return t}function Ln(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var Dn=$&&"documentMode"in document&&11>=document.documentMode,Fn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},zn=null,Wn=null,Bn=null,Vn=!1;function Hn(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Vn||null==zn||zn!==An(n)?null:("selectionStart"in(n=zn)&&Ln(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Bn&&en(Bn,n)?null:(Bn=n,(e=ue.getPooled(Fn.select,Wn,e,t)).type="select",e.target=zn,H(e),e))}var $n={eventTypes:Fn,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=Nn(i),o=w.onSelect;for(var a=0;a<o.length;a++){var l=o[a];if(!i.hasOwnProperty(l)||!i[l]){i=!1;break e}}i=!0}o=!i}if(o)return null;switch(i=t?L(t):window,e){case"focus":(De(i)||"true"===i.contentEditable)&&(zn=i,Wn=t,Bn=null);break;case"blur":Bn=Wn=zn=null;break;case"mousedown":Vn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Vn=!1,Hn(n,r);case"selectionchange":if(Dn)break;case"keydown":case"keyup":return Hn(n,r)}return null}};function qn(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function Yn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+gt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Kn(e,t){return null!=t.dangerouslySetInnerHTML&&a("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Qn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&a("92"),Array.isArray(t)&&(1>=t.length||a("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:gt(n)}}function Gn(e,t){var n=gt(t.value),r=gt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Xn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}O.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),k=D,x=I,T=L,O.injectEventPluginsByName({SimpleEventPlugin:wn,EnterLeaveEventPlugin:Xt,ChangeEventPlugin:Ft,SelectEventPlugin:$n,BeforeInputEventPlugin:Ce});var Jn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function Zn(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function er(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Zn(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var tr,nr=void 0,rr=(tr=function(e,t){if(e.namespaceURI!==Jn.svg||"innerHTML"in e)e.innerHTML=t;else{for((nr=nr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=nr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return tr(e,t)})}:tr);function or(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ir={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ar=["Webkit","ms","Moz","O"];function lr(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ir.hasOwnProperty(e)&&ir[e]?(""+t).trim():t+"px"}function ur(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=lr(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ir).forEach(function(e){ar.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ir[t]=ir[e]})});var cr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function sr(e,t){t&&(cr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&a("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&a("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||a("61")),null!=t.style&&"object"!=typeof t.style&&a("62",""))}function fr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function pr(e,t){var n=Nn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=w[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":Sn("scroll",e);break;case"focus":case"blur":Sn("focus",e),Sn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":ze(o)&&Sn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(o)&&Cn(o,e)}n[o]=!0}}}function dr(){}var hr=null,mr=null;function yr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function vr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var gr="function"==typeof setTimeout?setTimeout:void 0,br="function"==typeof clearTimeout?clearTimeout:void 0;function wr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function kr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var xr=[],Tr=-1;function Er(e){0>Tr||(e.current=xr[Tr],xr[Tr]=null,Tr--)}function Cr(e,t){xr[++Tr]=e.current,e.current=t}var Sr={},_r={current:Sr},Pr={current:!1},Or=Sr;function Rr(e,t){var n=e.type.contextTypes;if(!n)return Sr;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function jr(e){return null!=(e=e.childContextTypes)}function Nr(e){Er(Pr),Er(_r)}function Ar(e){Er(Pr),Er(_r)}function Ur(e,t,n){_r.current!==Sr&&a("168"),Cr(_r,t),Cr(Pr,n)}function Mr(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())i in e||a("108",lt(t)||"Unknown",i);return o({},n,r)}function Ir(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Sr,Or=_r.current,Cr(_r,t),Cr(Pr,Pr.current),!0}function Lr(e,t,n){var r=e.stateNode;r||a("169"),n?(t=Mr(e,t,Or),r.__reactInternalMemoizedMergedChildContext=t,Er(Pr),Er(_r),Cr(_r,t)):Er(Pr),Cr(Pr,n)}var Dr=null,Fr=null;function zr(e){return function(t){try{return e(t)}catch(e){}}}function Wr(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Br(e,t,n,r){return new Wr(e,t,n,r)}function Vr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Hr(e,t){var n=e.alternate;return null===n?((n=Br(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.firstContextDependency=e.firstContextDependency,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function $r(e,t,n,r,o,i){var l=2;if(r=e,"function"==typeof e)Vr(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case Qe:return qr(n.children,o,i,t);case et:return Yr(n,3|o,i,t);case Ge:return Yr(n,2|o,i,t);case Xe:return(e=Br(12,n,t,4|o)).elementType=Xe,e.type=Xe,e.expirationTime=i,e;case nt:return(e=Br(13,n,t,o)).elementType=nt,e.type=nt,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case Je:l=10;break e;case Ze:l=9;break e;case tt:l=11;break e;case rt:l=14;break e;case ot:l=16,r=null;break e}a("130",null==e?e:typeof e,"")}return(t=Br(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function qr(e,t,n,r){return(e=Br(7,e,r,t)).expirationTime=n,e}function Yr(e,t,n,r){return e=Br(8,e,r,t),t=0==(1&t)?Ge:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Kr(e,t,n){return(e=Br(6,e,null,t)).expirationTime=n,e}function Qr(e,t,n){return(t=Br(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Gr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),Zr(t,e)}function Xr(e,t){e.didError=!1;var n=e.latestPingedTime;0!==n&&n>=t&&(e.latestPingedTime=0),n=e.earliestPendingTime;var r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),Zr(t,e)}function Jr(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function Zr(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,i=t.latestPingedTime;0===(o=0!==o?o:i)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}var eo=!1;function to(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function no(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function ro(e){return{expirationTime:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function oo(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function io(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=to(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=to(e.memoizedState),o=n.updateQueue=to(n.memoizedState)):r=e.updateQueue=no(o):null===o&&(o=n.updateQueue=no(r));null===o||r===o?oo(r,t):null===r.lastUpdate||null===o.lastUpdate?(oo(r,t),oo(o,t)):(oo(r,t),o.lastUpdate=t)}function ao(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=to(e.memoizedState):lo(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function lo(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=no(t)),t}function uo(e,t,n,r,i,a){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(a,r,i):e;case 3:e.effectTag=-2049&e.effectTag|64;case 0:if(null==(i="function"==typeof(e=n.payload)?e.call(a,r,i):e))break;return o({},r,i);case 2:eo=!0}return r}function co(e,t,n,r,o){eo=!1;for(var i=(t=lo(e,t)).baseState,a=null,l=0,u=t.firstUpdate,c=i;null!==u;){var s=u.expirationTime;s<o?(null===a&&(a=u,i=c),l<s&&(l=s)):(c=uo(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(s=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f<o?(null===s&&(s=u,null===a&&(i=c)),l<f&&(l=f)):(c=uo(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===a&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===s&&(i=c),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=s,e.expirationTime=l,e.memoizedState=c}function so(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),fo(t.firstEffect,n),t.firstEffect=t.lastEffect=null,fo(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function fo(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&a("191",n),n.call(r)}e=e.nextEffect}}function po(e,t){return{value:e,source:t,stack:ut(t)}}var ho={current:null},mo=null,yo=null,vo=null;function go(e,t){var n=e.type._context;Cr(ho,n._currentValue),n._currentValue=t}function bo(e){var t=ho.current;Er(ho),e.type._context._currentValue=t}function wo(e){mo=e,vo=yo=null,e.firstContextDependency=null}function ko(e,t){return vo!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(vo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===yo?(null===mo&&a("293"),mo.firstContextDependency=yo=t):yo=yo.next=t),e._currentValue}var xo={},To={current:xo},Eo={current:xo},Co={current:xo};function So(e){return e===xo&&a("174"),e}function _o(e,t){Cr(Co,t),Cr(Eo,e),Cr(To,xo);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:er(null,"");break;default:t=er(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}Er(To),Cr(To,t)}function Po(e){Er(To),Er(Eo),Er(Co)}function Oo(e){So(Co.current);var t=So(To.current),n=er(t,e.type);t!==n&&(Cr(Eo,e),Cr(To,n))}function Ro(e){Eo.current===e&&(Er(To),Er(Eo))}function jo(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var No=He.ReactCurrentOwner,Ao=(new r.Component).refs;function Uo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var Mo={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Ea(),o=ro(r=Gi(r,e));o.payload=t,null!=n&&(o.callback=n),$i(),io(e,o),Zi(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Ea(),o=ro(r=Gi(r,e));o.tag=1,o.payload=t,null!=n&&(o.callback=n),$i(),io(e,o),Zi(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Ea(),r=ro(n=Gi(n,e));r.tag=2,null!=t&&(r.callback=t),$i(),io(e,r),Zi(e,n)}};function Io(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(o,i))}function Lo(e,t,n){var r=!1,o=Sr,i=t.contextType;return"object"==typeof i&&null!==i?i=No.currentDispatcher.readContext(i):(o=jr(t)?Or:_r.current,i=(r=null!=(r=t.contextTypes))?Rr(e,o):Sr),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Mo,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function Do(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Mo.enqueueReplaceState(t,t.state,null)}function Fo(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=Ao;var i=t.contextType;"object"==typeof i&&null!==i?o.context=No.currentDispatcher.readContext(i):(i=jr(t)?Or:_r.current,o.context=Rr(e,i)),null!==(i=e.updateQueue)&&(co(e,i,n,o,r),o.state=e.memoizedState),"function"==typeof(i=t.getDerivedStateFromProps)&&(Uo(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&Mo.enqueueReplaceState(o,o.state,null),null!==(i=e.updateQueue)&&(co(e,i,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var zo=Array.isArray;function Wo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&a("289"),r=n.stateNode),r||a("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===Ao&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&a("284"),n._owner||a("290",e)}return e}function Bo(e,t){"textarea"!==e.type&&a("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function Vo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Hr(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Kr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=Wo(e,t,n),r.return=e,r):((r=$r(n.type,n.key,n.props,null,e.mode,r)).ref=Wo(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Qr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=qr(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Kr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Ye:return(n=$r(t.type,t.key,t.props,null,e.mode,n)).ref=Wo(e,null,t),n.return=e,n;case Ke:return(t=Qr(t,e.mode,n)).return=e,t}if(zo(t)||at(t))return(t=qr(t,e.mode,n,null)).return=e,t;Bo(e,t)}return null}function d(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Ye:return n.key===o?n.type===Qe?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case Ke:return n.key===o?s(e,t,n,r):null}if(zo(n)||at(n))return null!==o?null:f(e,t,n,r,null);Bo(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Ye:return e=e.get(null===r.key?n:r.key)||null,r.type===Qe?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case Ke:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(zo(r)||at(r))return f(t,e=e.get(n)||null,r,o,null);Bo(t,r)}return null}function m(o,a,l,u){for(var c=null,s=null,f=a,m=a=0,y=null;null!==f&&m<l.length;m++){f.index>m?(y=f,f=null):y=f.sibling;var v=d(o,f,l[m],u);if(null===v){null===f&&(f=y);break}e&&f&&null===v.alternate&&t(o,f),a=i(v,a,m),null===s?c=v:s.sibling=v,s=v,f=y}if(m===l.length)return n(o,f),c;if(null===f){for(;m<l.length;m++)(f=p(o,l[m],u))&&(a=i(f,a,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);m<l.length;m++)(y=h(f,o,m,l[m],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?m:y.key),a=i(y,a,m),null===s?c=y:s.sibling=y,s=y);return e&&f.forEach(function(e){return t(o,e)}),c}function y(o,l,u,c){var s=at(u);"function"!=typeof s&&a("150"),null==(u=s.call(u))&&a("151");for(var f=s=null,m=l,y=l=0,v=null,g=u.next();null!==m&&!g.done;y++,g=u.next()){m.index>y?(v=m,m=null):v=m.sibling;var b=d(o,m,g.value,c);if(null===b){m||(m=v);break}e&&m&&null===b.alternate&&t(o,m),l=i(b,l,y),null===f?s=b:f.sibling=b,f=b,m=v}if(g.done)return n(o,m),s;if(null===m){for(;!g.done;y++,g=u.next())null!==(g=p(o,g.value,c))&&(l=i(g,l,y),null===f?s=g:f.sibling=g,f=g);return s}for(m=r(o,m);!g.done;y++,g=u.next())null!==(g=h(m,o,y,g.value,c))&&(e&&null!==g.alternate&&m.delete(null===g.key?y:g.key),l=i(g,l,y),null===f?s=g:f.sibling=g,f=g);return e&&m.forEach(function(e){return t(o,e)}),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===Qe&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case Ye:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){if(7===c.tag?i.type===Qe:c.elementType===i.type){n(e,c.sibling),(r=o(c,i.type===Qe?i.props.children:i.props)).ref=Wo(e,c,i),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===Qe?((r=qr(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=$r(i.type,i.key,i.props,null,e.mode,u)).ref=Wo(e,r,i),u.return=e,e=u)}return l(e);case Ke:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Qr(i,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Kr(i,e.mode,u)).return=e,e=r),l(e);if(zo(i))return m(e,r,i,u);if(at(i))return y(e,r,i,u);if(s&&Bo(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:a("152",(u=e.type).displayName||u.name||"Component")}return n(e,r)}}var Ho=Vo(!0),$o=Vo(!1),qo=null,Yo=null,Ko=!1;function Qo(e,t){var n=Br(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Go(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Xo(e){if(Ko){var t=Yo;if(t){var n=t;if(!Go(e,t)){if(!(t=wr(n))||!Go(e,t))return e.effectTag|=2,Ko=!1,void(qo=e);Qo(qo,n)}qo=e,Yo=kr(t)}else e.effectTag|=2,Ko=!1,qo=e}}function Jo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;qo=e}function Zo(e){if(e!==qo)return!1;if(!Ko)return Jo(e),Ko=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!vr(t,e.memoizedProps))for(t=Yo;t;)Qo(e,t),t=wr(t);return Jo(e),Yo=qo?wr(e.stateNode):null,!0}function ei(){Yo=qo=null,Ko=!1}var ti=He.ReactCurrentOwner;function ni(e,t,n,r){t.child=null===e?$o(t,null,n,r):Ho(t,e.child,n,r)}function ri(e,t,n,r,o){n=n.render;var i=t.ref;return wo(t),r=n(r,i),t.effectTag|=1,ni(e,t,r,o),t.child}function oi(e,t,n,r,o,i){if(null===e){var a=n.type;return"function"!=typeof a||Vr(a)||void 0!==a.defaultProps||null!==n.compare?((e=$r(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,ii(e,t,a,r,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(n=null!==(n=n.compare)?n:en)(o,r)&&e.ref===t.ref)?pi(e,t,i):(t.effectTag|=1,(e=Hr(a,r)).ref=t.ref,e.return=t,t.child=e)}function ii(e,t,n,r,o,i){return null!==e&&o<i&&en(e.memoizedProps,r)&&e.ref===t.ref?pi(e,t,i):li(e,t,n,r,i)}function ai(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function li(e,t,n,r,o){var i=jr(n)?Or:_r.current;return i=Rr(t,i),wo(t),n=n(r,i),t.effectTag|=1,ni(e,t,n,o),t.child}function ui(e,t,n,r,o){if(jr(n)){var i=!0;Ir(t)}else i=!1;if(wo(t),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),Lo(t,n,r),Fo(t,n,r,o),r=!0;else if(null===e){var a=t.stateNode,l=t.memoizedProps;a.props=l;var u=a.context,c=n.contextType;"object"==typeof c&&null!==c?c=No.currentDispatcher.readContext(c):c=Rr(t,c=jr(n)?Or:_r.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&Do(t,a,r,c),eo=!1;var p=t.memoizedState;u=a.state=p;var d=t.updateQueue;null!==d&&(co(t,d,r,a,o),u=t.memoizedState),l!==r||p!==u||Pr.current||eo?("function"==typeof s&&(Uo(t,n,s,r),u=t.memoizedState),(l=eo||Io(t,n,l,r,p,u,c))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),a.props=r,a.state=u,a.context=c,r=l):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,l=t.memoizedProps,a.props=t.type===t.elementType?l:jo(t.type,l),u=a.context,"object"==typeof(c=n.contextType)&&null!==c?c=No.currentDispatcher.readContext(c):c=Rr(t,c=jr(n)?Or:_r.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&Do(t,a,r,c),eo=!1,u=t.memoizedState,p=a.state=u,null!==(d=t.updateQueue)&&(co(t,d,r,a,o),p=t.memoizedState),l!==r||u!==p||Pr.current||eo?("function"==typeof s&&(Uo(t,n,s,r),p=t.memoizedState),(s=eo||Io(t,n,l,r,u,p,c))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,p,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,p,c)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=p),a.props=r,a.state=p,a.context=c,r=s):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return ci(e,t,n,r,i,o)}function ci(e,t,n,r,o,i){ai(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&Lr(t,n,!1),pi(e,t,i);r=t.stateNode,ti.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=Ho(t,e.child,null,i),t.child=Ho(t,null,l,i)):ni(e,t,l,i),t.memoizedState=r.state,o&&Lr(t,n,!0),t.child}function si(e){var t=e.stateNode;t.pendingContext?Ur(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ur(0,t.context,!1),_o(e,t.containerInfo)}function fi(e,t,n){var r=t.mode,o=t.pendingProps,i=t.memoizedState;if(0==(64&t.effectTag)){i=null;var a=!1}else i={timedOutAt:null!==i?i.timedOutAt:0},a=!0,t.effectTag&=-65;return null===e?a?(a=o.fallback,o=qr(null,r,0,null),0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),r=qr(a,r,n,null),o.sibling=r,(n=o).return=r.return=t):n=r=$o(t,null,o.children,n):null!==e.memoizedState?(e=(r=e.child).sibling,a?(n=o.fallback,o=Hr(r,r.pendingProps),0==(1&t.mode)&&((a=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=a)),r=o.sibling=Hr(e,n,e.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=Ho(t,r.child,o.children,n)):(e=e.child,a?(a=o.fallback,(o=qr(null,r,0,null)).child=e,0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),(r=o.sibling=qr(a,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=Ho(t,e,o.children,n)),t.memoizedState=i,t.child=n,r}function pi(e,t,n){if(null!==e&&(t.firstContextDependency=e.firstContextDependency),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&a("153"),null!==t.child){for(n=Hr(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Hr(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function di(e,t,n){var r=t.expirationTime;if(null!==e&&e.memoizedProps===t.pendingProps&&!Pr.current&&r<n){switch(t.tag){case 3:si(t),ei();break;case 5:Oo(t);break;case 1:jr(t.type)&&Ir(t);break;case 4:_o(t,t.stateNode.containerInfo);break;case 10:go(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?fi(e,t,n):null!==(t=pi(e,t,n))?t.sibling:null}return pi(e,t,n)}switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=Rr(t,_r.current);if(wo(t),o=r(e,o),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,jr(r)){var i=!0;Ir(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var l=r.getDerivedStateFromProps;"function"==typeof l&&Uo(t,r,l,e),o.updater=Mo,t.stateNode=o,o._reactInternalFiber=t,Fo(t,r,e,n),t=ci(null,t,r,!0,i,n)}else t.tag=0,ni(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),i=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:throw e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._result=t,t}}(o),t.type=e,o=t.tag=function(e){if("function"==typeof e)return Vr(e)?1:0;if(null!=e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),i=jo(e,i),l=void 0,o){case 0:l=li(null,t,e,i,n);break;case 1:l=ui(null,t,e,i,n);break;case 11:l=ri(null,t,e,i,n);break;case 14:l=oi(null,t,e,jo(e.type,i),r,n);break;default:a("283",e)}return l;case 0:return r=t.type,o=t.pendingProps,li(e,t,r,o=t.elementType===r?o:jo(r,o),n);case 1:return r=t.type,o=t.pendingProps,ui(e,t,r,o=t.elementType===r?o:jo(r,o),n);case 3:return si(t),null===(r=t.updateQueue)&&a("282"),o=null!==(o=t.memoizedState)?o.element:null,co(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(ei(),t=pi(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(Yo=kr(t.stateNode.containerInfo),qo=t,o=Ko=!0),o?(t.effectTag|=2,t.child=$o(t,null,r,n)):(ni(e,t,r,n),ei()),t=t.child),t;case 5:return Oo(t),null===e&&Xo(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,vr(r,o)?l=null:null!==i&&vr(r,i)&&(t.effectTag|=16),ai(e,t),1!==n&&1&t.mode&&o.hidden?(t.expirationTime=1,t=null):(ni(e,t,l,n),t=t.child),t;case 6:return null===e&&Xo(t),null;case 13:return fi(e,t,n);case 4:return _o(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Ho(t,null,r,n):ni(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,ri(e,t,r,o=t.elementType===r?o:jo(r,o),n);case 7:return ni(e,t,t.pendingProps,n),t.child;case 8:case 12:return ni(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,l=t.memoizedProps,go(t,i=o.value),null!==l){var u=l.value;if(0===(i=u===i&&(0!==u||1/u==1/i)||u!=u&&i!=i?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(l.children===o.children&&!Pr.current){t=pi(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){if(null!==(u=l.firstContextDependency))do{if(u.context===r&&0!=(u.observedBits&i)){if(1===l.tag){var c=ro(n);c.tag=2,io(l,c)}l.expirationTime<n&&(l.expirationTime=n),null!==(c=l.alternate)&&c.expirationTime<n&&(c.expirationTime=n);for(var s=l.return;null!==s;){if(c=s.alternate,s.childExpirationTime<n)s.childExpirationTime=n,null!==c&&c.childExpirationTime<n&&(c.childExpirationTime=n);else{if(!(null!==c&&c.childExpirationTime<n))break;c.childExpirationTime=n}s=s.return}}c=l.child,u=u.next}while(null!==u);else c=10===l.tag&&l.type===t.type?null:l.child;if(null!==c)c.return=l;else for(c=l;null!==c;){if(c===t){c=null;break}if(null!==(l=c.sibling)){l.return=c.return,c=l;break}c=c.return}l=c}}ni(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,wo(t),r=r(o=ko(o,i.unstable_observedBits)),t.effectTag|=1,ni(e,t,r,n),t.child;case 14:return oi(e,t,o=t.type,i=jo(o.type,t.pendingProps),r,n);case 15:return ii(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:jo(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,jr(r)?(e=!0,Ir(t)):e=!1,wo(t),Lo(t,r,o),Fo(t,r,o,n),ci(null,t,r,!0,e,n);default:a("156")}}function hi(e){e.effectTag|=4}var mi=void 0,yi=void 0,vi=void 0,gi=void 0;function bi(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ut(n)),null!==n&&lt(n.type),t=t.value,null!==e&&1===e.tag&&lt(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function wi(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Qi(e,t)}else t.current=null}function ki(e){switch("function"==typeof Fr&&Fr(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(null!==r){var o=e;try{r()}catch(e){Qi(o,e)}}n=n.next}while(n!==t)}break;case 1:if(wi(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Qi(e,t)}break;case 5:wi(e);break;case 4:Ei(e)}}function xi(e){return 5===e.tag||3===e.tag||4===e.tag}function Ti(e){e:{for(var t=e.return;null!==t;){if(xi(t)){var n=t;break e}t=t.return}a("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:a("161")}16&n.effectTag&&(or(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||xi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var i=t,l=o.stateNode,u=n;8===i.nodeType?i.parentNode.insertBefore(l,u):i.insertBefore(l,u)}else t.insertBefore(o.stateNode,n);else r?(l=t,u=o.stateNode,8===l.nodeType?(i=l.parentNode).insertBefore(u,l):(i=l).appendChild(u),null!=(l=l._reactRootContainer)||null!==i.onclick||(i.onclick=dr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function Ei(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&a("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var i=t,l=i;;)if(ki(l),null!==l.child&&4!==l.tag)l.child.return=l,l=l.child;else{if(l===i)break;for(;null===l.sibling;){if(null===l.return||l.return===i)break e;l=l.return}l.sibling.return=l.return,l=l.sibling}o?(i=r,l=t.stateNode,8===i.nodeType?i.parentNode.removeChild(l):i.removeChild(l)):r.removeChild(t.stateNode)}else if(4===t.tag?(r=t.stateNode.containerInfo,o=!0):ki(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function Ci(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[U]=r,"input"===e&&"radio"===r.type&&null!=r.name&&kt(n,r),fr(e,o),t=fr(e,r),o=0;o<i.length;o+=2){var l=i[o],u=i[o+1];"style"===l?ur(n,u):"dangerouslySetInnerHTML"===l?rr(n,u):"children"===l?or(n,u):vt(n,l,u,t)}switch(e){case"input":xt(n,r);break;case"textarea":Gn(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Yn(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Yn(n,!!r.multiple,r.defaultValue,!0):Yn(n,!!r.multiple,r.multiple?[]:"",!1))}}}break;case 6:null===t.stateNode&&a("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(e=t,null===(n=t.memoizedState)?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=Ea())),null!==e)e:for(t=n=e;;){if(5===t.tag)e=t.stateNode,r?e.style.display="none":(e=t.stateNode,i=null!=(i=t.memoizedProps.style)&&i.hasOwnProperty("display")?i.display:null,e.style.display=lr("display",i));else if(6===t.tag)t.stateNode.nodeValue=r?"":t.memoizedProps;else{if(13===t.tag&&null!==t.memoizedState){(e=t.child.sibling).return=t,t=e;continue}if(null!==t.child){t.child.return=t,t=t.child;continue}}if(t===n)break e;for(;null===t.sibling;){if(null===t.return||t.return===n)break e;t=t.return}t.sibling.return=t.return,t=t.sibling}break;case 17:break;default:a("163")}}function Si(e,t,n){(n=ro(n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Ua(r),bi(e,t)},n}function _i(e,t,n){(n=ro(n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Vi?Vi=new Set([this]):Vi.add(this));var n=t.value,o=t.stack;bi(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function Pi(e){switch(e.tag){case 1:jr(e.type)&&Nr();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return Po(),Ar(),0!=(64&(t=e.effectTag))&&a("285"),e.effectTag=-2049&t|64,e;case 5:return Ro(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 4:return Po(),null;case 10:return bo(e),null;default:return null}}mi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},yi=function(){},vi=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var l=t.stateNode;switch(So(To.current),e=null,n){case"input":a=bt(l,a),r=bt(l,r),e=[];break;case"option":a=qn(l,a),r=qn(l,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=Kn(l,a),r=Kn(l,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(l.onclick=dr)}sr(n,r),l=n=void 0;var u=null;for(n in a)if(!r.hasOwnProperty(n)&&a.hasOwnProperty(n)&&null!=a[n])if("style"===n){var c=a[n];for(l in c)c.hasOwnProperty(l)&&(u||(u={}),u[l]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(b.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var s=r[n];if(c=null!=a?a[n]:void 0,r.hasOwnProperty(n)&&s!==c&&(null!=s||null!=c))if("style"===n)if(c){for(l in c)!c.hasOwnProperty(l)||s&&s.hasOwnProperty(l)||(u||(u={}),u[l]="");for(l in s)s.hasOwnProperty(l)&&c[l]!==s[l]&&(u||(u={}),u[l]=s[l])}else u||(e||(e=[]),e.push(n,u)),u=s;else"dangerouslySetInnerHTML"===n?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(n,""+s)):"children"===n?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(n,""+s):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(b.hasOwnProperty(n)?(null!=s&&pr(i,n),e||c===s||(e=[])):(e=e||[]).push(n,s))}u&&(e=e||[]).push("style",u),i=e,(t.updateQueue=i)&&hi(t)}},gi=function(e,t,n,r){n!==r&&hi(t)};var Oi={readContext:ko},Ri=He.ReactCurrentOwner,ji=1073741822,Ni=0,Ai=!1,Ui=null,Mi=null,Ii=0,Li=-1,Di=!1,Fi=null,zi=!1,Wi=null,Bi=null,Vi=null;function Hi(){if(null!==Ui)for(var e=Ui.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!=n&&Nr();break;case 3:Po(),Ar();break;case 5:Ro(t);break;case 4:Po();break;case 10:bo(t)}e=e.return}Mi=null,Ii=0,Li=-1,Di=!1,Ui=null}function $i(){null!==Bi&&(i.unstable_cancelCallback(Wi),Bi())}function qi(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){Ui=e;e:{var i=t,l=Ii,u=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:jr(t.type)&&Nr();break;case 3:Po(),Ar(),(u=t.stateNode).pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),null!==i&&null!==i.child||(Zo(t),t.effectTag&=-3),yi(t);break;case 5:Ro(t);var c=So(Co.current);if(l=t.type,null!==i&&null!=t.stateNode)vi(i,t,l,u,c),i.ref!==t.ref&&(t.effectTag|=128);else if(u){var s=So(To.current);if(Zo(t)){i=(u=t).stateNode;var f=u.type,p=u.memoizedProps,d=c;switch(i[A]=u,i[U]=p,l=void 0,c=f){case"iframe":case"object":Cn("load",i);break;case"video":case"audio":for(f=0;f<te.length;f++)Cn(te[f],i);break;case"source":Cn("error",i);break;case"img":case"image":case"link":Cn("error",i),Cn("load",i);break;case"form":Cn("reset",i),Cn("submit",i);break;case"details":Cn("toggle",i);break;case"input":wt(i,p),Cn("invalid",i),pr(d,"onChange");break;case"select":i._wrapperState={wasMultiple:!!p.multiple},Cn("invalid",i),pr(d,"onChange");break;case"textarea":Qn(i,p),Cn("invalid",i),pr(d,"onChange")}for(l in sr(c,p),f=null,p)p.hasOwnProperty(l)&&(s=p[l],"children"===l?"string"==typeof s?i.textContent!==s&&(f=["children",s]):"number"==typeof s&&i.textContent!==""+s&&(f=["children",""+s]):b.hasOwnProperty(l)&&null!=s&&pr(d,l));switch(c){case"input":Be(i),Tt(i,p,!0);break;case"textarea":Be(i),Xn(i);break;case"select":case"option":break;default:"function"==typeof p.onClick&&(i.onclick=dr)}l=f,u.updateQueue=l,(u=null!==l)&&hi(t)}else{p=t,i=l,d=u,f=9===c.nodeType?c:c.ownerDocument,s===Jn.html&&(s=Zn(i)),s===Jn.html?"script"===i?((i=f.createElement("div")).innerHTML="<script><\/script>",f=i.removeChild(i.firstChild)):"string"==typeof d.is?f=f.createElement(i,{is:d.is}):(f=f.createElement(i),"select"===i&&d.multiple&&(f.multiple=!0)):f=f.createElementNS(s,i),(i=f)[A]=p,i[U]=u,mi(i,t,!1,!1),d=i;var h=c,m=fr(f=l,p=u);switch(f){case"iframe":case"object":Cn("load",d),c=p;break;case"video":case"audio":for(c=0;c<te.length;c++)Cn(te[c],d);c=p;break;case"source":Cn("error",d),c=p;break;case"img":case"image":case"link":Cn("error",d),Cn("load",d),c=p;break;case"form":Cn("reset",d),Cn("submit",d),c=p;break;case"details":Cn("toggle",d),c=p;break;case"input":wt(d,p),c=bt(d,p),Cn("invalid",d),pr(h,"onChange");break;case"option":c=qn(d,p);break;case"select":d._wrapperState={wasMultiple:!!p.multiple},c=o({},p,{value:void 0}),Cn("invalid",d),pr(h,"onChange");break;case"textarea":Qn(d,p),c=Kn(d,p),Cn("invalid",d),pr(h,"onChange");break;default:c=p}sr(f,c),s=void 0;var y=f,v=d,g=c;for(s in g)if(g.hasOwnProperty(s)){var w=g[s];"style"===s?ur(v,w):"dangerouslySetInnerHTML"===s?null!=(w=w?w.__html:void 0)&&rr(v,w):"children"===s?"string"==typeof w?("textarea"!==y||""!==w)&&or(v,w):"number"==typeof w&&or(v,""+w):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(b.hasOwnProperty(s)?null!=w&&pr(h,s):null!=w&&vt(v,s,w,m))}switch(f){case"input":Be(d),Tt(d,p,!1);break;case"textarea":Be(d),Xn(d);break;case"option":null!=p.value&&d.setAttribute("value",""+gt(p.value));break;case"select":(c=d).multiple=!!p.multiple,null!=(d=p.value)?Yn(c,!!p.multiple,d,!1):null!=p.defaultValue&&Yn(c,!!p.multiple,p.defaultValue,!0);break;default:"function"==typeof c.onClick&&(d.onclick=dr)}(u=yr(l,u))&&hi(t),t.stateNode=i}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&a("166");break;case 6:i&&null!=t.stateNode?gi(i,t,i.memoizedProps,u):("string"!=typeof u&&(null===t.stateNode&&a("166")),i=So(Co.current),So(To.current),Zo(t)?(l=(u=t).stateNode,i=u.memoizedProps,l[A]=u,(u=l.nodeValue!==i)&&hi(t)):(l=t,(u=(9===i.nodeType?i:i.ownerDocument).createTextNode(u))[A]=t,l.stateNode=u));break;case 11:break;case 13:if(u=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=l,Ui=t;break e}u=null!==u,l=null!==i&&null!==i.memoizedState,null!==i&&!u&&l&&(null!==(i=i.child.sibling)&&(null!==(c=t.firstEffect)?(t.firstEffect=i,i.nextEffect=c):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),(u!==l||0==(1&t.effectTag)&&u)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Po(),yi(t);break;case 10:bo(t);break;case 9:case 14:break;case 17:jr(t.type)&&Nr();break;default:a("156")}Ui=null}if(t=e,1===Ii||1!==t.childExpirationTime){for(u=0,l=t.child;null!==l;)(i=l.expirationTime)>u&&(u=i),(c=l.childExpirationTime)>u&&(u=c),l=l.sibling;t.childExpirationTime=u}if(null!==Ui)return Ui;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=Pi(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function Yi(e){var t=di(e.alternate,e,Ii);return e.memoizedProps=e.pendingProps,null===t&&(t=qi(e)),Ri.current=null,t}function Ki(e,t){Ai&&a("243"),$i(),Ai=!0,Ri.currentDispatcher=Oi;var n=e.nextExpirationTimeToWorkOn;n===Ii&&e===Mi&&null!==Ui||(Hi(),Ii=n,Ui=Hr((Mi=e).current,null),e.pendingCommitExpirationTime=0);for(var r=!1;;){try{if(t)for(;null!==Ui&&!Pa();)Ui=Yi(Ui);else for(;null!==Ui;)Ui=Yi(Ui)}catch(t){if(vo=yo=mo=null,null===Ui)r=!0,Ua(t);else{null===Ui&&a("271");var o=Ui,i=o.return;if(null!==i){e:{var l=e,u=i,c=o,s=t;if(i=Ii,c.effectTag|=1024,c.firstEffect=c.lastEffect=null,null!==s&&"object"==typeof s&&"function"==typeof s.then){var f=s;s=u;var p=-1,d=-1;do{if(13===s.tag){var h=s.alternate;if(null!==h&&null!==(h=h.memoizedState)){d=10*(1073741822-h.timedOutAt);break}"number"==typeof(h=s.pendingProps.maxDuration)&&(0>=h?p=0:(-1===p||h<p)&&(p=h))}s=s.return}while(null!==s);s=u;do{if((h=13===s.tag)&&(h=void 0!==s.memoizedProps.fallback&&null===s.memoizedState),h){if(u=Xi.bind(null,l,s,c,0==(1&s.mode)?1073741823:i),f.then(u,u),0==(1&s.mode)){s.effectTag|=64,c.effectTag&=-1957,1===c.tag&&null===c.alternate&&(c.tag=17),c.expirationTime=i;break e}-1===p?l=1073741823:(-1===d&&(d=10*(1073741822-Jr(l,i))-5e3),l=d+p),0<=l&&Li<l&&(Li=l),s.effectTag|=2048,s.expirationTime=i;break e}s=s.return}while(null!==s);s=Error((lt(c.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ut(c))}Di=!0,s=po(s,c),l=u;do{switch(l.tag){case 3:c=s,l.effectTag|=2048,l.expirationTime=i,ao(l,i=Si(l,c,i));break e;case 1:if(c=s,u=l.type,f=l.stateNode,0==(64&l.effectTag)&&("function"==typeof u.getDerivedStateFromError||null!==f&&"function"==typeof f.componentDidCatch&&(null===Vi||!Vi.has(f)))){l.effectTag|=2048,l.expirationTime=i,ao(l,i=_i(l,c,i));break e}}l=l.return}while(null!==l)}Ui=qi(o);continue}r=!0,Ua(t)}}break}if(Ai=!1,vo=yo=mo=Ri.currentDispatcher=null,r)Mi=null,e.finishedWork=null;else if(null!==Ui)e.finishedWork=null;else{if(null===(r=e.current.alternate)&&a("281"),Mi=null,Di){if(o=e.latestPendingTime,i=e.latestSuspendedTime,l=e.latestPingedTime,0!==o&&o<n||0!==i&&i<n||0!==l&&l<n)return Xr(e,n),void Ta(e,r,n,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,n=e.nextExpirationTimeToWorkOn=n,t=e.expirationTime=1073741823,void Ta(e,r,n,t,-1)}t&&-1!==Li?(Xr(e,n),(t=10*(1073741822-Jr(e,n)))<Li&&(Li=t),t=10*(1073741822-Ea()),t=Li-t,Ta(e,r,n,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=n,e.finishedWork=r)}}function Qi(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Vi||!Vi.has(r)))return io(n,e=_i(n,e=po(t,e),1073741823)),void Zi(n,1073741823);break;case 3:return io(n,e=Si(n,e=po(t,e),1073741823)),void Zi(n,1073741823)}n=n.return}3===e.tag&&(io(e,n=Si(e,n=po(t,e),1073741823)),Zi(e,1073741823))}function Gi(e,t){return 0!==Ni?e=Ni:Ai?e=zi?1073741823:Ii:1&t.mode?(e=da?1073741822-10*(1+((1073741822-e+15)/10|0)):1073741822-25*(1+((1073741822-e+500)/25|0)),null!==Mi&&e===Ii&&--e):e=1073741823,da&&(0===ua||e<ua)&&(ua=e),e}function Xi(e,t,n,r){var o=e.earliestSuspendedTime,i=e.latestSuspendedTime;if(0!==o&&r<=o&&r>=i){i=o=r,e.didError=!1;var a=e.latestPingedTime;(0===a||a>i)&&(e.latestPingedTime=i),Zr(i,e)}else Gr(e,o=Gi(o=Ea(),t));0!=(1&t.mode)&&e===Mi&&Ii===r&&(Mi=null),Ji(t,o),0==(1&t.mode)&&(Ji(n,o),1===n.tag&&null!==n.stateNode&&((t=ro(o)).tag=2,io(n,t))),0!==(n=e.expirationTime)&&Ca(e,n)}function Ji(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function Zi(e,t){null!==(e=Ji(e,t))&&(!Ai&&0!==Ii&&t>Ii&&Hi(),Gr(e,t),Ai&&!zi&&Mi===e||Ca(e,e.expirationTime),ba>ga&&(ba=0,a("185")))}function ea(e,t,n,r,o){var i=Ni;Ni=1073741823;try{return e(t,n,r,o)}finally{Ni=i}}var ta=null,na=null,ra=0,oa=void 0,ia=!1,aa=null,la=0,ua=0,ca=!1,sa=null,fa=!1,pa=!1,da=!1,ha=null,ma=i.unstable_now(),ya=1073741822-(ma/10|0),va=ya,ga=50,ba=0,wa=null;function ka(){ya=1073741822-((i.unstable_now()-ma)/10|0)}function xa(e,t){if(0!==ra){if(t<ra)return;null!==oa&&i.unstable_cancelCallback(oa)}ra=t,e=i.unstable_now()-ma,oa=i.unstable_scheduleCallback(Oa,{timeout:10*(1073741822-t)-e})}function Ta(e,t,n,r,o){e.expirationTime=r,0!==o||Pa()?0<o&&(e.timeoutHandle=gr(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,ka(),va=ya,ja(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function Ea(){return ia?va:(Sa(),0!==la&&1!==la||(ka(),va=ya),va)}function Ca(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===na?(ta=na=e,e.nextScheduledRoot=e):(na=na.nextScheduledRoot=e).nextScheduledRoot=ta):t>e.expirationTime&&(e.expirationTime=t),ia||(fa?pa&&(aa=e,la=1073741823,Na(e,1073741823,!1)):1073741823===t?Ra(1073741823,!1):xa(e,t))}function Sa(){var e=0,t=null;if(null!==na)for(var n=na,r=ta;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===na)&&a("244"),r===r.nextScheduledRoot){ta=na=r.nextScheduledRoot=null;break}if(r===ta)ta=o=r.nextScheduledRoot,na.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===na){(na=n).nextScheduledRoot=ta,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===na)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}aa=t,la=e}var _a=!1;function Pa(){return!!_a||!!i.unstable_shouldYield()&&(_a=!0)}function Oa(){try{if(!Pa()&&null!==ta){ka();var e=ta;do{var t=e.expirationTime;0!==t&&ya<=t&&(e.nextExpirationTimeToWorkOn=ya),e=e.nextScheduledRoot}while(e!==ta)}Ra(0,!0)}finally{_a=!1}}function Ra(e,t){if(Sa(),t)for(ka(),va=ya;null!==aa&&0!==la&&e<=la&&!(_a&&ya>la);)Na(aa,la,ya>la),Sa(),ka(),va=ya;else for(;null!==aa&&0!==la&&e<=la;)Na(aa,la,!1),Sa();if(t&&(ra=0,oa=null),0!==la&&xa(aa,la),ba=0,wa=null,null!==ha)for(e=ha,ha=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){ca||(ca=!0,sa=e)}}if(ca)throw e=sa,sa=null,ca=!1,e}function ja(e,t){ia&&a("253"),aa=e,la=t,Na(e,t,!1),Ra(1073741823,!1)}function Na(e,t,n){if(ia&&a("245"),ia=!0,n){var r=e.finishedWork;null!==r?Aa(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,br(r)),Ki(e,n),null!==(r=e.finishedWork)&&(Pa()?e.finishedWork=r:Aa(e,r,t)))}else null!==(r=e.finishedWork)?Aa(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,br(r)),Ki(e,n),null!==(r=e.finishedWork)&&Aa(e,r,t));ia=!1}function Aa(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===ha?ha=[r]:ha.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===wa?ba++:(wa=e,ba=0),zi=Ai=!0,e.current===t&&a("177"),0===(n=e.pendingCommitExpirationTime)&&a("261"),e.pendingCommitExpirationTime=0,r=t.expirationTime;var o=t.childExpirationTime;if(r=o>r?o:r,e.didError=!1,0===r?(e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0):(0!==(o=e.latestPendingTime)&&(o>r?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>r&&(e.earliestPendingTime=e.latestPendingTime)),0===(o=e.earliestSuspendedTime)?Gr(e,r):r<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Gr(e,r)):r>o&&Gr(e,r)),Zr(0,e),Ri.current=null,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,hr=En,Ln(o=In())){if("selectionStart"in o)var i={start:o.selectionStart,end:o.selectionEnd};else e:{var l=(i=(i=o.ownerDocument)&&i.defaultView||window).getSelection&&i.getSelection();if(l&&0!==l.rangeCount){i=l.anchorNode;var u=l.anchorOffset,c=l.focusNode;l=l.focusOffset;try{i.nodeType,c.nodeType}catch(e){i=null;break e}var s=0,f=-1,p=-1,d=0,h=0,m=o,y=null;t:for(;;){for(var v;m!==i||0!==u&&3!==m.nodeType||(f=s+u),m!==c||0!==l&&3!==m.nodeType||(p=s+l),3===m.nodeType&&(s+=m.nodeValue.length),null!==(v=m.firstChild);)y=m,m=v;for(;;){if(m===o)break t;if(y===i&&++d===u&&(f=s),y===c&&++h===l&&(p=s),null!==(v=m.nextSibling))break;y=(m=y).parentNode}m=v}i=-1===f||-1===p?null:{start:f,end:p}}else i=null}i=i||{start:0,end:0}}else i=null;for(mr={focusedElem:o,selectionRange:i},En=!1,Fi=r;null!==Fi;){o=!1,i=void 0;try{for(;null!==Fi;){if(256&Fi.effectTag)e:{var g=Fi.alternate;switch((u=Fi).tag){case 0:case 11:case 15:break e;case 1:if(256&u.effectTag&&null!==g){var b=g.memoizedProps,w=g.memoizedState,k=u.stateNode,x=k.getSnapshotBeforeUpdate(u.elementType===u.type?b:jo(u.type,b),w);k.__reactInternalSnapshotBeforeUpdate=x}break e;case 3:case 5:case 6:case 4:case 17:break e;default:a("163")}}Fi=Fi.nextEffect}}catch(e){o=!0,i=e}o&&(null===Fi&&a("178"),Qi(Fi,i),null!==Fi&&(Fi=Fi.nextEffect))}for(Fi=r;null!==Fi;){g=!1,b=void 0;try{for(;null!==Fi;){var T=Fi.effectTag;if(16&T&&or(Fi.stateNode,""),128&T){var E=Fi.alternate;if(null!==E){var C=E.ref;null!==C&&("function"==typeof C?C(null):C.current=null)}}switch(14&T){case 2:Ti(Fi),Fi.effectTag&=-3;break;case 6:Ti(Fi),Fi.effectTag&=-3,Ci(Fi.alternate,Fi);break;case 4:Ci(Fi.alternate,Fi);break;case 8:Ei(w=Fi),w.return=null,w.child=null,w.alternate&&(w.alternate.child=null,w.alternate.return=null)}Fi=Fi.nextEffect}}catch(e){g=!0,b=e}g&&(null===Fi&&a("178"),Qi(Fi,b),null!==Fi&&(Fi=Fi.nextEffect))}if(C=mr,E=In(),T=C.focusedElem,b=C.selectionRange,E!==T&&T&&T.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(T.ownerDocument.documentElement,T)){null!==b&&Ln(T)&&(E=b.start,void 0===(C=b.end)&&(C=E),"selectionStart"in T?(T.selectionStart=E,T.selectionEnd=Math.min(C,T.value.length)):(C=(E=T.ownerDocument||document)&&E.defaultView||window).getSelection&&(C=C.getSelection(),w=T.textContent.length,g=Math.min(b.start,w),b=void 0===b.end?g:Math.min(b.end,w),!C.extend&&g>b&&(w=b,b=g,g=w),w=Mn(T,g),k=Mn(T,b),w&&k&&(1!==C.rangeCount||C.anchorNode!==w.node||C.anchorOffset!==w.offset||C.focusNode!==k.node||C.focusOffset!==k.offset)&&((E=E.createRange()).setStart(w.node,w.offset),C.removeAllRanges(),g>b?(C.addRange(E),C.extend(k.node,k.offset)):(E.setEnd(k.node,k.offset),C.addRange(E))))),E=[];for(C=T;C=C.parentNode;)1===C.nodeType&&E.push({element:C,left:C.scrollLeft,top:C.scrollTop});for("function"==typeof T.focus&&T.focus(),T=0;T<E.length;T++)(C=E[T]).element.scrollLeft=C.left,C.element.scrollTop=C.top}for(mr=null,En=!!hr,hr=null,e.current=t,Fi=r;null!==Fi;){r=!1,T=void 0;try{for(E=n;null!==Fi;){var S=Fi.effectTag;if(36&S){var _=Fi.alternate;switch(g=E,(C=Fi).tag){case 0:case 11:case 15:break;case 1:var P=C.stateNode;if(4&C.effectTag)if(null===_)P.componentDidMount();else{var O=C.elementType===C.type?_.memoizedProps:jo(C.type,_.memoizedProps);P.componentDidUpdate(O,_.memoizedState,P.__reactInternalSnapshotBeforeUpdate)}var R=C.updateQueue;null!==R&&so(0,R,P);break;case 3:var j=C.updateQueue;if(null!==j){if(b=null,null!==C.child)switch(C.child.tag){case 5:b=C.child.stateNode;break;case 1:b=C.child.stateNode}so(0,j,b)}break;case 5:var N=C.stateNode;null===_&&4&C.effectTag&&yr(C.type,C.memoizedProps)&&N.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:a("163")}}if(128&S){var A=Fi.ref;if(null!==A){var U=Fi.stateNode;switch(Fi.tag){case 5:var M=U;break;default:M=U}"function"==typeof A?A(M):A.current=M}}Fi=Fi.nextEffect}}catch(e){r=!0,T=e}r&&(null===Fi&&a("178"),Qi(Fi,T),null!==Fi&&(Fi=Fi.nextEffect))}Ai=zi=!1,"function"==typeof Dr&&Dr(t.stateNode),S=t.expirationTime,0===(t=(t=t.childExpirationTime)>S?t:S)&&(Vi=null),e.expirationTime=t,e.finishedWork=null}function Ua(e){null===aa&&a("246"),aa.expirationTime=0,ca||(ca=!0,sa=e)}function Ma(e,t){var n=fa;fa=!0;try{return e(t)}finally{(fa=n)||ia||Ra(1073741823,!1)}}function Ia(e,t){if(fa&&!pa){pa=!0;try{return e(t)}finally{pa=!1}}return e(t)}function La(e,t,n){if(da)return e(t,n);fa||ia||0===ua||(Ra(ua,!1),ua=0);var r=da,o=fa;fa=da=!0;try{return e(t,n)}finally{da=r,(fa=o)||ia||Ra(1073741823,!1)}}function Da(e,t,n,r,o){var i=t.current;e:if(n){t:{2===tn(n=n._reactInternalFiber)&&1===n.tag||a("170");var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(jr(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);a("171"),l=void 0}if(1===n.tag){var u=n.type;if(jr(u)){n=Mr(n,u,l);break e}}n=l}else n=Sr;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=ro(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),$i(),io(i,o),Zi(i,r),r}function Fa(e,t,n,r){var o=t.current;return Da(e,t,n,o=Gi(Ea(),o),r)}function za(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Wa(e){var t=1073741822-25*(1+((1073741822-Ea()+500)/25|0));t>=ji&&(t=ji-1),this._expirationTime=ji=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Ba(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Va(e,t,n){e={current:t=Br(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function Ha(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function $a(e,t,n,r,o){Ha(n)||a("200");var i=n._reactRootContainer;if(i){if("function"==typeof o){var l=o;o=function(){var e=za(i._internalRoot);l.call(e)}}null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Va(e,!1,t)}(n,r),"function"==typeof o){var u=o;o=function(){var e=za(i._internalRoot);u.call(e)}}Ia(function(){null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)})}return za(i._internalRoot)}function qa(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Ha(t)||a("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ke,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Se=function(e,t,n){switch(t){case"input":if(xt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=D(r);o||a("90"),Ve(r),xt(r,o)}}}break;case"textarea":Gn(e,n);break;case"select":null!=(t=n.value)&&Yn(e,!!n.multiple,t,!1)}},Wa.prototype.render=function(e){this._defer||a("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new Ba;return Da(e,t,null,n,r._onCommit),r},Wa.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Wa.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||a("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&a("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,ja(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},Wa.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},Ba.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Ba.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&a("191",n),n()}}},Va.prototype.render=function(e,t){var n=this._internalRoot,r=new Ba;return null!==(t=void 0===t?null:t)&&r.then(t),Fa(e,n,null,r._onCommit),r},Va.prototype.unmount=function(e){var t=this._internalRoot,n=new Ba;return null!==(e=void 0===e?null:e)&&n.then(e),Fa(null,t,null,n._onCommit),n},Va.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new Ba;return null!==(n=void 0===n?null:n)&&o.then(n),Fa(t,r,e,o._onCommit),o},Va.prototype.createBatch=function(){var e=new Wa(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Ne=Ma,Ae=La,Ue=function(){ia||0===ua||(Ra(ua,!1),ua=0)};var Ya={createPortal:qa,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?a("188"):a("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return $a(null,e,t,!0,n)},render:function(e,t,n){return $a(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&a("38"),$a(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Ha(e)||a("40"),!!e._reactRootContainer&&(Ia(function(){$a(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return qa.apply(void 0,arguments)},unstable_batchedUpdates:Ma,unstable_interactiveUpdates:La,flushSync:function(e,t){ia&&a("187");var n=fa;fa=!0;try{return ea(e,t)}finally{fa=n,Ra(1073741823,!1)}},unstable_flushControlled:function(e){var t=fa;fa=!0;try{ea(e)}finally{(fa=t)||ia||Ra(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[I,L,D,O.injectEventPluginsByName,g,H,function(e){S(e,V)},Re,je,Pn,j]},unstable_createRoot:function(e,t){return Ha(e)||a("299","unstable_createRoot"),new Va(e,!0,null!=t&&!0===t.hydrate)}};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Dr=zr(function(e){return t.onCommitFiberRoot(n,e)}),Fr=zr(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}})(o({},e,{findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:M,bundleType:0,version:"16.6.3",rendererPackageName:"react-dom"});var Ka={default:Ya},Qa=Ka&&Ya||Ka;e.exports=Qa.default||Qa},function(e,t,n){"use strict";e.exports=n(15)},function(e,t,n){"use strict";
/** @license React v16.6.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */Object.defineProperty(t,"__esModule",{value:!0});var r=null,o=!1,i=3,a=-1,l=-1,u=!1,c=!1;function s(){if(!u){var e=r.expirationTime;c?v():c=!0,y(d,e)}}function f(){var e=r,t=r.next;if(r===t)r=null;else{var n=r.previous;r=n.next=t,t.previous=n}e.next=e.previous=null,n=e.callback,t=e.expirationTime,e=e.priorityLevel;var o=i,a=l;i=e,l=t;try{var u=n()}finally{i=o,l=a}if("function"==typeof u)if(u={callback:u,priorityLevel:e,expirationTime:t,next:null,previous:null},null===r)r=u.next=u.previous=u;else{n=null,e=r;do{if(e.expirationTime>=t){n=e;break}e=e.next}while(e!==r);null===n?n=r:n===r&&(r=u,s()),(t=n.previous).next=n.previous=u,u.next=n,u.previous=t}}function p(){if(-1===a&&null!==r&&1===r.priorityLevel){u=!0;try{do{f()}while(null!==r&&1===r.priorityLevel)}finally{u=!1,null!==r?s():c=!1}}}function d(e){u=!0;var n=o;o=e;try{if(e)for(;null!==r;){var i=t.unstable_now();if(!(r.expirationTime<=i))break;do{f()}while(null!==r&&r.expirationTime<=i)}else if(null!==r)do{f()}while(null!==r&&!g())}finally{u=!1,o=n,null!==r?s():c=!1,p()}}var h,m,y,v,g,b=Date,w="function"==typeof setTimeout?setTimeout:void 0,k="function"==typeof clearTimeout?clearTimeout:void 0,x="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,T="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function E(e){h=x(function(t){k(m),e(t)}),m=w(function(){T(h),e(t.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var C=performance;t.unstable_now=function(){return C.now()}}else t.unstable_now=function(){return b.now()};if("undefined"!=typeof window&&window._schedMock){var S=window._schedMock;y=S[0],v=S[1],g=S[2]}else if("undefined"==typeof window||"function"!=typeof window.addEventListener){var _=null,P=-1,O=function(e,t){if(null!==_){var n=_;_=null;try{P=t,n(e)}finally{P=-1}}};y=function(e,t){-1!==P?setTimeout(y,0,e,t):(_=e,setTimeout(O,t,!0,t),setTimeout(O,1073741823,!1,1073741823))},v=function(){_=null},g=function(){return!1},t.unstable_now=function(){return-1===P?0:P}}else{"undefined"!=typeof console&&("function"!=typeof x&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof T&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var R=null,j=!1,N=-1,A=!1,U=!1,M=0,I=33,L=33;g=function(){return M<=t.unstable_now()};var D="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(e){if(e.source===window&&e.data===D){j=!1,e=R;var n=N;R=null,N=-1;var r=t.unstable_now(),o=!1;if(0>=M-r){if(!(-1!==n&&n<=r))return A||(A=!0,E(F)),R=e,void(N=n);o=!0}if(null!==e){U=!0;try{e(o)}finally{U=!1}}}},!1);var F=function(e){if(null!==R){E(F);var t=e-M+L;t<L&&I<L?(8>t&&(t=8),L=t<I?I:t):I=t,M=e+L,j||(j=!0,window.postMessage(D,"*"))}else A=!1};y=function(e,t){R=e,N=t,U||0>t?window.postMessage(D,"*"):A||(A=!0,E(F))},v=function(){R=null,j=!1,N=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=i,o=a;i=e,a=t.unstable_now();try{return n()}finally{i=r,a=o,p()}},t.unstable_scheduleCallback=function(e,n){var o=-1!==a?a:t.unstable_now();if("object"==typeof n&&null!==n&&"number"==typeof n.timeout)n=o+n.timeout;else switch(i){case 1:n=o+-1;break;case 2:n=o+250;break;case 5:n=o+1073741823;break;case 4:n=o+1e4;break;default:n=o+5e3}if(e={callback:e,priorityLevel:i,expirationTime:n,next:null,previous:null},null===r)r=e.next=e.previous=e,s();else{o=null;var l=r;do{if(l.expirationTime>n){o=l;break}l=l.next}while(l!==r);null===o?o=r:o===r&&(r=e,s()),(n=o.previous).next=o.previous=e,e.next=o,e.previous=n}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)r=null;else{e===r&&(r=t);var n=e.previous;n.next=t,t.previous=n}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=i;return function(){var r=i,o=a;i=n,a=t.unstable_now();try{return e.apply(this,arguments)}finally{i=r,a=o,p()}}},t.unstable_getCurrentPriorityLevel=function(){return i},t.unstable_shouldYield=function(){return!o&&(null!==r&&r.expirationTime<l||g())}},function(e,t,n){"use strict";var r=n(17);function o(){}e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=o,n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";function r(e,t){return Object.prototype.hasOwnProperty.call(e,t)}e.exports=function(e,t,n,i){t=t||"&",n=n||"=";var a={};if("string"!=typeof e||0===e.length)return a;var l=/\+/g;e=e.split(t);var u=1e3;i&&"number"==typeof i.maxKeys&&(u=i.maxKeys);var c=e.length;u>0&&c>u&&(c=u);for(var s=0;s<c;++s){var f,p,d,h,m=e[s].replace(l,"%20"),y=m.indexOf(n);y>=0?(f=m.substr(0,y),p=m.substr(y+1)):(f=m,p=""),d=decodeURIComponent(f),h=decodeURIComponent(p),r(a,d)?o(a[d])?a[d].push(h):a[d]=[a[d],h]:a[d]=h}return a};var o=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)}},function(e,t,n){"use strict";var r=function(e){switch(typeof e){case"string":return e;case"boolean":return e?"true":"false";case"number":return isFinite(e)?e:"";default:return""}};e.exports=function(e,t,n,l){return t=t||"&",n=n||"=",null===e&&(e=void 0),"object"==typeof e?i(a(e),function(a){var l=encodeURIComponent(r(a))+n;return o(e[a])?i(e[a],function(e){return l+encodeURIComponent(r(e))}).join(t):l+encodeURIComponent(r(e[a]))}).join(t):l?encodeURIComponent(r(l))+n+encodeURIComponent(r(e)):""};var o=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)};function i(e,t){if(e.map)return e.map(t);for(var n=[],r=0;r<e.length;r++)n.push(t(e[r],r));return n}var a=Object.keys||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.push(n);return t}},function(e,t,n){(t=e.exports=n(21)(!0)).push([e.i,"._1yG6OAW7Hee1c0TeGTT-3R {\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  height: 2em;\n  width: 100vw;\n}\n\n  ._1yG6OAW7Hee1c0TeGTT-3R button {\n    width: 100px;\n    background-color: blue;\n    color: white;\n  }\n","",{version:3,sources:["/Users/ryanluras/dev/alchemy/fullstack/artist-search/src/components/paging/Paging.css"],names:[],mappings:"AAAA;EACE,cAAc;EACd,8BAA8B;EAC9B,oBAAoB;EACpB,YAAY;EACZ,aAAa;CAOd;;EALC;IACE,aAAa;IACb,uBAAuB;IACvB,aAAa;GACd",file:"Paging.css",sourcesContent:[".paging {\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  height: 2em;\n  width: 100vw;\n\n  button {\n    width: 100px;\n    background-color: blue;\n    color: white;\n  }\n}\n"],sourceRoot:""}]),t.locals={paging:"_1yG6OAW7Hee1c0TeGTT-3R"}},function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(a=r,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),i=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(i).concat([o]).join("\n")}var a;return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];"number"==typeof i&&(r[i]=!0)}for(o=0;o<e.length;o++){var a=e[o];"number"==typeof a[0]&&r[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),t.push(a))}},t}},function(e,t,n){var r,o,i={},a=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=r.apply(this,arguments)),o}),l=function(e){var t={};return function(e,n){if("function"==typeof e)return e();if(void 0===t[e]){var r=function(e,t){return t?t.querySelector(e):document.querySelector(e)}.call(this,e,n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}}(),u=null,c=0,s=[],f=n(23);function p(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=i[r.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](r.parts[a]);for(;a<r.parts.length;a++)o.parts.push(g(r.parts[a],t))}else{var l=[];for(a=0;a<r.parts.length;a++)l.push(g(r.parts[a],t));i[r.id]={id:r.id,refs:1,parts:l}}}}function d(e,t){for(var n=[],r={},o=0;o<e.length;o++){var i=e[o],a=t.base?i[0]+t.base:i[0],l={css:i[1],media:i[2],sourceMap:i[3]};r[a]?r[a].parts.push(l):n.push(r[a]={id:a,parts:[l]})}return n}function h(e,t){var n=l(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=s[s.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),s.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=l(e.insertAt.before,n);n.insertBefore(t,o)}}function m(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=s.indexOf(e);t>=0&&s.splice(t,1)}function y(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var r=function(){0;return n.nc}();r&&(e.attrs.nonce=r)}return v(t,e.attrs),h(e,t),t}function v(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function g(e,t){var n,r,o,i;if(t.transform&&e.css){if(!(i="function"==typeof t.transform?t.transform(e.css):t.transform.default(e.css)))return function(){};e.css=i}if(t.singleton){var a=c++;n=u||(u=y(t)),r=k.bind(null,n,a,!1),o=k.bind(null,n,a,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",v(t,e.attrs),h(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,i=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||i)&&(r=f(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(a),l&&URL.revokeObjectURL(l)}.bind(null,n,t),o=function(){m(n),n.href&&URL.revokeObjectURL(n.href)}):(n=y(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){m(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=a()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=d(e,t);return p(n,t),function(e){for(var r=[],o=0;o<n.length;o++){var a=n[o];(l=i[a.id]).refs--,r.push(l)}e&&p(d(e,t),t);for(o=0;o<r.length;o++){var l;if(0===(l=r[o]).refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete i[l.id]}}}};var b,w=(b=[],function(e,t){return b[e]=t,b.filter(Boolean).join("\n")});function k(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=w(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,i=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?e:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?n+i:r+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(e,t){e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},function(e,t,n){"use strict";n.r(t);var r=n(1),o=n.n(r),i=n(9),a=n.n(i),l=n(4),u=n.n(l),c=n(0),s=n.n(c),f=n(2),p=n.n(f),d=n(3),h=n.n(d);function m(e){return"/"===e.charAt(0)}function y(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}var v=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=e&&e.split("/")||[],r=t&&t.split("/")||[],o=e&&m(e),i=t&&m(t),a=o||i;if(e&&m(e)?r=n:n.length&&(r.pop(),r=r.concat(n)),!r.length)return"/";var l=void 0;if(r.length){var u=r[r.length-1];l="."===u||".."===u||""===u}else l=!1;for(var c=0,s=r.length;s>=0;s--){var f=r[s];"."===f?y(r,s):".."===f?(y(r,s),c++):c&&(y(r,s),c--)}if(!a)for(;c--;c)r.unshift("..");!a||""===r[0]||r[0]&&m(r[0])||r.unshift("");var p=r.join("/");return l&&"/"!==p.substr(-1)&&(p+="/"),p},g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var b=function e(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(Array.isArray(t))return Array.isArray(n)&&t.length===n.length&&t.every(function(t,r){return e(t,n[r])});var r=void 0===t?"undefined":g(t);if(r!==(void 0===n?"undefined":g(n)))return!1;if("object"===r){var o=t.valueOf(),i=n.valueOf();if(o!==t||i!==n)return e(o,i);var a=Object.keys(t),l=Object.keys(n);return a.length===l.length&&a.every(function(r){return e(t[r],n[r])})}return!1},w=function(e){return"/"===e.charAt(0)?e:"/"+e},k=function(e,t){return new RegExp("^"+t+"(\\/|\\?|#|$)","i").test(e)},x=function(e,t){return k(e,t)?e.substr(t.length):e},T=function(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e},E=function(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o},C=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},S=function(e,t,n,r){var o=void 0;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=C({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=v(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o},_=function(e,t){return e.pathname===t.pathname&&e.search===t.search&&e.hash===t.hash&&e.key===t.key&&b(e.state,t.state)},P=function(){var e=null,t=[];return{setPrompt:function(t){return p()(null==e,"A history supports only one prompt at a time"),e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):(p()(!1,"A history needs a getUserConfirmation function in order to use a prompt message"),o(!0)):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0,r=function(){n&&e.apply(void 0,arguments)};return t.push(r),function(){n=!1,t=t.filter(function(e){return e!==r})}},notifyListeners:function(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach(function(e){return e.apply(void 0,n)})}}},O=!("undefined"==typeof window||!window.document||!window.document.createElement),R=function(e,t,n){return e.addEventListener?e.addEventListener(t,n,!1):e.attachEvent("on"+t,n)},j=function(e,t,n){return e.removeEventListener?e.removeEventListener(t,n,!1):e.detachEvent("on"+t,n)},N=function(e,t){return t(window.confirm(e))},A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},U=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},M=function(){try{return window.history.state||{}}catch(e){return{}}},I=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};h()(O,"Browser history needs a DOM");var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,o=!(-1===window.navigator.userAgent.indexOf("Trident")),i=e.forceRefresh,a=void 0!==i&&i,l=e.getUserConfirmation,u=void 0===l?N:l,c=e.keyLength,s=void 0===c?6:c,f=e.basename?T(w(e.basename)):"",d=function(e){var t=e||{},n=t.key,r=t.state,o=window.location,i=o.pathname+o.search+o.hash;return p()(!f||k(i,f),'You are attempting to use a basename on a page whose URL path does not begin with the basename. Expected path "'+i+'" to begin with "'+f+'".'),f&&(i=x(i,f)),S(i,r,n)},m=function(){return Math.random().toString(36).substr(2,s)},y=P(),v=function(e){U(H,e),H.length=n.length,y.notifyListeners(H.location,H.action)},g=function(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||_(d(e.state))},b=function(){_(d(M()))},C=!1,_=function(e){C?(C=!1,v()):y.confirmTransitionTo(e,"POP",u,function(t){t?v({action:"POP",location:e}):I(e)})},I=function(e){var t=H.location,n=D.indexOf(t.key);-1===n&&(n=0);var r=D.indexOf(e.key);-1===r&&(r=0);var o=n-r;o&&(C=!0,z(o))},L=d(M()),D=[L.key],F=function(e){return f+E(e)},z=function(e){n.go(e)},W=0,B=function(e){1===(W+=e)?(R(window,"popstate",g),o&&R(window,"hashchange",b)):0===W&&(j(window,"popstate",g),o&&j(window,"hashchange",b))},V=!1,H={length:n.length,action:"POP",location:L,createHref:F,push:function(e,t){p()(!("object"===(void 0===e?"undefined":A(e))&&void 0!==e.state&&void 0!==t),"You should avoid providing a 2nd state argument to push when the 1st argument is a location-like object that already has state; it is ignored");var o=S(e,t,m(),H.location);y.confirmTransitionTo(o,"PUSH",u,function(e){if(e){var t=F(o),i=o.key,l=o.state;if(r)if(n.pushState({key:i,state:l},null,t),a)window.location.href=t;else{var u=D.indexOf(H.location.key),c=D.slice(0,-1===u?0:u+1);c.push(o.key),D=c,v({action:"PUSH",location:o})}else p()(void 0===l,"Browser history cannot push state in browsers that do not support HTML5 history"),window.location.href=t}})},replace:function(e,t){p()(!("object"===(void 0===e?"undefined":A(e))&&void 0!==e.state&&void 0!==t),"You should avoid providing a 2nd state argument to replace when the 1st argument is a location-like object that already has state; it is ignored");var o=S(e,t,m(),H.location);y.confirmTransitionTo(o,"REPLACE",u,function(e){if(e){var t=F(o),i=o.key,l=o.state;if(r)if(n.replaceState({key:i,state:l},null,t),a)window.location.replace(t);else{var u=D.indexOf(H.location.key);-1!==u&&(D[u]=o.key),v({action:"REPLACE",location:o})}else p()(void 0===l,"Browser history cannot replace state in browsers that do not support HTML5 history"),window.location.replace(t)}})},go:z,goBack:function(){return z(-1)},goForward:function(){return z(1)},block:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=y.setPrompt(e);return V||(B(1),V=!0),function(){return V&&(V=!1,B(-1)),t()}},listen:function(e){var t=y.appendListener(e);return B(1),function(){B(-1),t()}}};return H},L=(Object.assign,"function"==typeof Symbol&&Symbol.iterator,Object.assign,Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e});function D(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var F=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=D(this,e.call.apply(e,[this].concat(i))),r.state={match:r.computeMatch(r.props.history.location.pathname)},D(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:L({},this.context.router,{history:this.props.history,route:{location:this.props.history.location,match:this.state.match}})}},t.prototype.computeMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}},t.prototype.componentWillMount=function(){var e=this,t=this.props,n=t.children,r=t.history;h()(null==n||1===o.a.Children.count(n),"A <Router> may have only one child element"),this.unlisten=r.listen(function(){e.setState({match:e.computeMatch(r.location.pathname)})})},t.prototype.componentWillReceiveProps=function(e){u()(this.props.history===e.history,"You cannot change <Router history>")},t.prototype.componentWillUnmount=function(){this.unlisten()},t.prototype.render=function(){var e=this.props.children;return e?o.a.Children.only(e):null},t}(o.a.Component);F.propTypes={history:s.a.object.isRequired,children:s.a.node},F.contextTypes={router:s.a.object},F.childContextTypes={router:s.a.object.isRequired};var z=F;function W(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var B=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=W(this,e.call.apply(e,[this].concat(i))),r.history=I(r.props),W(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){u()(!this.props.history,"<BrowserRouter> ignores the history prop. To use a custom history, use `import { Router }` instead of `import { BrowserRouter as Router }`.")},t.prototype.render=function(){return o.a.createElement(z,{history:this.history,children:this.props.children})},t}(o.a.Component);B.propTypes={basename:s.a.string,forceRefresh:s.a.bool,getUserConfirmation:s.a.func,keyLength:s.a.number,children:s.a.node};var V=B,H=n(5),$=n.n(H),q={},Y=0,K=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments[2];"string"==typeof t&&(t={path:t});var r=t,o=r.path,i=r.exact,a=void 0!==i&&i,l=r.strict,u=void 0!==l&&l,c=r.sensitive;if(null==o)return n;var s=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=q[n]||(q[n]={});if(r[e])return r[e];var o=[],i={re:$()(e,o,t),keys:o};return Y<1e4&&(r[e]=i,Y++),i}(o,{end:a,strict:u,sensitive:void 0!==c&&c}),f=s.re,p=s.keys,d=f.exec(e);if(!d)return null;var h=d[0],m=d.slice(1),y=e===h;return a&&!y?null:{path:o,url:"/"===o&&""===h?"/":h,isExact:y,params:p.reduce(function(e,t,n){return e[t.name]=m[n],e},{})}};var Q=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentWillMount=function(){h()(this.context.router,"You should not use <Switch> outside a <Router>")},t.prototype.componentWillReceiveProps=function(e){u()(!(e.location&&!this.props.location),'<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),u()(!(!e.location&&this.props.location),'<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.')},t.prototype.render=function(){var e=this.context.router.route,t=this.props.children,n=this.props.location||e.location,r=void 0,i=void 0;return o.a.Children.forEach(t,function(t){if(null==r&&o.a.isValidElement(t)){var a=t.props,l=a.path,u=a.exact,c=a.strict,s=a.sensitive,f=a.from,p=l||f;i=t,r=K(n.pathname,{path:p,exact:u,strict:c,sensitive:s},e.match)}}),r?o.a.cloneElement(i,{location:n,computedMatch:r}):null},t}(o.a.Component);Q.contextTypes={router:s.a.shape({route:s.a.object.isRequired}).isRequired},Q.propTypes={children:s.a.node,location:s.a.object};var G=Q,X=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function J(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var Z=function(e){return 0===o.a.Children.count(e)},ee=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=J(this,e.call.apply(e,[this].concat(i))),r.state={match:r.computeMatch(r.props,r.context.router)},J(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.getChildContext=function(){return{router:X({},this.context.router,{route:{location:this.props.location||this.context.router.route.location,match:this.state.match}})}},t.prototype.computeMatch=function(e,t){var n=e.computedMatch,r=e.location,o=e.path,i=e.strict,a=e.exact,l=e.sensitive;if(n)return n;h()(t,"You should not use <Route> or withRouter() outside a <Router>");var u=t.route,c=(r||u.location).pathname;return K(c,{path:o,strict:i,exact:a,sensitive:l},u.match)},t.prototype.componentWillMount=function(){u()(!(this.props.component&&this.props.render),"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored"),u()(!(this.props.component&&this.props.children&&!Z(this.props.children)),"You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored"),u()(!(this.props.render&&this.props.children&&!Z(this.props.children)),"You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored")},t.prototype.componentWillReceiveProps=function(e,t){u()(!(e.location&&!this.props.location),'<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'),u()(!(!e.location&&this.props.location),'<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.'),this.setState({match:this.computeMatch(e,t.router)})},t.prototype.render=function(){var e=this.state.match,t=this.props,n=t.children,r=t.component,i=t.render,a=this.context.router,l=a.history,u=a.route,c=a.staticContext,s={match:e,location:this.props.location||u.location,history:l,staticContext:c};return r?e?o.a.createElement(r,s):null:i?e?i(s):null:"function"==typeof n?n(s):n&&!Z(n)?o.a.Children.only(n):null},t}(o.a.Component);ee.propTypes={computedMatch:s.a.object,path:s.a.string,exact:s.a.bool,strict:s.a.bool,sensitive:s.a.bool,component:s.a.func,render:s.a.func,children:s.a.oneOfType([s.a.func,s.a.node]),location:s.a.object},ee.contextTypes={router:s.a.shape({history:s.a.object.isRequired,route:s.a.object.isRequired,staticContext:s.a.object})},ee.childContextTypes={router:s.a.object.isRequired};var te=ee,ne=te,re={},oe=0,ie=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"/",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return"/"===e?e:function(e){var t=e,n=re[t]||(re[t]={});if(n[e])return n[e];var r=$.a.compile(e);return oe<1e4&&(n[e]=r,oe++),r}(e)(t,{pretty:!0})},ae=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};var le=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.isStatic=function(){return this.context.router&&this.context.router.staticContext},t.prototype.componentWillMount=function(){h()(this.context.router,"You should not use <Redirect> outside a <Router>"),this.isStatic()&&this.perform()},t.prototype.componentDidMount=function(){this.isStatic()||this.perform()},t.prototype.componentDidUpdate=function(e){var t=S(e.to),n=S(this.props.to);_(t,n)?u()(!1,"You tried to redirect to the same route you're currently on: \""+n.pathname+n.search+'"'):this.perform()},t.prototype.computeTo=function(e){var t=e.computedMatch,n=e.to;return t?"string"==typeof n?ie(n,t.params):ae({},n,{pathname:ie(n.pathname,t.params)}):n},t.prototype.perform=function(){var e=this.context.router.history,t=this.props.push,n=this.computeTo(this.props);t?e.push(n):e.replace(n)},t.prototype.render=function(){return null},t}(o.a.Component);le.propTypes={computedMatch:s.a.object,push:s.a.bool,from:s.a.string,to:s.a.oneOfType([s.a.string,s.a.object]).isRequired},le.defaultProps={push:!1},le.contextTypes={router:s.a.shape({history:s.a.shape({push:s.a.func.isRequired,replace:s.a.func.isRequired}).isRequired,staticContext:s.a.object}).isRequired};var ue=le,ce=n(7),se=n.n(ce),fe=n(11),pe=n.n(fe),de=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};var he=function(e){var t=function(t){var n=t.wrappedComponentRef,r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(t,["wrappedComponentRef"]);return o.a.createElement(te,{children:function(t){return o.a.createElement(e,de({},r,t,{ref:n}))}})};return t.displayName="withRouter("+(e.displayName||e.name)+")",t.WrappedComponent=e,t.propTypes={wrappedComponentRef:s.a.func},pe()(t,e)},me=function(e){return fetch(e).then(function(e){return e.json()})},ye=function(e){var t=25*((arguments.length>1&&void 0!==arguments[1]?arguments[1]:0)-1);return me("http://musicbrainz.org/ws/2/artist?query=".concat(e,"&limit=").concat(25,"&offset=").concat(t,"&fmt=json")).then(function(e){var t=e.count,n=e.artists;return{pages:Math.ceil(t/25),artists:n.map(function(e){return{name:e.name,description:e.disambiguation,id:e.id}})}})},ve=function(e){return me("http://musicbrainz.org/ws/2/artist/".concat(e,"?fmt=json&inc=works")).then(function(e){return{id:e.id,name:e.name,description:e.disambiguation,works:e.works}})},ge=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function be(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var we=function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)},ke=function(e){function t(){var n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return n=r=be(this,e.call.apply(e,[this].concat(i))),r.handleClick=function(e){if(r.props.onClick&&r.props.onClick(e),!e.defaultPrevented&&0===e.button&&!r.props.target&&!we(e)){e.preventDefault();var t=r.context.router.history,n=r.props,o=n.replace,i=n.to;o?t.replace(i):t.push(i)}},be(r,n)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.render=function(){var e=this.props,t=(e.replace,e.to),n=e.innerRef,r=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["replace","to","innerRef"]);h()(this.context.router,"You should not use <Link> outside a <Router>"),h()(void 0!==t,'You must specify the "to" property');var i=this.context.router.history,a="string"==typeof t?S(t,null,null,i.location):t,l=i.createHref(a);return o.a.createElement("a",ge({},r,{onClick:this.handleClick,href:l,ref:n}))},t}(o.a.Component);ke.propTypes={onClick:s.a.func,target:s.a.string,replace:s.a.bool,to:s.a.oneOfType([s.a.string,s.a.object]).isRequired,innerRef:s.a.oneOfType([s.a.string,s.a.func])},ke.defaultProps={replace:!1},ke.contextTypes={router:s.a.shape({history:s.a.shape({push:s.a.func.isRequired,replace:s.a.func.isRequired,createHref:s.a.func.isRequired}).isRequired}).isRequired};var xe=ke,Te=function(e){var t=e.name,n=e.description,r=e.id;return o.a.createElement("div",null,o.a.createElement("h3",null,t," - ",n),o.a.createElement(xe,{to:et.ARTIST.linkTo(r)},"Get Works by ",t,"."))};Te.propTypes={name:s.a.string.isRequired,description:s.a.string,id:s.a.string.isRequired};var Ee=Te,Ce=n(10),Se=n.n(Ce),_e=function(e){var t=e.currentPage,n=e.totalPages,r=e.updatePage,i=null;t>1&&(i=o.a.createElement("button",{onClick:function(){return r(t-1)}},"<"));var a=null;return t<n&&(a=o.a.createElement("button",{onClick:function(){return r(t+1)}},">")),o.a.createElement("div",{className:Se.a.paging},i,o.a.createElement("span",null,t," out of ",n),a)};_e.propTypes={currentPage:s.a.number,totalPages:s.a.number,updatePage:s.a.func};var Pe=_e;function Oe(e){return(Oe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Re(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function je(e){return(je=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ne(e,t){return(Ne=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Ae(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Ue(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Me=function(e){function t(){var e,n,r,o;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,a=new Array(i),l=0;l<i;l++)a[l]=arguments[l];return r=this,o=(e=je(t)).call.apply(e,[this].concat(a)),n=!o||"object"!==Oe(o)&&"function"!=typeof o?Ae(r):o,Ue(Ae(Ae(n)),"state",{currentPage:1,totalPages:null,artists:[]}),Ue(Ae(Ae(n)),"doSearch",function(){var e=se.a.parse(n.props.location.search.slice(1)).searchTerm;if(!e)return n.setState({artists:[]});ye(e,n.state.currentPage).then(function(e){var t=e.pages,r=e.artists;return n.setState({totalPages:t,artists:r})})}),Ue(Ae(Ae(n)),"updateHandlePage",function(e){n.setState({currentPage:e},function(){n.doSearch()})}),Ue(Ae(Ae(n)),"updateSearchTerm",function(e){e.preventDefault();var t=document.getElementById("searchTerm").value,r=se.a.stringify({searchTerm:t});n.props.history.push({pathName:et.SEARCH.path,search:r})}),n}var n,i,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ne(e,t)}(t,r["Component"]),n=t,(i=[{key:"componentDidMount",value:function(){this.doSearch()}},{key:"componentDidUpdate",value:function(e){e.location.search!==this.props.location.search&&this.doSearch()}},{key:"render",value:function(){var e=this.state,t=e.currentPage,n=e.totalPages,i=e.artists.map(function(e){return o.a.createElement("li",{key:e.id},o.a.createElement(Ee,{id:e.id,name:e.name,description:e.description}))});return o.a.createElement(r.Fragment,null,o.a.createElement("form",{onSubmit:this.updateSearchTerm},o.a.createElement("input",{id:"searchTerm",type:"text"}),o.a.createElement("button",{type:"submit"},"Search")),o.a.createElement(Pe,{currentPage:t,totalPages:n,updatePage:this.updateHandlePage}),o.a.createElement("ul",null,i))}}])&&Re(n.prototype,i),a&&Re(n,a),t}();Ue(Me,"propTypes",{location:s.a.object.isRequired,history:s.a.object.isRequired});var Ie=he(Me),Le=function(e){var t=e.name,n=e.title;return o.a.createElement(r.Fragment,null,o.a.createElement("h3",null,n),o.a.createElement(xe,{to:et.LYRICS.linkTo(t,n)},"Get Lyrics"))},De=function(e){var t=e.works,n=e.name;return o.a.createElement(r.Fragment,null,t.map(function(e){return o.a.createElement(Le,{key:e.id,title:e.title,name:n})}))};De.propTypes={works:s.a.array.isRequired,name:s.a.string};var Fe=De;function ze(e){return(ze="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function We(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Be(e){return(Be=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ve(e,t){return(Ve=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function He(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function $e(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var qe=function(e){function t(){var e,n,r,o;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,a=new Array(i),l=0;l<i;l++)a[l]=arguments[l];return r=this,o=(e=Be(t)).call.apply(e,[this].concat(a)),n=!o||"object"!==ze(o)&&"function"!=typeof o?He(r):o,$e(He(He(n)),"state",{artist:{}}),$e(He(He(n)),"fetchArtist",function(){var e=n.props.location.pathname.slice(1).split("/")[1];ve(e).then(function(e){return n.setState({artist:e})})}),n}var n,i,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ve(e,t)}(t,r["Component"]),n=t,(i=[{key:"componentDidMount",value:function(){this.fetchArtist()}},{key:"render",value:function(){var e=this.state.artist,t=e.name,n=e.description,r=e.works;return void 0===r?null:o.a.createElement("div",null,o.a.createElement("h3",null,t),o.a.createElement("h2",null,n),o.a.createElement(Fe,{works:r,name:t}))}}])&&We(n.prototype,i),a&&We(n,a),t}();function Ye(e){return(Ye="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ke(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Qe(e){return(Qe=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ge(e,t){return(Ge=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Xe(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Je(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}$e(qe,"propTypes",{location:s.a.object.isRequired});var Ze=function(e){function t(){var e,n,r,o;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var i=arguments.length,a=new Array(i),l=0;l<i;l++)a[l]=arguments[l];return r=this,n=!(o=(e=Qe(t)).call.apply(e,[this].concat(a)))||"object"!==Ye(o)&&"function"!=typeof o?Xe(r):o,Je(Xe(Xe(n)),"state",{lyrics:"",artist:"",title:""}),n}var n,i,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Ge(e,t)}(t,r["Component"]),n=t,(i=[{key:"componentDidMount",value:function(){var e=this,t=this.props.location.pathname.slice(1).split("/")[1],n=this.props.location.pathname.slice(1).split("/")[2];(function(e,t){return me("https://api.lyrics.ovh/v1/".concat(e,"/").concat(t)).then(function(e){return{lyrics:e.lyrics}})})(t,n).then(function(r){e.setState({lyrics:r.lyrics,artist:t,title:n})})}},{key:"render",value:function(){var e=this.state,t=e.artist,n=e.title,i=e.lyrics;return o.a.createElement(r.Fragment,null,o.a.createElement("h3",null,t),o.a.createElement("h4",null,n),o.a.createElement("p",null,i))}}])&&Ke(n.prototype,i),a&&Ke(n,a),t}();Je(Ze,"propTypes",{location:s.a.object.isRequired});var et={SEARCH:{path:"/search",Component:Ie,linkTo:function(){return"/search"}},ARTIST:{path:"/artists/:id",Component:qe,linkTo:function(e){return"/artists/".concat(e)}},LYRICS:{path:"/lyrics/:artist/:title",Component:Ze,linkTo:function(e,t){return"/lyrics/".concat(e,"/").concat(t)}}};a.a.render(o.a.createElement(function(){return o.a.createElement(V,null,o.a.createElement(G,null,o.a.createElement(ne,{path:et.SEARCH.path,component:et.SEARCH.Component}),o.a.createElement(ne,{component:et.ARTIST.Component,path:et.ARTIST.path}),o.a.createElement(ne,{component:et.LYRICS.Component,path:et.LYRICS.path}),o.a.createElement(ue,{to:et.SEARCH.path})))},null),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L25vZGVfbW9kdWxlcy93YXJuaW5nL2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ludmFyaWFudC9icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy93YXJuaW5nL3dhcm5pbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BhdGgtdG8tcmVnZXhwL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy1lczMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9wYWdpbmcvUGFnaW5nLmNzcz9kZWY4Iiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9kaXN0L2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLmNqcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy1lczMvZGVjb2RlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy1lczMvZW5jb2RlLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL3BhZ2luZy9QYWdpbmcuY3NzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvdXJscy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaXNhcnJheS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS1wYXRobmFtZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdmFsdWUtZXF1YWwvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvUGF0aFV0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9oaXN0b3J5L2VzL0xvY2F0aW9uVXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvRE9NVXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvY3JlYXRlQnJvd3Nlckhpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lcy9Sb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvY3JlYXRlSGFzaEhpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXMvY3JlYXRlTWVtb3J5SGlzdG9yeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9Sb3V0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci1kb20vZXMvQnJvd3NlclJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL21hdGNoUGF0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL1N3aXRjaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9Td2l0Y2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lcy9Sb3V0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9Sb3V0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL2dlbmVyYXRlUGF0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyL2VzL1JlZGlyZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzL1JlZGlyZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvZXMvd2l0aFJvdXRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy93aXRoUm91dGVyLmpzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2aWNlcy9yZXF1ZXN0LmpzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2aWNlcy9tdXNpY1NlYXJjaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3Qtcm91dGVyLWRvbS9lcy9MaW5rLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2FydGlzdHMvQXJ0aXN0LmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL3BhZ2luZy9QYWdpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvc2VhcmNoL1NlYXJjaC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy93b3Jrcy9Xb3Jrcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9hcnRpc3RzL0FydGlzdERldGFpbC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy93b3Jrcy9MeXJpY3MuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3JvdXRlcy9yb3V0ZXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9jb21wb25lbnRzL2FwcC9BcHAuanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJjb25kaXRpb24iLCJmb3JtYXQiLCJhIiwiYiIsImUiLCJmIiwiZXJyb3IiLCJ1bmRlZmluZWQiLCJFcnJvciIsImFyZ3MiLCJhcmdJbmRleCIsInJlcGxhY2UiLCJmcmFtZXNUb1BvcCIsIndhcm5pbmciLCJpc2FycmF5IiwicGF0aFRvUmVnZXhwIiwicGFyc2UiLCJjb21waWxlIiwic3RyIiwib3B0aW9ucyIsInRva2Vuc1RvRnVuY3Rpb24iLCJ0b2tlbnNUb1JlZ0V4cCIsIlBBVEhfUkVHRVhQIiwiUmVnRXhwIiwiam9pbiIsInJlcyIsInRva2VucyIsImluZGV4IiwicGF0aCIsImRlZmF1bHREZWxpbWl0ZXIiLCJkZWxpbWl0ZXIiLCJleGVjIiwiZXNjYXBlZCIsIm9mZnNldCIsInNsaWNlIiwibGVuZ3RoIiwibmV4dCIsInByZWZpeCIsImNhcHR1cmUiLCJncm91cCIsIm1vZGlmaWVyIiwiYXN0ZXJpc2siLCJwdXNoIiwicGFydGlhbCIsInJlcGVhdCIsIm9wdGlvbmFsIiwicGF0dGVybiIsImVzY2FwZUdyb3VwIiwiZXNjYXBlU3RyaW5nIiwic3Vic3RyIiwiZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IiwiZW5jb2RlVVJJIiwiY2hhckNvZGVBdCIsInRvU3RyaW5nIiwidG9VcHBlckNhc2UiLCJtYXRjaGVzIiwiQXJyYXkiLCJvYmoiLCJvcHRzIiwiZGF0YSIsImVuY29kZSIsInByZXR0eSIsImVuY29kZVVSSUNvbXBvbmVudCIsInRva2VuIiwic2VnbWVudCIsIlR5cGVFcnJvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJqIiwidGVzdCIsImF0dGFjaEtleXMiLCJyZSIsImtleXMiLCJmbGFncyIsInNlbnNpdGl2ZSIsInN0cmljdCIsImVuZCIsInJvdXRlIiwiZW5kc1dpdGhEZWxpbWl0ZXIiLCJncm91cHMiLCJzb3VyY2UiLCJtYXRjaCIsInJlZ2V4cFRvUmVnZXhwIiwicGFydHMiLCJhcnJheVRvUmVnZXhwIiwic3RyaW5nVG9SZWdleHAiLCJkZWNvZGUiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJhc3NpZ24iLCJ0ZXN0MSIsIlN0cmluZyIsImdldE93blByb3BlcnR5TmFtZXMiLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsIm1hcCIsInRlc3QzIiwic3BsaXQiLCJmb3JFYWNoIiwibGV0dGVyIiwiZXJyIiwic2hvdWxkVXNlTmF0aXZlIiwidGFyZ2V0IiwiZnJvbSIsInN5bWJvbHMiLCJ0byIsInZhbCIsInRvT2JqZWN0IiwiYXJndW1lbnRzIiwiY2hlY2tEQ0UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJjb25zb2xlIiwiY29udGVudCIsInNvdXJjZU1hcCIsImhtciIsInRyYW5zZm9ybSIsImluc2VydEludG8iLCJsb2NhbHMiLCJSRUFDVF9TVEFUSUNTIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJjb250ZXh0VHlwZXMiLCJkZWZhdWx0UHJvcHMiLCJkaXNwbGF5TmFtZSIsImdldERlZmF1bHRQcm9wcyIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsIm1peGlucyIsInByb3BUeXBlcyIsInR5cGUiLCJLTk9XTl9TVEFUSUNTIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJpdHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJnZXRQcm90b3R5cGVPZiIsIm9iamVjdFByb3RvdHlwZSIsImhvaXN0Tm9uUmVhY3RTdGF0aWNzIiwidGFyZ2V0Q29tcG9uZW50Iiwic291cmNlQ29tcG9uZW50IiwiYmxhY2tsaXN0IiwiaW5oZXJpdGVkQ29tcG9uZW50IiwiY29uY2F0IiwiZGVzY3JpcHRvciIsImsiLCJmb3IiLCJxIiwidSIsInYiLCJ3IiwieCIsInkiLCJ6IiwiQSIsIkIiLCJDIiwiaXRlcmF0b3IiLCJEIiwiZyIsImgiLCJhYSIsIkUiLCJpc01vdW50ZWQiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZVNldFN0YXRlIiwiRiIsIkciLCJ0aGlzIiwicHJvcHMiLCJjb250ZXh0IiwicmVmcyIsInVwZGF0ZXIiLCJIIiwiSSIsImlzUmVhY3RDb21wb25lbnQiLCJzZXRTdGF0ZSIsImZvcmNlVXBkYXRlIiwiSiIsImNvbnN0cnVjdG9yIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJLIiwiY3VycmVudCIsImN1cnJlbnREaXNwYXRjaGVyIiwiTCIsIk0iLCJyZWYiLCJfX3NlbGYiLCJfX3NvdXJjZSIsIk4iLCJjaGlsZHJlbiIsIiQkdHlwZW9mIiwiX293bmVyIiwiTyIsIlAiLCJRIiwiUiIsInBvcCIsInJlc3VsdCIsImtleVByZWZpeCIsImZ1bmMiLCJjb3VudCIsIlMiLCJWIiwiVCIsIlUiLCJpc0FycmF5IiwiZG9uZSIsIj0iLCI6IiwiZXNjYXBlIiwiY2EiLCJkYSIsIlciLCJiYSIsIlgiLCJDaGlsZHJlbiIsInRvQXJyYXkiLCJvbmx5IiwiY3JlYXRlUmVmIiwiQ29tcG9uZW50IiwiUHVyZUNvbXBvbmVudCIsImNyZWF0ZUNvbnRleHQiLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfY3VycmVudFZhbHVlIiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiX2NvbnRleHQiLCJmb3J3YXJkUmVmIiwicmVuZGVyIiwibGF6eSIsIl9jdG9yIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJtZW1vIiwiY29tcGFyZSIsIkZyYWdtZW50IiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiY3JlYXRlRWxlbWVudCIsImNsb25lRWxlbWVudCIsImNyZWF0ZUZhY3RvcnkiLCJpc1ZhbGlkRWxlbWVudCIsInZlcnNpb24iLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsIlJlYWN0Q3VycmVudE93bmVyIiwidW5zdGFibGVfQ29uY3VycmVudE1vZGUiLCJ1bnN0YWJsZV9Qcm9maWxlciIsIlkiLCJkZWZhdWx0IiwiWiIsImVhIiwiZmEiLCJoYSIsImlhIiwiamEiLCJvbkVycm9yIiwia2EiLCJhcHBseSIsIm1hIiwibmEiLCJvYSIsImluZGV4T2YiLCJwYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwicWEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInJhIiwicmVnaXN0cmF0aW9uTmFtZSIsInNhIiwidGEiLCJkZXBlbmRlbmNpZXMiLCJ1YSIsInZhIiwid2EiLCJ4YSIsImN1cnJlbnRUYXJnZXQiLCJsYSIsInlhIiwiemEiLCJBYSIsIkJhIiwiX2Rpc3BhdGNoTGlzdGVuZXJzIiwiX2Rpc3BhdGNoSW5zdGFuY2VzIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJpc1BlcnNpc3RlbnQiLCJyZWxlYXNlIiwiQ2EiLCJpbmplY3RFdmVudFBsdWdpbk9yZGVyIiwiaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lIiwiRGEiLCJzdGF0ZU5vZGUiLCJkaXNhYmxlZCIsIkVhIiwiRmEiLCJNYXRoIiwicmFuZG9tIiwiR2EiLCJIYSIsIklhIiwicGFyZW50Tm9kZSIsInRhZyIsIkphIiwiS2EiLCJMYSIsIk1hIiwicmV0dXJuIiwiTmEiLCJkaXNwYXRjaENvbmZpZyIsIk9hIiwiX3RhcmdldEluc3QiLCJQYSIsIlFhIiwiUmEiLCJTYSIsIndpbmRvdyIsImRvY3VtZW50IiwiVGEiLCJ0b0xvd2VyQ2FzZSIsIlVhIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiVmEiLCJXYSIsIlhhIiwic3R5bGUiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiWWEiLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZWIiLCJmYiIsImdiIiwidGV4dENvbnRlbnQiLCJoYiIsImliIiwibmF0aXZlRXZlbnQiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJrYiIsImV2ZW50UG9vbCIsImxiIiwiZGVzdHJ1Y3RvciIsImpiIiwiZ2V0UG9vbGVkIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiRGF0ZSIsIm5vdyIsImlzVHJ1c3RlZCIsImV4dGVuZCIsIm1iIiwibmIiLCJvYiIsInBiIiwicWIiLCJkb2N1bWVudE1vZGUiLCJyYiIsInNiIiwidGIiLCJ1YiIsImJlZm9yZUlucHV0IiwiYnViYmxlZCIsImNhcHR1cmVkIiwiY29tcG9zaXRpb25FbmQiLCJjb21wb3NpdGlvblN0YXJ0IiwiY29tcG9zaXRpb25VcGRhdGUiLCJ2YiIsIndiIiwia2V5Q29kZSIsInhiIiwiZGV0YWlsIiwieWIiLCJCYiIsImxvY2FsZSIsIndoaWNoIiwiemIiLCJjdHJsS2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImNoYXIiLCJBYiIsIkNiIiwiRGIiLCJFYiIsIkhiIiwiSWIiLCJKYiIsIktiIiwiTGIiLCJNYiIsIk5iIiwiT2IiLCJQYiIsImNvbG9yIiwiZGF0ZSIsImRhdGV0aW1lIiwiZGF0ZXRpbWUtbG9jYWwiLCJlbWFpbCIsIm1vbnRoIiwibnVtYmVyIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInRleHQiLCJ0aW1lIiwidXJsIiwid2VlayIsIlFiIiwibm9kZU5hbWUiLCJSYiIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsIm5vZGVUeXBlIiwiU2IiLCJzZXRBdHRyaWJ1dGUiLCJUYiIsIlZiIiwiX3ZhbHVlVHJhY2tlciIsInNldCIsImNvbmZpZ3VyYWJsZSIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJVYiIsIldiIiwiY2hlY2tlZCIsIlhiIiwiWWIiLCJaYiIsIiRiIiwiYWMiLCJiYyIsImNjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiamMiLCJrYyIsImxjIiwibWMiLCJuYyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwib2MiLCJwYyIsInFjIiwicmMiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwidmMiLCJ4YyIsInljIiwidGMiLCJpc05hTiIsInVjIiwic2MiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsInpjIiwiQWMiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIkJjIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIkNjIiwiRGMiLCJFYyIsIkZjIiwib3duZXJEb2N1bWVudCIsImFjdGl2ZUVsZW1lbnQiLCJ0YWJJbmRleCIsIkdjIiwiY2hhbmdlIiwiSGMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJQYyIsImRldGFjaEV2ZW50IiwiUWMiLCJSYyIsImF0dGFjaEV2ZW50IiwiU2MiLCJUYyIsIlVjIiwiVmMiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwiV2MiLCJ2aWV3IiwiWGMiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiWWMiLCJnZXRNb2RpZmllclN0YXRlIiwiWmMiLCIkYyIsImFkIiwiYmQiLCJjZCIsImRkIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJlZCIsInBvaW50ZXJJZCIsIndpZHRoIiwiaGVpZ2h0IiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsImZkIiwibW91c2VFbnRlciIsIm1vdXNlTGVhdmUiLCJwb2ludGVyRW50ZXIiLCJwb2ludGVyTGVhdmUiLCJnZCIsImRlZmF1bHRWaWV3IiwicGFyZW50V2luZG93IiwiYWx0ZXJuYXRlIiwiaGQiLCJpZCIsImpkIiwia2QiLCJlZmZlY3RUYWciLCJsZCIsIm5kIiwiY2hpbGQiLCJzaWJsaW5nIiwibWQiLCJvZCIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJwZCIsImNsaXBib2FyZERhdGEiLCJxZCIsInJkIiwiY2hhckNvZGUiLCJzZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJ0ZCIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJ1ZCIsImxvY2F0aW9uIiwidmQiLCJkYXRhVHJhbnNmZXIiLCJ3ZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJ4ZCIsInlkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJ6ZCIsIkFkIiwiQmQiLCJDZCIsImlzSW50ZXJhY3RpdmUiLCJEZCIsImlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSIsIkVkIiwiRmQiLCJHZCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJjb250YWluZXJJbmZvIiwidG9wTGV2ZWxUeXBlIiwiSGQiLCJJZCIsIkpkIiwiYWRkRXZlbnRMaXN0ZW5lciIsIktkIiwiTGQiLCJNZCIsIk5kIiwiT2QiLCJQZCIsImJvZHkiLCJRZCIsImZpcnN0Q2hpbGQiLCJSZCIsIm5vZGUiLCJuZXh0U2libGluZyIsIlRkIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJVZCIsImNvbnRlbnRFZGl0YWJsZSIsIlZkIiwiV2QiLCJzZWxlY3QiLCJYZCIsIllkIiwiWmQiLCIkZCIsImFlIiwic3RhcnQiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsImFuY2hvck5vZGUiLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsImJlIiwib25TZWxlY3QiLCJlZSIsImRlIiwiZmUiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsImdlIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJoZSIsImllIiwiamUiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwia2UiLCJodG1sIiwibWF0aG1sIiwic3ZnIiwibGUiLCJtZSIsIm5lIiwib2UiLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJyZW1vdmVDaGlsZCIsImFwcGVuZENoaWxkIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsInBlIiwibGFzdENoaWxkIiwibm9kZVZhbHVlIiwicWUiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsInNlIiwidHJpbSIsInRlIiwic2V0UHJvcGVydHkiLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJ1ZSIsIm1lbnVpdGVtIiwiYXJlYSIsImJhc2UiLCJiciIsImNvbCIsImVtYmVkIiwiaHIiLCJpbWciLCJpbnB1dCIsImtleWdlbiIsImxpbmsiLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsInZlIiwid2UiLCJpcyIsInhlIiwiYmx1ciIsImZvY3VzIiwieWUiLCJ6ZSIsIkFlIiwiQmUiLCJhdXRvRm9jdXMiLCJDZSIsIl9faHRtbCIsIkRlIiwic2V0VGltZW91dCIsIkVlIiwiY2xlYXJUaW1lb3V0IiwiRmUiLCJHZSIsIlNldCIsIkhlIiwiSWUiLCJKZSIsIktlIiwiTGUiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJNZSIsIk5lIiwiT2UiLCJQZSIsImdldENoaWxkQ29udGV4dCIsIlFlIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJSZSIsIlNlIiwiVGUiLCJVZSIsIldlIiwiZWxlbWVudFR5cGUiLCJwZW5kaW5nUHJvcHMiLCJmaXJzdENvbnRleHREZXBlbmRlbmN5IiwibWVtb2l6ZWRTdGF0ZSIsInVwZGF0ZVF1ZXVlIiwibWVtb2l6ZWRQcm9wcyIsImxhc3RFZmZlY3QiLCJmaXJzdEVmZmVjdCIsIm5leHRFZmZlY3QiLCJjaGlsZEV4cGlyYXRpb25UaW1lIiwiZXhwaXJhdGlvblRpbWUiLCJYZSIsIlplIiwiJGUiLCJhZiIsImJmIiwiY2YiLCJkZiIsInBlbmRpbmdDaGlsZHJlbiIsImltcGxlbWVudGF0aW9uIiwiZWYiLCJkaWRFcnJvciIsImVhcmxpZXN0UGVuZGluZ1RpbWUiLCJsYXRlc3RQZW5kaW5nVGltZSIsImZmIiwiZ2YiLCJsYXRlc3RQaW5nZWRUaW1lIiwiZWFybGllc3RTdXNwZW5kZWRUaW1lIiwibGF0ZXN0U3VzcGVuZGVkVGltZSIsImhmIiwibmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT24iLCJqZiIsImtmIiwiYmFzZVN0YXRlIiwiZmlyc3RVcGRhdGUiLCJsYXN0VXBkYXRlIiwiZmlyc3RDYXB0dXJlZFVwZGF0ZSIsImxhc3RDYXB0dXJlZFVwZGF0ZSIsImZpcnN0Q2FwdHVyZWRFZmZlY3QiLCJsYXN0Q2FwdHVyZWRFZmZlY3QiLCJsZiIsIm1mIiwicGF5bG9hZCIsImNhbGxiYWNrIiwibmYiLCJvZiIsInBmIiwicWYiLCJyZiIsInNmIiwidGYiLCJ1ZiIsInZmIiwic3RhY2siLCJ3ZiIsInhmIiwieWYiLCJ6ZiIsIkFmIiwiQmYiLCJDZiIsIkRmIiwib2JzZXJ2ZWRCaXRzIiwiRWYiLCJGZiIsIkdmIiwiSGYiLCJJZiIsImRvY3VtZW50RWxlbWVudCIsInRhZ05hbWUiLCJKZiIsIktmIiwiTGYiLCJOZiIsIk9mIiwiUGYiLCJVZiIsIl9yZWFjdEludGVybmFsRmliZXIiLCJRZiIsIlJmIiwiU2YiLCJUZiIsIlZmIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiV2YiLCJjb250ZXh0VHlwZSIsInJlYWRDb250ZXh0Iiwic3RhdGUiLCJYZiIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIllmIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJaZiIsIiRmIiwiX3N0cmluZ1JlZiIsImFnIiwiYmciLCJNYXAiLCJkZWxldGUiLCJjZyIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJsZyIsIm1nIiwibmciLCJvZyIsInBnIiwicWciLCJyZyIsInNnIiwidGciLCJ1ZyIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsInZnIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwid2ciLCJwZW5kaW5nQ29udGV4dCIsInhnIiwidGltZWRPdXRBdCIsImZhbGxiYWNrIiwieWciLCJ0aGVuIiwiTWYiLCJZZSIsImVsZW1lbnQiLCJoeWRyYXRlIiwiaGlkZGVuIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiemciLCJBZyIsIkJnIiwiRmciLCJHZyIsIkhnIiwiSWciLCJKZyIsIktnIiwiZGVzdHJveSIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiTGciLCJNZyIsIk5nIiwiaW5zZXJ0QmVmb3JlIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsIm9uY2xpY2siLCJPZyIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJkaXNwbGF5IiwiUGciLCJRZyIsIlJnIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJTZyIsImFkZCIsImNvbXBvbmVudFN0YWNrIiwiVGciLCJvbkNsaWNrIiwiVWciLCJWZyIsIldnIiwiWGciLCJZZyIsIlpnIiwiJGciLCJhaCIsImJoIiwiY2giLCJkaCIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiZWgiLCJjcmVhdGVFbGVtZW50TlMiLCJjcmVhdGVUZXh0Tm9kZSIsImZoIiwiZ2giLCJwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWUiLCJoaCIsIm1heER1cmF0aW9uIiwiaWgiLCJoYXMiLCJmaW5pc2hlZFdvcmsiLCJqaCIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJwaCIsInFoIiwicmgiLCJzaCIsInRoIiwidWgiLCJ2aCIsIndoIiwieGgiLCJ5aCIsInpoIiwidW5zdGFibGVfbm93IiwiQWgiLCJCaCIsIkNoIiwiRGgiLCJFaCIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJGaCIsInRpbWVvdXQiLCJ0aW1lb3V0SGFuZGxlIiwiSGgiLCJJaCIsIm5leHRTY2hlZHVsZWRSb290IiwiSmgiLCJLaCIsIkxoIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJfb25Db21wbGV0ZSIsIk1oIiwiZmlyc3RCYXRjaCIsIl9leHBpcmF0aW9uVGltZSIsIl9kZWZlciIsInJhbmdlQ291bnQiLCJkYiIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJUaCIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiU2QiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwibWluIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJGYiIsIkdiIiwid2MiLCJjaSIsIkNnIiwiRGciLCJkaSIsIkljIiwiRWciLCJjZSIsIk5oIiwiT2giLCJQaCIsIlFoIiwiUmgiLCJTaCIsIlZoIiwiX3Jvb3QiLCJfY2FsbGJhY2tzIiwiX25leHQiLCJfaGFzQ2hpbGRyZW4iLCJfZGlkQ29tcGxldGUiLCJfY2hpbGRyZW4iLCJXaCIsIl9kaWRDb21taXQiLCJfb25Db21taXQiLCJYaCIsIl9pbnRlcm5hbFJvb3QiLCJZaCIsIiRoIiwibGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiaGFzQXR0cmlidXRlIiwiWmgiLCJhaSIsIlVoIiwicXVlcnlTZWxlY3RvckFsbCIsImZvcm0iLCJjb21taXQiLCJ1bm1vdW50IiwiY3JlYXRlQmF0Y2giLCJiaSIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXMiLCJmbHVzaFN5bmMiLCJ1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQiLCJFdmVudHMiLCJ1bnN0YWJsZV9jcmVhdGVSb290IiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJWZSIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiYnVuZGxlVHlwZSIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJlaSIsImZpIiwicHJldmlvdXMiLCJwcmlvcml0eUxldmVsIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJwZXJmb3JtYW5jZSIsIl9zY2hlZE1vY2siLCJwb3N0TWVzc2FnZSIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJ1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwidW5zdGFibGVfd3JhcENhbGxiYWNrIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiZ2V0U2hpbSIsImlzUmVxdWlyZWQiLCJSZWFjdFByb3BUeXBlcyIsImFycmF5IiwiYm9vbCIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJpbnN0YW5jZU9mIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsInByb3AiLCJxcyIsInNlcCIsImVxIiwicmVnZXhwIiwibWF4S2V5cyIsImxlbiIsImtzdHIiLCJ2c3RyIiwiaWR4IiwiZGVjb2RlVVJJQ29tcG9uZW50IiwieHMiLCJzdHJpbmdpZnlQcmltaXRpdmUiLCJpc0Zpbml0ZSIsIm9iamVjdEtleXMiLCJrcyIsInNvdXJjZXMiLCJuYW1lcyIsIm1hcHBpbmdzIiwiZmlsZSIsInNvdXJjZXNDb250ZW50Iiwic291cmNlUm9vdCIsInBhZ2luZyIsInVzZVNvdXJjZU1hcCIsImxpc3QiLCJpdGVtIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJzb3VyY2VNYXBwaW5nIiwidW5lc2NhcGUiLCJzb3VyY2VVUkxzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsIm1lZGlhUXVlcnkiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiZm4iLCJzdHlsZXNJbkRvbSIsImlzT2xkSUUiLCJhbGwiLCJhdG9iIiwiZ2V0RWxlbWVudCIsInBhcmVudCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsImhlYWQiLCJzaW5nbGV0b24iLCJzaW5nbGV0b25Db3VudGVyIiwic3R5bGVzSW5zZXJ0ZWRBdFRvcCIsImZpeFVybHMiLCJhZGRTdHlsZXNUb0RvbSIsInN0eWxlcyIsImRvbVN0eWxlIiwiYWRkU3R5bGUiLCJsaXN0VG9TdHlsZXMiLCJuZXdTdHlsZXMiLCJwYXJ0IiwiY3NzIiwibWVkaWEiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCIsImluc2VydEF0IiwiYmVmb3JlIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3BsaWNlIiwiY3JlYXRlU3R5bGVFbGVtZW50IiwiYXR0cnMiLCJub25jZSIsImdldE5vbmNlIiwiYWRkQXR0cnMiLCJlbCIsInVwZGF0ZSIsInJlbW92ZSIsInN0eWxlSW5kZXgiLCJhcHBseVRvU2luZ2xldG9uVGFnIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwicmV2b2tlT2JqZWN0VVJMIiwiQmxvYiIsInJlbCIsImNyZWF0ZUxpbmtFbGVtZW50IiwiYXV0b0ZpeFVybHMiLCJjb252ZXJ0VG9BYnNvbHV0ZVVybHMiLCJibG9iIiwib2xkU3JjIiwiaHJlZiIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwibmV3T2JqIiwiREVCVUciLCJuZXdMaXN0IiwibWF5UmVtb3ZlIiwidGV4dFN0b3JlIiwicmVwbGFjZVRleHQiLCJyZXBsYWNlbWVudCIsImZpbHRlciIsIkJvb2xlYW4iLCJjc3NOb2RlIiwiY2hpbGROb2RlcyIsImJhc2VVcmwiLCJwcm90b2NvbCIsImhvc3QiLCJjdXJyZW50RGlyIiwicGF0aG5hbWUiLCJmdWxsTWF0Y2giLCJvcmlnVXJsIiwibmV3VXJsIiwidW5xdW90ZWRPcmlnVXJsIiwiJDEiLCJhcnIiLCJpc0Fic29sdXRlIiwic3BsaWNlT25lIiwicmVzb2x2ZV9wYXRobmFtZSIsInRvUGFydHMiLCJmcm9tUGFydHMiLCJpc1RvQWJzIiwiaXNGcm9tQWJzIiwibXVzdEVuZEFicyIsImhhc1RyYWlsaW5nU2xhc2giLCJsYXN0IiwidXAiLCJ1bnNoaWZ0IiwiX3R5cGVvZiIsInZhbHVlX2VxdWFsIiwidmFsdWVFcXVhbCIsImV2ZXJ5IiwiYVR5cGUiLCJhVmFsdWUiLCJ2YWx1ZU9mIiwiYlZhbHVlIiwiYUtleXMiLCJiS2V5cyIsImFkZExlYWRpbmdTbGFzaCIsImhhc0Jhc2VuYW1lIiwic3RyaXBCYXNlbmFtZSIsInN0cmlwVHJhaWxpbmdTbGFzaCIsImNyZWF0ZVBhdGgiLCJoYXNoIiwiX2V4dGVuZHMiLCJMb2NhdGlvblV0aWxzX2NyZWF0ZUxvY2F0aW9uIiwiY3VycmVudExvY2F0aW9uIiwiaGFzaEluZGV4Iiwic2VhcmNoSW5kZXgiLCJwYXJzZVBhdGgiLCJkZWNvZGVVUkkiLCJVUklFcnJvciIsIkxvY2F0aW9uVXRpbHNfbG9jYXRpb25zQXJlRXF1YWwiLCJlc19jcmVhdGVUcmFuc2l0aW9uTWFuYWdlciIsInByb21wdCIsImxpc3RlbmVycyIsInNldFByb21wdCIsIm5leHRQcm9tcHQiLCJicm93c2VyX2RlZmF1bHQiLCJjb25maXJtVHJhbnNpdGlvblRvIiwiYWN0aW9uIiwiZ2V0VXNlckNvbmZpcm1hdGlvbiIsImFwcGVuZExpc3RlbmVyIiwiaXNBY3RpdmUiLCJsaXN0ZW5lciIsIm5vdGlmeUxpc3RlbmVycyIsIl9sZW4iLCJfa2V5IiwiY2FuVXNlRE9NIiwiZXZlbnQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZ2V0Q29uZmlybWF0aW9uIiwibWVzc2FnZSIsImNvbmZpcm0iLCJjcmVhdGVCcm93c2VySGlzdG9yeV90eXBlb2YiLCJjcmVhdGVCcm93c2VySGlzdG9yeV9leHRlbmRzIiwiZ2V0SGlzdG9yeVN0YXRlIiwiaGlzdG9yeSIsImVzX2NyZWF0ZUJyb3dzZXJIaXN0b3J5IiwiaW52YXJpYW50X2Jyb3dzZXJfZGVmYXVsdCIsImdsb2JhbEhpc3RvcnkiLCJjYW5Vc2VIaXN0b3J5IiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwibmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIiLCJfcHJvcHMkZm9yY2VSZWZyZXNoIiwiZm9yY2VSZWZyZXNoIiwiX3Byb3BzJGdldFVzZXJDb25maXJtIiwiX3Byb3BzJGtleUxlbmd0aCIsImtleUxlbmd0aCIsImJhc2VuYW1lIiwiZ2V0RE9NTG9jYXRpb24iLCJoaXN0b3J5U3RhdGUiLCJfcmVmIiwiX3dpbmRvdyRsb2NhdGlvbiIsImNyZWF0ZUtleSIsInRyYW5zaXRpb25NYW5hZ2VyIiwibmV4dFN0YXRlIiwiaGFuZGxlUG9wU3RhdGUiLCJpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50IiwiaGFuZGxlUG9wIiwiaGFuZGxlSGFzaENoYW5nZSIsImZvcmNlTmV4dFBvcCIsIm9rIiwicmV2ZXJ0UG9wIiwiZnJvbUxvY2F0aW9uIiwidG9Mb2NhdGlvbiIsInRvSW5kZXgiLCJhbGxLZXlzIiwiZnJvbUluZGV4IiwiZGVsdGEiLCJnbyIsImluaXRpYWxMb2NhdGlvbiIsImNyZWF0ZUhyZWYiLCJsaXN0ZW5lckNvdW50IiwiY2hlY2tET01MaXN0ZW5lcnMiLCJpc0Jsb2NrZWQiLCJwdXNoU3RhdGUiLCJwcmV2SW5kZXgiLCJuZXh0S2V5cyIsInJlcGxhY2VTdGF0ZSIsImdvQmFjayIsImdvRm9yd2FyZCIsImJsb2NrIiwidW5ibG9jayIsImxpc3RlbiIsInVubGlzdGVuIiwiUm91dGVyX2V4dGVuZHMiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsInNlbGYiLCJSZWZlcmVuY2VFcnJvciIsIlJvdXRlcl9Sb3V0ZXIiLCJfUmVhY3QkQ29tcG9uZW50IiwiUm91dGVyIiwiX3RlbXAiLCJfdGhpcyIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJfY2xhc3NDYWxsQ2hlY2siLCJjb21wdXRlTWF0Y2giLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJ3cml0YWJsZSIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiX2luaGVyaXRzIiwicm91dGVyIiwicGFyYW1zIiwiaXNFeGFjdCIsIl90aGlzMiIsIl9wcm9wcyIsInJlYWN0X2RlZmF1bHQiLCJuZXh0UHJvcHMiLCJ3YXJuaW5nX2RlZmF1bHQiLCJwcm9wX3R5cGVzX2RlZmF1bHQiLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX1JvdXRlciIsIkJyb3dzZXJSb3V0ZXJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIkJyb3dzZXJSb3V0ZXJfQnJvd3NlclJvdXRlciIsIkJyb3dzZXJSb3V0ZXIiLCJCcm93c2VyUm91dGVyX2NsYXNzQ2FsbENoZWNrIiwiQnJvd3NlclJvdXRlcl9pbmhlcml0cyIsImVzX0Jyb3dzZXJSb3V0ZXIiLCJwYXR0ZXJuQ2FjaGUiLCJjYWNoZUNvdW50IiwiZXNfbWF0Y2hQYXRoIiwiX29wdGlvbnMiLCJfb3B0aW9ucyRleGFjdCIsIl9vcHRpb25zJHN0cmljdCIsIl9vcHRpb25zJHNlbnNpdGl2ZSIsIl9jb21waWxlUGF0aCIsImNhY2hlS2V5IiwiY2FjaGUiLCJjb21waWxlZFBhdHRlcm4iLCJwYXRoX3RvX3JlZ2V4cF9kZWZhdWx0IiwibWF0Y2hQYXRoX2NvbXBpbGVQYXRoIiwidmFsdWVzIiwicmVkdWNlIiwiU3dpdGNoX1N3aXRjaCIsIlN3aXRjaCIsIlN3aXRjaF9jbGFzc0NhbGxDaGVjayIsIlN3aXRjaF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiU3dpdGNoX2luaGVyaXRzIiwiX2VsZW1lbnQkcHJvcHMiLCJwYXRoUHJvcCIsImNvbXB1dGVkTWF0Y2giLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX1N3aXRjaCIsIlJvdXRlX2V4dGVuZHMiLCJSb3V0ZV9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiUm91dGVfaXNFbXB0eUNoaWxkcmVuIiwiUm91dGVfUm91dGUiLCJSb3V0ZSIsIlJvdXRlX2NsYXNzQ2FsbENoZWNrIiwiUm91dGVfaW5oZXJpdHMiLCJjb21wb25lbnQiLCJuZXh0Q29udGV4dCIsIl9jb250ZXh0JHJvdXRlciIsInN0YXRpY0NvbnRleHQiLCJlc19Sb3V0ZSIsInJlYWN0X3JvdXRlcl9kb21fZXNfUm91dGUiLCJnZW5lcmF0ZVBhdGhfcGF0dGVybkNhY2hlIiwiZ2VuZXJhdGVQYXRoX2NhY2hlQ291bnQiLCJlc19nZW5lcmF0ZVBhdGgiLCJjb21waWxlZEdlbmVyYXRvciIsImdlbmVyYXRlUGF0aF9jb21waWxlR2VuZXJhdG9yIiwiZ2VuZXJhdG9yIiwiUmVkaXJlY3RfZXh0ZW5kcyIsIlJlZGlyZWN0X1JlZGlyZWN0IiwiUmVkaXJlY3QiLCJSZWRpcmVjdF9jbGFzc0NhbGxDaGVjayIsIlJlZGlyZWN0X3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJSZWRpcmVjdF9pbmhlcml0cyIsImlzU3RhdGljIiwicGVyZm9ybSIsInByZXZQcm9wcyIsInByZXZUbyIsIm5leHRUbyIsImNvbXB1dGVUbyIsInJlYWN0X3JvdXRlcl9kb21fZXNfUmVkaXJlY3QiLCJ3aXRoUm91dGVyX2V4dGVuZHMiLCJyZWFjdF9yb3V0ZXJfZG9tX2VzX3dpdGhSb3V0ZXIiLCJ3cmFwcGVkQ29tcG9uZW50UmVmIiwicmVtYWluaW5nUHJvcHMiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJyb3V0ZUNvbXBvbmVudFByb3BzIiwiV3JhcHBlZENvbXBvbmVudCIsImhvaXN0X25vbl9yZWFjdF9zdGF0aWNzX2Nqc19kZWZhdWx0IiwiZmV0Y2giLCJqc29uIiwiZ2V0QXJ0aXN0cyIsInNlYXJjaE5hbWUiLCJhcnRpc3RzIiwicGFnZXMiLCJjZWlsIiwiYXJ0aXN0IiwiZGVzY3JpcHRpb24iLCJkaXNhbWJpZ3VhdGlvbiIsImdldEFydGlzdCIsIndvcmtzIiwiTGlua19leHRlbmRzIiwiTGlua19wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiaXNNb2RpZmllZEV2ZW50IiwiTGlua19MaW5rIiwiTGluayIsIkxpbmtfY2xhc3NDYWxsQ2hlY2siLCJoYW5kbGVDbGljayIsIl90aGlzJHByb3BzIiwiTGlua19pbmhlcml0cyIsImlubmVyUmVmIiwiTGlua19vYmplY3RXaXRob3V0UHJvcGVydGllcyIsImVzX0xpbmsiLCJBcnRpc3QiLCJST1VURVMiLCJBUlRJU1QiLCJsaW5rVG8iLCJQYWdpbmciLCJjdXJyZW50UGFnZSIsInRvdGFsUGFnZXMiLCJ1cGRhdGVQYWdlIiwicHJldmlvdXNCdXR0b24iLCJuZXh0QnV0dG9uIiwiY2xhc3NOYW1lIiwiU2VhcmNoIiwic2VhcmNoVGVybSIsInF1ZXJ5U3RyaW5nIiwicGFnZSIsImRvU2VhcmNoIiwiZ2V0RWxlbWVudEJ5SWQiLCJzZWFyY2hRdWVyeSIsInBhdGhOYW1lIiwiU0VBUkNIIiwiX3RoaXMkc3RhdGUiLCJhcnRpc3RzTGlzdCIsImFydGlzdHNfQXJ0aXN0IiwicmVhY3QiLCJvblN1Ym1pdCIsInVwZGF0ZVNlYXJjaFRlcm0iLCJjb21wb25lbnRzX3BhZ2luZ19QYWdpbmciLCJ1cGRhdGVIYW5kbGVQYWdlIiwid2l0aFJvdXRlciIsIldvcmsiLCJ0aXRsZSIsIkxZUklDUyIsIldvcmtzIiwiX3JlZjIiLCJ3b3JrIiwiV29ya3NfV29yayIsIkFydGlzdERldGFpbCIsImZldGNoQXJ0aXN0IiwiX3RoaXMkc3RhdGUkYXJ0aXN0Iiwid29ya3NfV29ya3MiLCJMeXJpY3MiLCJseXJpY3MiLCJnZXRMeXJpY3MiLCJSZWFjdERPTSJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsRUFBQSxHQUdBLFNBQUFDLEVBQUFDLEdBR0EsR0FBQUYsRUFBQUUsR0FDQSxPQUFBRixFQUFBRSxHQUFBQyxRQUdBLElBQUFDLEVBQUFKLEVBQUFFLEdBQUEsQ0FDQUcsRUFBQUgsRUFDQUksR0FBQSxFQUNBSCxRQUFBLElBVUEsT0FOQUksRUFBQUwsR0FBQU0sS0FBQUosRUFBQUQsUUFBQUMsSUFBQUQsUUFBQUYsR0FHQUcsRUFBQUUsR0FBQSxFQUdBRixFQUFBRCxRQUtBRixFQUFBUSxFQUFBRixFQUdBTixFQUFBUyxFQUFBVixFQUdBQyxFQUFBVSxFQUFBLFNBQUFSLEVBQUFTLEVBQUFDLEdBQ0FaLEVBQUFhLEVBQUFYLEVBQUFTLElBQ0FHLE9BQUFDLGVBQUFiLEVBQUFTLEVBQUEsQ0FBMENLLFlBQUEsRUFBQUMsSUFBQUwsS0FLMUNaLEVBQUFrQixFQUFBLFNBQUFoQixHQUNBLG9CQUFBaUIsZUFBQUMsYUFDQU4sT0FBQUMsZUFBQWIsRUFBQWlCLE9BQUFDLFlBQUEsQ0FBd0RDLE1BQUEsV0FFeERQLE9BQUFDLGVBQUFiLEVBQUEsY0FBaURtQixPQUFBLEtBUWpEckIsRUFBQXNCLEVBQUEsU0FBQUQsRUFBQUUsR0FFQSxHQURBLEVBQUFBLElBQUFGLEVBQUFyQixFQUFBcUIsSUFDQSxFQUFBRSxFQUFBLE9BQUFGLEVBQ0EsS0FBQUUsR0FBQSxpQkFBQUYsUUFBQUcsV0FBQSxPQUFBSCxFQUNBLElBQUFJLEVBQUFYLE9BQUFZLE9BQUEsTUFHQSxHQUZBMUIsRUFBQWtCLEVBQUFPLEdBQ0FYLE9BQUFDLGVBQUFVLEVBQUEsV0FBeUNULFlBQUEsRUFBQUssVUFDekMsRUFBQUUsR0FBQSxpQkFBQUYsRUFBQSxRQUFBTSxLQUFBTixFQUFBckIsRUFBQVUsRUFBQWUsRUFBQUUsRUFBQSxTQUFBQSxHQUFnSCxPQUFBTixFQUFBTSxJQUFxQkMsS0FBQSxLQUFBRCxJQUNySSxPQUFBRixHQUlBekIsRUFBQTZCLEVBQUEsU0FBQTFCLEdBQ0EsSUFBQVMsRUFBQVQsS0FBQXFCLFdBQ0EsV0FBMkIsT0FBQXJCLEVBQUEsU0FDM0IsV0FBaUMsT0FBQUEsR0FFakMsT0FEQUgsRUFBQVUsRUFBQUUsRUFBQSxJQUFBQSxHQUNBQSxHQUlBWixFQUFBYSxFQUFBLFNBQUFpQixFQUFBQyxHQUFzRCxPQUFBakIsT0FBQWtCLFVBQUFDLGVBQUExQixLQUFBdUIsRUFBQUMsSUFHdEQvQixFQUFBa0MsRUFBQSxJQUlBbEMsSUFBQW1DLEVBQUEsc0JDeERBaEMsRUFBQUQsUUFBbUJGLEVBQVEsR0FBUkEsaUNDdkJuQkcsRUFBQUQsUUFBbUJGLEVBQVEsa0NDd0QzQkcsRUFBQUQsUUF6Q0EsMkNDOEJBQyxFQUFBRCxRQTVCQSxTQUFBa0MsRUFBQUMsRUFBQUMsRUFBQUMsRUFBQTlCLEVBQUFDLEVBQUE4QixFQUFBQyxHQU9BLElBQUFMLEVBQUEsQ0FDQSxJQUFBTSxFQUNBLFFBQUFDLElBQUFOLEVBQ0FLLEVBQUEsSUFBQUUsTUFDQSxxSUFHSyxDQUNMLElBQUFDLEVBQUEsQ0FBQVAsRUFBQUMsRUFBQTlCLEVBQUFDLEVBQUE4QixFQUFBQyxHQUNBSyxFQUFBLEdBQ0FKLEVBQUEsSUFBQUUsTUFDQVAsRUFBQVUsUUFBQSxpQkFBMEMsT0FBQUYsRUFBQUMsU0FFMUNuQyxLQUFBLHNCQUlBLE1BREErQixFQUFBTSxZQUFBLEVBQ0FOLGtDQzVCQSxJQUVBTyxFQUFBLGFBMkNBOUMsRUFBQUQsUUFBQStDLG1CQzdEQSxJQUFBQyxFQUFjbEQsRUFBUSxJQUt0QkcsRUFBQUQsUUFBQWlELEVBQ0FoRCxFQUFBRCxRQUFBa0QsUUFDQWpELEVBQUFELFFBQUFtRCxRQXNHQSxTQUFBQyxFQUFBQyxHQUNBLE9BQUFDLEVBQUFKLEVBQUFFLEVBQUFDLEtBdEdBcEQsRUFBQUQsUUFBQXNELG1CQUNBckQsRUFBQUQsUUFBQXVELGlCQU9BLElBQUFDLEVBQUEsSUFBQUMsT0FBQSxDQUdBLFVBT0EsMEdBQ0FDLEtBQUEsVUFTQSxTQUFBUixFQUFBRSxFQUFBQyxHQVFBLElBUEEsSUFLQU0sRUFMQUMsRUFBQSxHQUNBbkMsRUFBQSxFQUNBb0MsRUFBQSxFQUNBQyxFQUFBLEdBQ0FDLEVBQUFWLEtBQUFXLFdBQUEsSUFHQSxPQUFBTCxFQUFBSCxFQUFBUyxLQUFBYixLQUFBLENBQ0EsSUFBQTlDLEVBQUFxRCxFQUFBLEdBQ0FPLEVBQUFQLEVBQUEsR0FDQVEsRUFBQVIsRUFBQUUsTUFLQSxHQUpBQyxHQUFBVixFQUFBZ0IsTUFBQVAsRUFBQU0sR0FDQU4sRUFBQU0sRUFBQTdELEVBQUErRCxPQUdBSCxFQUNBSixHQUFBSSxFQUFBLE9BREEsQ0FLQSxJQUFBSSxFQUFBbEIsRUFBQVMsR0FDQVUsRUFBQVosRUFBQSxHQUNBbEQsRUFBQWtELEVBQUEsR0FDQWEsRUFBQWIsRUFBQSxHQUNBYyxFQUFBZCxFQUFBLEdBQ0FlLEVBQUFmLEVBQUEsR0FDQWdCLEVBQUFoQixFQUFBLEdBR0FHLElBQ0FGLEVBQUFnQixLQUFBZCxHQUNBQSxFQUFBLElBR0EsSUFBQWUsRUFBQSxNQUFBTixHQUFBLE1BQUFELE9BQUFDLEVBQ0FPLEVBQUEsTUFBQUosR0FBQSxNQUFBQSxFQUNBSyxFQUFBLE1BQUFMLEdBQUEsTUFBQUEsRUFDQVYsRUFBQUwsRUFBQSxJQUFBSSxFQUNBaUIsRUFBQVIsR0FBQUMsRUFFQWIsRUFBQWdCLEtBQUEsQ0FDQW5FLFFBQUFnQixJQUNBOEMsVUFBQSxHQUNBUCxZQUNBZSxXQUNBRCxTQUNBRCxVQUNBRixhQUNBSyxVQUFBQyxFQUFBRCxHQUFBTCxFQUFBLFVBQUFPLEVBQUFsQixHQUFBLFNBY0EsT0FUQUgsRUFBQVQsRUFBQWlCLFNBQ0FQLEdBQUFWLEVBQUErQixPQUFBdEIsSUFJQUMsR0FDQUYsRUFBQWdCLEtBQUFkLEdBR0FGLEVBb0JBLFNBQUF3QixFQUFBaEMsR0FDQSxPQUFBaUMsVUFBQWpDLEdBQUFQLFFBQUEsbUJBQUF0QyxHQUNBLFVBQUFBLEVBQUErRSxXQUFBLEdBQUFDLFNBQUEsSUFBQUMsZ0JBbUJBLFNBQUFsQyxFQUFBTSxHQUtBLElBSEEsSUFBQTZCLEVBQUEsSUFBQUMsTUFBQTlCLEVBQUFTLFFBR0FuRSxFQUFBLEVBQWlCQSxFQUFBMEQsRUFBQVMsT0FBbUJuRSxJQUNwQyxpQkFBQTBELEVBQUExRCxLQUNBdUYsRUFBQXZGLEdBQUEsSUFBQXVELE9BQUEsT0FBQUcsRUFBQTFELEdBQUE4RSxRQUFBLE9BSUEsZ0JBQUFXLEVBQUFDLEdBTUEsSUFMQSxJQUFBOUIsRUFBQSxHQUNBK0IsRUFBQUYsR0FBQSxHQUVBRyxHQURBRixHQUFBLElBQ0FHLE9BQUFYLEVBQUFZLG1CQUVBOUYsRUFBQSxFQUFtQkEsRUFBQTBELEVBQUFTLE9BQW1CbkUsSUFBQSxDQUN0QyxJQUFBK0YsRUFBQXJDLEVBQUExRCxHQUVBLG9CQUFBK0YsRUFBQSxDQU1BLElBQ0FDLEVBREEvRSxFQUFBMEUsRUFBQUksRUFBQXhGLE1BR0EsU0FBQVUsRUFBQSxDQUNBLEdBQUE4RSxFQUFBbEIsU0FBQSxDQUVBa0IsRUFBQXBCLFVBQ0FmLEdBQUFtQyxFQUFBMUIsUUFHQSxTQUVBLFVBQUE0QixVQUFBLGFBQUFGLEVBQUF4RixLQUFBLG1CQUlBLEdBQUF1QyxFQUFBN0IsR0FBQSxDQUNBLElBQUE4RSxFQUFBbkIsT0FDQSxVQUFBcUIsVUFBQSxhQUFBRixFQUFBeEYsS0FBQSxrQ0FBQTJGLEtBQUFDLFVBQUFsRixHQUFBLEtBR0EsT0FBQUEsRUFBQWtELE9BQUEsQ0FDQSxHQUFBNEIsRUFBQWxCLFNBQ0EsU0FFQSxVQUFBb0IsVUFBQSxhQUFBRixFQUFBeEYsS0FBQSxxQkFJQSxRQUFBNkYsRUFBQSxFQUF1QkEsRUFBQW5GLEVBQUFrRCxPQUFrQmlDLElBQUEsQ0FHekMsR0FGQUosRUFBQUosRUFBQTNFLEVBQUFtRixLQUVBYixFQUFBdkYsR0FBQXFHLEtBQUFMLEdBQ0EsVUFBQUMsVUFBQSxpQkFBQUYsRUFBQXhGLEtBQUEsZUFBQXdGLEVBQUFqQixRQUFBLG9CQUFBb0IsS0FBQUMsVUFBQUgsR0FBQSxLQUdBcEMsSUFBQSxJQUFBd0MsRUFBQUwsRUFBQTFCLE9BQUEwQixFQUFBakMsV0FBQWtDLE9BcEJBLENBNEJBLEdBRkFBLEVBQUFELEVBQUF0QixTQTVFQVUsVUE0RUFsRSxHQTVFQTBCLFFBQUEsaUJBQUF0QyxHQUNBLFVBQUFBLEVBQUErRSxXQUFBLEdBQUFDLFNBQUEsSUFBQUMsZ0JBMkVBTSxFQUFBM0UsSUFFQXNFLEVBQUF2RixHQUFBcUcsS0FBQUwsR0FDQSxVQUFBQyxVQUFBLGFBQUFGLEVBQUF4RixLQUFBLGVBQUF3RixFQUFBakIsUUFBQSxvQkFBQWtCLEVBQUEsS0FHQXBDLEdBQUFtQyxFQUFBMUIsT0FBQTJCLFFBckRBcEMsR0FBQW1DLEVBd0RBLE9BQUFuQyxHQVVBLFNBQUFvQixFQUFBOUIsR0FDQSxPQUFBQSxFQUFBUCxRQUFBLDZCQUFtQyxRQVNuQyxTQUFBb0MsRUFBQVIsR0FDQSxPQUFBQSxFQUFBNUIsUUFBQSx3QkFVQSxTQUFBMkQsRUFBQUMsRUFBQUMsR0FFQSxPQURBRCxFQUFBQyxPQUNBRCxFQVNBLFNBQUFFLEVBQUF0RCxHQUNBLE9BQUFBLEVBQUF1RCxVQUFBLE9Bd0VBLFNBQUFyRCxFQUFBSyxFQUFBOEMsRUFBQXJELEdBQ0FMLEVBQUEwRCxLQUNBckQsRUFBaUNxRCxHQUFBckQsRUFDakNxRCxFQUFBLElBVUEsSUFMQSxJQUFBRyxHQUZBeEQsS0FBQSxJQUVBd0QsT0FDQUMsR0FBQSxJQUFBekQsRUFBQXlELElBQ0FDLEVBQUEsR0FHQTdHLEVBQUEsRUFBaUJBLEVBQUEwRCxFQUFBUyxPQUFtQm5FLElBQUEsQ0FDcEMsSUFBQStGLEVBQUFyQyxFQUFBMUQsR0FFQSxvQkFBQStGLEVBQ0FjLEdBQUE3QixFQUFBZSxPQUNLLENBQ0wsSUFBQTFCLEVBQUFXLEVBQUFlLEVBQUExQixRQUNBQyxFQUFBLE1BQUF5QixFQUFBakIsUUFBQSxJQUVBMEIsRUFBQTlCLEtBQUFxQixHQUVBQSxFQUFBbkIsU0FDQU4sR0FBQSxNQUFBRCxFQUFBQyxFQUFBLE1BYUF1QyxHQU5BdkMsRUFKQXlCLEVBQUFsQixTQUNBa0IsRUFBQXBCLFFBR0FOLEVBQUEsSUFBQUMsRUFBQSxLQUZBLE1BQUFELEVBQUEsSUFBQUMsRUFBQSxNQUtBRCxFQUFBLElBQUFDLEVBQUEsS0FPQSxJQUFBUixFQUFBa0IsRUFBQTdCLEVBQUFXLFdBQUEsS0FDQWdELEVBQUFELEVBQUEzQyxPQUFBSixFQUFBSyxVQUFBTCxFQWtCQSxPQVpBNkMsSUFDQUUsR0FBQUMsRUFBQUQsRUFBQTNDLE1BQUEsR0FBQUosRUFBQUssUUFBQTBDLEdBQUEsTUFBQS9DLEVBQUEsV0FJQStDLEdBREFELEVBQ0EsSUFJQUQsR0FBQUcsRUFBQSxTQUFBaEQsRUFBQSxNQUdBd0MsRUFBQSxJQUFBL0MsT0FBQSxJQUFBc0QsRUFBQUosRUFBQXRELElBQUFxRCxHQWVBLFNBQUF6RCxFQUFBYSxFQUFBNEMsRUFBQXJELEdBUUEsT0FQQUwsRUFBQTBELEtBQ0FyRCxFQUFpQ3FELEdBQUFyRCxFQUNqQ3FELEVBQUEsSUFHQXJELEtBQUEsR0FFQVMsYUFBQUwsT0FsSkEsU0FBQUssRUFBQTRDLEdBRUEsSUFBQU8sRUFBQW5ELEVBQUFvRCxPQUFBQyxNQUFBLGFBRUEsR0FBQUYsRUFDQSxRQUFBL0csRUFBQSxFQUFtQkEsRUFBQStHLEVBQUE1QyxPQUFtQm5FLElBQ3RDd0csRUFBQTlCLEtBQUEsQ0FDQW5FLEtBQUFQLEVBQ0FxRSxPQUFBLEtBQ0FQLFVBQUEsS0FDQWUsVUFBQSxFQUNBRCxRQUFBLEVBQ0FELFNBQUEsRUFDQUYsVUFBQSxFQUNBSyxRQUFBLE9BS0EsT0FBQXdCLEVBQUExQyxFQUFBNEMsR0FnSUFVLENBQUF0RCxFQUFrRCxHQUdsRGQsRUFBQWMsR0F4SEEsU0FBQUEsRUFBQTRDLEVBQUFyRCxHQUdBLElBRkEsSUFBQWdFLEVBQUEsR0FFQW5ILEVBQUEsRUFBaUJBLEVBQUE0RCxFQUFBTyxPQUFpQm5FLElBQ2xDbUgsRUFBQXpDLEtBQUEzQixFQUFBYSxFQUFBNUQsR0FBQXdHLEVBQUFyRCxHQUFBNkQsUUFLQSxPQUFBVixFQUZBLElBQUEvQyxPQUFBLE1BQUE0RCxFQUFBM0QsS0FBQSxTQUFBaUQsRUFBQXRELElBRUFxRCxHQWdIQVksQ0FBMkMsRUFBOEIsRUFBQWpFLEdBckd6RSxTQUFBUyxFQUFBNEMsRUFBQXJELEdBQ0EsT0FBQUUsRUFBQUwsRUFBQVksRUFBQVQsR0FBQXFELEVBQUFyRCxHQXVHQWtFLENBQTBDLEVBQThCLEVBQUFsRSxtQ0N0YXhFckQsRUFBQXdILE9BQUF4SCxFQUFBa0QsTUFBaUNwRCxFQUFRLElBQ3pDRSxFQUFBOEYsT0FBQTlGLEVBQUFxRyxVQUFxQ3ZHLEVBQVE7Ozs7O0VDSzdDLElBQUEySCxFQUFBN0csT0FBQTZHLHNCQUNBMUYsRUFBQW5CLE9BQUFrQixVQUFBQyxlQUNBMkYsRUFBQTlHLE9BQUFrQixVQUFBNkYscUJBc0RBMUgsRUFBQUQsUUE1Q0EsV0FDQSxJQUNBLElBQUFZLE9BQUFnSCxPQUNBLFNBTUEsSUFBQUMsRUFBQSxJQUFBQyxPQUFBLE9BRUEsR0FEQUQsRUFBQSxRQUNBLE1BQUFqSCxPQUFBbUgsb0JBQUFGLEdBQUEsR0FDQSxTQUtBLElBREEsSUFBQUcsRUFBQSxHQUNBOUgsRUFBQSxFQUFpQkEsRUFBQSxHQUFRQSxJQUN6QjhILEVBQUEsSUFBQUYsT0FBQUcsYUFBQS9ILE1BS0Esa0JBSEFVLE9BQUFtSCxvQkFBQUMsR0FBQUUsSUFBQSxTQUFBdkcsR0FDQSxPQUFBcUcsRUFBQXJHLEtBRUErQixLQUFBLElBQ0EsU0FJQSxJQUFBeUUsRUFBQSxHQUlBLE1BSEEsdUJBQUFDLE1BQUEsSUFBQUMsUUFBQSxTQUFBQyxHQUNBSCxFQUFBRyxPQUdBLHlCQURBMUgsT0FBQThGLEtBQUE5RixPQUFBZ0gsT0FBQSxHQUFrQ08sSUFBQXpFLEtBQUEsSUFNaEMsTUFBQTZFLEdBRUYsVUFJQUMsR0FBQTVILE9BQUFnSCxPQUFBLFNBQUFhLEVBQUF2QixHQUtBLElBSkEsSUFBQXdCLEVBRUFDLEVBREFDLEVBdERBLFNBQUFDLEdBQ0EsR0FBQUEsUUFDQSxVQUFBMUMsVUFBQSx5REFHQSxPQUFBdkYsT0FBQWlJLEdBaURBQyxDQUFBTCxHQUdBeEcsRUFBQSxFQUFnQkEsRUFBQThHLFVBQUExRSxPQUFzQnBDLElBQUEsQ0FHdEMsUUFBQVIsS0FGQWlILEVBQUE5SCxPQUFBbUksVUFBQTlHLElBR0FGLEVBQUExQixLQUFBcUksRUFBQWpILEtBQ0FtSCxFQUFBbkgsR0FBQWlILEVBQUFqSCxJQUlBLEdBQUFnRyxFQUFBLENBQ0FrQixFQUFBbEIsRUFBQWlCLEdBQ0EsUUFBQXhJLEVBQUEsRUFBa0JBLEVBQUF5SSxFQUFBdEUsT0FBb0JuRSxJQUN0Q3dILEVBQUFySCxLQUFBcUksRUFBQUMsRUFBQXpJLE1BQ0EwSSxFQUFBRCxFQUFBekksSUFBQXdJLEVBQUFDLEVBQUF6SSxNQU1BLE9BQUEwSSxrQ0N0RkEsU0FBQUksSUFFQSxHQUNBLG9CQUFBQyxnQ0FDQSxtQkFBQUEsK0JBQUFELFNBY0EsSUFFQUMsK0JBQUFELFlBQ0csTUFBQVQsR0FHSFcsUUFBQTFHLE1BQUErRixJQU9BUyxHQUNBL0ksRUFBQUQsUUFBbUJGLEVBQVEscUJDakMzQixJQUFBcUosRUFBY3JKLEVBQVEsSUFFdEIsaUJBQUFxSixNQUFBLEVBQTRDbEosRUFBQUMsRUFBU2lKLEVBQUEsTUFPckQsSUFBQTlGLEVBQUEsQ0FBZStGLFdBQUEsRUFBQUMsS0FBQSxFQUVmQyxlQVBBQSxFQVFBQyxnQkFBQTlHLEdBRWEzQyxFQUFRLEdBQVJBLENBQThEcUosRUFBQTlGLEdBRTNFOEYsRUFBQUssU0FBQXZKLEVBQUFELFFBQUFtSixFQUFBSyxzQ0NYQSxJQUFBQyxFQUFBLENBQ0FDLG1CQUFBLEVBQ0FDLGNBQUEsRUFDQUMsY0FBQSxFQUNBQyxhQUFBLEVBQ0FDLGlCQUFBLEVBQ0FDLDBCQUFBLEVBQ0FDLFFBQUEsRUFDQUMsV0FBQSxFQUNBQyxNQUFBLEdBR0FDLEVBQUEsQ0FDQTFKLE1BQUEsRUFDQTRELFFBQUEsRUFDQXZDLFdBQUEsRUFDQXNJLFFBQUEsRUFDQUMsUUFBQSxFQUNBdEIsV0FBQSxFQUNBdUIsT0FBQSxHQUdBekosRUFBQUQsT0FBQUMsZUFDQWtILEVBQUFuSCxPQUFBbUgsb0JBQ0FOLEVBQUE3RyxPQUFBNkcsc0JBQ0E4QyxFQUFBM0osT0FBQTJKLHlCQUNBQyxFQUFBNUosT0FBQTRKLGVBQ0FDLEVBQUFELEtBQUE1SixRQWtDQVgsRUFBQUQsUUFoQ0EsU0FBQTBLLEVBQUFDLEVBQUFDLEVBQUFDLEdBQ0Esb0JBQUFELEVBQUEsQ0FFQSxHQUFBSCxFQUFBLENBQ0EsSUFBQUssRUFBQU4sRUFBQUksR0FDQUUsT0FBQUwsR0FDQUMsRUFBQUMsRUFBQUcsRUFBQUQsR0FJQSxJQUFBbkUsRUFBQXFCLEVBQUE2QyxHQUVBbkQsSUFDQWYsSUFBQXFFLE9BQUF0RCxFQUFBbUQsS0FHQSxRQUFBMUssRUFBQSxFQUF1QkEsRUFBQXdHLEVBQUFyQyxTQUFpQm5FLEVBQUEsQ0FDeEMsSUFBQXVCLEVBQUFpRixFQUFBeEcsR0FDQSxLQUFBdUosRUFBQWhJLElBQUEwSSxFQUFBMUksSUFBQW9KLEtBQUFwSixJQUFBLENBQ0EsSUFBQXVKLEVBQUFULEVBQUFLLEVBQUFuSixHQUNBLElBQ0FaLEVBQUE4SixFQUFBbEosRUFBQXVKLEdBQ2lCLE1BQUExSSxNQUlqQixPQUFBcUksRUFHQSxPQUFBQTs7Ozs7Ozs7R0N2RGEsSUFBQU0sRUFBTW5MLEVBQVEsR0FBZTZCLEVBQUEsbUJBQUFWLGVBQUFpSyxJQUFBbEosRUFBQUwsRUFBQVYsT0FBQWlLLElBQUEsdUJBQUFDLEVBQUF4SixFQUFBVixPQUFBaUssSUFBQSxzQkFBQWxLLEVBQUFXLEVBQUFWLE9BQUFpSyxJQUFBLHdCQUFBOUosRUFBQU8sRUFBQVYsT0FBQWlLLElBQUEsMkJBQUFFLEVBQUF6SixFQUFBVixPQUFBaUssSUFBQSx3QkFBQUcsRUFBQTFKLEVBQUFWLE9BQUFpSyxJQUFBLHdCQUFBSSxFQUFBM0osRUFBQVYsT0FBQWlLLElBQUEsdUJBQUFLLEVBQUE1SixFQUFBVixPQUFBaUssSUFBQSwrQkFBQU0sRUFBQTdKLEVBQUFWLE9BQUFpSyxJQUFBLDJCQUFBTyxFQUFBOUosRUFBQVYsT0FBQWlLLElBQUEsd0JBQUFRLEVBQUEvSixFQUFBVixPQUFBaUssSUFBQSxjQUMxQyxNQUFBUyxFQUFBaEssRUFBQVYsT0FBQWlLLElBQUEsb0JBQUFVLEVBQUEsbUJBQUEzSyxlQUFBNEssU0FDQSxTQUFBQyxFQUFBMUosR0FBYyxRQUFBQyxFQUFBMEcsVUFBQTFFLE9BQUEsRUFBQS9CLEVBQUEseURBQUFGLEVBQUE3QixFQUFBLEVBQThGQSxFQUFBOEIsRUFBSTlCLElBQUErQixHQUFBLFdBQUEwRCxtQkFBQStDLFVBQUF4SSxFQUFBLEtBRHpCLFNBQUE2QixFQUFBQyxFQUFBQyxFQUFBL0IsRUFBQUMsRUFBQXVMLEVBQUFDLEVBQUF6SixHQUE2QixJQUFBSCxFQUFBLENBQWdCLEdBQVRBLE9BQUEsT0FBUyxJQUFBQyxFQUFBRCxFQUFBTSxNQUFBLHFJQUF1SixDQUFLLElBQUF2QyxFQUFBLENBQUFtQyxFQUFBL0IsRUFBQUMsRUFBQXVMLEVBQUFDLEVBQUF6SixHQUFBakMsRUFBQSxHQUF3QjhCLEVBQUFNLE1BQUFMLEVBQUFRLFFBQUEsaUJBQW1DLE9BQUExQyxFQUFBRyxTQUFpQkcsS0FBQSxzQkFBNkMsTUFBaEIyQixFQUFBVSxZQUFBLEVBQWdCVixHQUNwUDZKLEVBQUEsMkJBQUE3SixFQUFBLDRIQUFtQ0UsR0FBNkgsSUFBQTRKLEVBQUEsQ0FBT0MsVUFBQSxXQUFxQixVQUFTQyxtQkFBQSxhQUFnQ0Msb0JBQUEsYUFBaUNDLGdCQUFBLGNBQThCQyxFQUFBLEdBQ3pjLFNBQUFDLEVBQUFwSyxFQUFBQyxFQUFBQyxHQUFrQm1LLEtBQUFDLE1BQUF0SyxFQUFhcUssS0FBQUUsUUFBQXRLLEVBQWVvSyxLQUFBRyxLQUFBTCxFQUFZRSxLQUFBSSxRQUFBdkssR0FBQTRKLEVBQXNTLFNBQUFZLEtBQXNDLFNBQUFDLEVBQUEzSyxFQUFBQyxFQUFBQyxHQUFrQm1LLEtBQUFDLE1BQUF0SyxFQUFhcUssS0FBQUUsUUFBQXRLLEVBQWVvSyxLQUFBRyxLQUFBTCxFQUFZRSxLQUFBSSxRQUFBdkssR0FBQTRKLEVBQXBYTSxFQUFBMUssVUFBQWtMLGlCQUFBLEdBQWdDUixFQUFBMUssVUFBQW1MLFNBQUEsU0FBQTdLLEVBQUFDLEdBQW1DLGlCQUFBRCxHQUFBLG1CQUFBQSxHQUFBLE1BQUFBLEdBQUEwSixFQUFBLE1BQW1FVyxLQUFBSSxRQUFBUCxnQkFBQUcsS0FBQXJLLEVBQUFDLEVBQUEsYUFBbURtSyxFQUFBMUssVUFBQW9MLFlBQUEsU0FBQTlLLEdBQW9DcUssS0FBQUksUUFBQVQsbUJBQUFLLEtBQUFySyxFQUFBLGdCQUFxRTBLLEVBQUFoTCxVQUFBMEssRUFBQTFLLFVBQW9HLElBQUFxTCxFQUFBSixFQUFBakwsVUFBQSxJQUFBZ0wsRUFDbGRLLEVBQUFDLFlBQUFMLEVBQWdCOUIsRUFBQWtDLEVBQUFYLEVBQUExSyxXQUFpQnFMLEVBQUFFLHNCQUFBLEVBQTBCLElBQUFDLEVBQUEsQ0FBT0MsUUFBQSxLQUFBQyxrQkFBQSxNQUFvQ0MsRUFBQTdNLE9BQUFrQixVQUFBQyxlQUFBMkwsRUFBQSxDQUFzQ2pNLEtBQUEsRUFBQWtNLEtBQUEsRUFBQUMsUUFBQSxFQUFBQyxVQUFBLEdBQzVJLFNBQUFDLEVBQUExTCxFQUFBQyxFQUFBQyxHQUFrQixJQUFBL0IsT0FBQSxFQUFBQyxFQUFBLEdBQWlCdUwsRUFBQSxLQUFBQyxFQUFBLEtBQWUsU0FBQTNKLEVBQUEsSUFBQTlCLFVBQUEsSUFBQThCLEVBQUFzTCxNQUFBM0IsRUFBQTNKLEVBQUFzTCxVQUFBLElBQUF0TCxFQUFBWixNQUFBc0ssRUFBQSxHQUFBMUosRUFBQVosS0FBQVksRUFBQW9MLEVBQUFwTixLQUFBZ0MsRUFBQTlCLEtBQUFtTixFQUFBM0wsZUFBQXhCLEtBQUFDLEVBQUFELEdBQUE4QixFQUFBOUIsSUFBNEgsSUFBQWdDLEVBQUF3RyxVQUFBMUUsT0FBQSxFQUF5QixPQUFBOUIsRUFBQS9CLEVBQUF1TixTQUFBekwsT0FBc0IsS0FBQUMsRUFBQSxDQUFhLFFBQUFwQyxFQUFBdUYsTUFBQW5ELEdBQUFqQyxFQUFBLEVBQXVCQSxFQUFBaUMsRUFBSWpDLElBQUFILEVBQUFHLEdBQUF5SSxVQUFBekksRUFBQSxHQUF3QkUsRUFBQXVOLFNBQUE1TixFQUFhLEdBQUFpQyxLQUFBd0gsYUFBQSxJQUFBckosS0FBQWdDLEVBQUFILEVBQUF3SCxrQkFBQSxJQUFBcEosRUFBQUQsS0FBQUMsRUFBQUQsR0FBQWdDLEVBQUFoQyxJQUE0RSxPQUFPeU4sU0FBQWhNLEVBQUFrSSxLQUFBOUgsRUFBQVgsSUFBQXNLLEVBQUE0QixJQUFBM0IsRUFBQVUsTUFBQWxNLEVBQUF5TixPQUFBWCxFQUFBQyxTQUMvUixTQUFBVyxFQUFBOUwsR0FBYyx1QkFBQUEsR0FBQSxPQUFBQSxLQUFBNEwsV0FBQWhNLEVBQTRKLElBQUFtTSxFQUFBLE9BQUFDLEVBQUEsR0FBa0IsU0FBQUMsRUFBQWpNLEVBQUFDLEVBQUFDLEVBQUEvQixHQUFvQixHQUFBNk4sRUFBQS9KLE9BQUEsQ0FBYSxJQUFBN0QsRUFBQTROLEVBQUFFLE1BQXNFLE9BQXhEOU4sRUFBQStOLE9BQUFuTSxFQUFXNUIsRUFBQWdPLFVBQUFuTSxFQUFjN0IsRUFBQWlPLEtBQUFuTSxFQUFTOUIsRUFBQW1NLFFBQUFwTSxFQUFZQyxFQUFBa08sTUFBQSxFQUFVbE8sRUFBUyxPQUFPK04sT0FBQW5NLEVBQUFvTSxVQUFBbk0sRUFBQW9NLEtBQUFuTSxFQUFBcUssUUFBQXBNLEVBQUFtTyxNQUFBLEdBQ2paLFNBQUFDLEVBQUF2TSxHQUFjQSxFQUFBbU0sT0FBQSxLQUFjbk0sRUFBQW9NLFVBQUEsS0FBaUJwTSxFQUFBcU0sS0FBQSxLQUFZck0sRUFBQXVLLFFBQUEsS0FBZXZLLEVBQUFzTSxNQUFBLEVBQVUsR0FBQU4sRUFBQS9KLFFBQUErSixFQUFBeEosS0FBQXhDLEdBRW1HLFNBQUF3TSxFQUFBeE0sRUFBQUMsRUFBQUMsR0FBa0IsYUFBQUYsRUFBQSxFQUR2TSxTQUFBeU0sRUFBQXpNLEVBQUFDLEVBQUFDLEVBQUEvQixHQUFvQixJQUFBQyxTQUFBNEIsRUFBZSxjQUFBNUIsR0FBQSxZQUFBQSxJQUFBNEIsRUFBQSxNQUF5QyxJQUFBMkosR0FBQSxFQUFTLFVBQUEzSixFQUFBMkosR0FBQSxPQUFpQixPQUFBdkwsR0FBZSwwQkFBQXVMLEdBQUEsRUFBaUMsTUFBTSxvQkFBQTNKLEVBQUE0TCxVQUFpQyxLQUFBaE0sRUFBQSxLQUFBbUosRUFBQVksR0FBQSxHQUFvQixHQUFBQSxFQUFBLE9BQUF6SixFQUFBL0IsRUFBQTZCLEVBQUEsS0FBQUMsRUFBQSxJQUFBeU0sRUFBQTFNLEVBQUEsR0FBQUMsR0FBQSxFQUFnRSxHQUF2QjBKLEVBQUEsRUFBSTFKLEVBQUEsS0FBQUEsRUFBQSxJQUFBQSxFQUFBLElBQW1CcUQsTUFBQXFKLFFBQUEzTSxHQUFBLFFBQUE0SixFQUFBLEVBQWdDQSxFQUFBNUosRUFBQWlDLE9BQVcySCxJQUFBLENBQVksSUFBQXpKLEVBQUFGLEVBQUF5TSxFQUFQdE8sRUFBQTRCLEVBQUE0SixHQUFPQSxHQUFlRCxHQUFBOEMsRUFBQXJPLEVBQUErQixFQUFBRCxFQUFBL0IsUUFBYyxHQUFBZ0MsRUFBQSxPQUFBSCxHQUFBLGlCQUFBQSxFQUFBLHdCQUFBRyxFQUFBcUosR0FBQXhKLEVBQUF3SixJQUFBeEosRUFBQSxlQUFBRyxFQUFBLHdCQUFBQSxFQUFBLElBQUFILEVBQUFHLEVBQUFsQyxLQUFBK0IsR0FBQTRKLEVBQ3JXLElBQUV4TCxFQUFBNEIsRUFBQWtDLFFBQUEwSyxNQUFtQmpELEdBQUE4QyxFQUFBck8sSUFBQVcsTUFBQW9CLEVBQUFGLEVBQUF5TSxFQUFBdE8sRUFBQXdMLEtBQUExSixFQUFBL0IsT0FBc0MsV0FBQUMsR0FBQXNMLEVBQUEseUJBQUF4SixFQUFBLEdBQUFGLEdBQUEscUJBQTBFeEIsT0FBQThGLEtBQUF0RSxHQUFBc0IsS0FBQSxVQUE4QnBCLEVBQUEsSUFBUyxPQUFBeUosRUFBMkI4QyxDQUFBek0sRUFBQSxHQUFBQyxFQUFBQyxHQUE2QixTQUFBd00sRUFBQTFNLEVBQUFDLEdBQWdCLHVCQUFBRCxHQUFBLE9BQUFBLEdBQUEsTUFBQUEsRUFBQVgsSUFIcEYsU0FBQVcsR0FBbUIsSUFBQUMsRUFBQSxDQUFPNE0sSUFBQSxLQUFBQyxJQUFBLE1BQW1CLGNBQUE5TSxHQUFBUyxRQUFBLGlCQUFBVCxHQUE2QyxPQUFBQyxFQUFBRCxLQUdOK00sQ0FBQS9NLEVBQUFYLEtBQUFZLEVBQUFrRCxTQUFBLElBQThFLFNBQUE2SixFQUFBaE4sRUFBQUMsR0FBaUJELEVBQUFxTSxLQUFBcE8sS0FBQStCLEVBQUF1SyxRQUFBdEssRUFBQUQsRUFBQXNNLFNBQ25WLFNBQUFXLEVBQUFqTixFQUFBQyxFQUFBQyxHQUFtQixJQUFBL0IsRUFBQTZCLEVBQUFtTSxPQUFBL04sRUFBQTRCLEVBQUFvTSxVQUE2QnBNLElBQUFxTSxLQUFBcE8sS0FBQStCLEVBQUF1SyxRQUFBdEssRUFBQUQsRUFBQXNNLFNBQXFDaEosTUFBQXFKLFFBQUEzTSxHQUFBa04sRUFBQWxOLEVBQUE3QixFQUFBK0IsRUFBQSxTQUFBRixHQUFxQyxPQUFBQSxJQUFTLE1BQUFBLElBQUE4TCxFQUFBOUwsT0FKbkksU0FBQUEsRUFBQUMsR0FBaUIsT0FBTzJMLFNBQUFoTSxFQUFBa0ksS0FBQTlILEVBQUE4SCxLQUFBekksSUFBQVksRUFBQXNMLElBQUF2TCxFQUFBdUwsSUFBQWpCLE1BQUF0SyxFQUFBc0ssTUFBQXVCLE9BQUE3TCxFQUFBNkwsUUFJMkdzQixDQUFBbk4sRUFBQTVCLElBQUE0QixFQUFBWCxLQUFBWSxLQUFBWixNQUFBVyxFQUFBWCxJQUFBLE9BQUFXLEVBQUFYLEtBQUFvQixRQUFBc0wsRUFBQSxZQUFBN0wsSUFBQS9CLEVBQUFxRSxLQUFBeEMsSUFBeUcsU0FBQWtOLEVBQUFsTixFQUFBQyxFQUFBQyxFQUFBL0IsRUFBQUMsR0FBc0IsSUFBQXVMLEVBQUEsR0FBUyxNQUFBekosSUFBQXlKLEdBQUEsR0FBQXpKLEdBQUFPLFFBQUFzTCxFQUFBLFlBQXNEUyxFQUFBeE0sRUFBQWlOLEVBQWJoTixFQUFBZ00sRUFBQWhNLEVBQUEwSixFQUFBeEwsRUFBQUMsSUFBdUJtTyxFQUFBdE0sR0FDM1UsSUFBQW1OLEVBQUEsQ0FBT0MsU0FBQSxDQUFVdkgsSUFBQSxTQUFBOUYsRUFBQUMsRUFBQUMsR0FBb0IsU0FBQUYsRUFBQSxPQUFBQSxFQUFvQixJQUFBN0IsRUFBQSxHQUF5QixPQUFoQitPLEVBQUFsTixFQUFBN0IsRUFBQSxLQUFBOEIsRUFBQUMsR0FBZ0IvQixHQUFTOEgsUUFBQSxTQUFBakcsRUFBQUMsRUFBQUMsR0FBeUIsU0FBQUYsRUFBQSxPQUFBQSxFQUF1Q3dNLEVBQUF4TSxFQUFBZ04sRUFBbkIvTSxFQUFBZ00sRUFBQSxVQUFBaE0sRUFBQUMsSUFBNkJxTSxFQUFBdE0sSUFBS3FNLE1BQUEsU0FBQXRNLEdBQW1CLE9BQUF3TSxFQUFBeE0sRUFBQSxXQUFzQixhQUFZLE9BQU9zTixRQUFBLFNBQUF0TixHQUFxQixJQUFBQyxFQUFBLEdBQTJDLE9BQWxDaU4sRUFBQWxOLEVBQUFDLEVBQUEsY0FBQUQsR0FBdUIsT0FBQUEsSUFBV0MsR0FBU3NOLEtBQUEsU0FBQXZOLEdBQXVDLE9BQXJCOEwsRUFBQTlMLElBQUEwSixFQUFBLE9BQXFCMUosSUFBVXdOLFVBQUEsV0FBc0IsT0FBT3JDLFFBQUEsT0FBY3NDLFVBQUFyRCxFQUFBc0QsY0FBQS9DLEVBQUFnRCxjQUFBLFNBQUEzTixFQUFBQyxHQUMzUixZQURvVixJQUFBQSxNQUFBLE9BQXFCRCxFQUFBLENBQUc0TCxTQUFBMUMsRUFBQTBFLHNCQUFBM04sRUFDNWQ0TixjQUFBN04sRUFBQThOLGVBQUE5TixFQUFBK04sYUFBQSxFQUFBQyxTQUFBLEtBQUFDLFNBQUEsT0FBNkVELFNBQUEsQ0FBWXBDLFNBQUEzQyxFQUFBaUYsU0FBQWxPLEdBQXVCQSxFQUFBaU8sU0FBQWpPLEdBQW9CbU8sV0FBQSxTQUFBbk8sR0FBd0IsT0FBTzRMLFNBQUF4QyxFQUFBZ0YsT0FBQXBPLElBQXFCcU8sS0FBQSxTQUFBck8sR0FBa0IsT0FBTzRMLFNBQUFyQyxFQUFBK0UsTUFBQXRPLEVBQUF1TyxTQUFBLEVBQUFDLFFBQUEsT0FBNENDLEtBQUEsU0FBQXpPLEVBQUFDLEdBQW9CLE9BQU8yTCxTQUFBdEMsRUFBQXhCLEtBQUE5SCxFQUFBME8sYUFBQSxJQUFBek8sRUFBQSxLQUFBQSxJQUE2QzBPLFNBQUEvUCxFQUFBZ1EsV0FBQTVQLEVBQUE2UCxTQUFBeEYsRUFBQXlGLGNBQUFwRCxFQUFBcUQsYUFBQSxTQUFBL08sRUFBQUMsRUFBQUMsR0FBaUYsTUFBQUYsR0FBQTBKLEVBQUEsTUFBQTFKLEdBQXVDLElBQUE3QixPQUFBLEVBQUFDLEVBQUF5SyxFQUFBLEdBQW1CN0ksRUFBQXNLLE9BQUFYLEVBQUEzSixFQUFBWCxJQUFBdUssRUFBQTVKLEVBQUF1TCxJQUFBcEwsRUFBQUgsRUFBQTZMLE9BQ2hkLFNBQUE1TCxFQUFBLE1BQVksSUFBQUEsRUFBQXNMLE1BQUEzQixFQUFBM0osRUFBQXNMLElBQUFwTCxFQUFBK0ssRUFBQUMsY0FBc0MsSUFBQWxMLEVBQUFaLE1BQUFzSyxFQUFBLEdBQUExSixFQUFBWixLQUE2QixJQUFBdEIsT0FBQSxFQUFrRSxJQUFBSSxLQUFyRDZCLEVBQUE4SCxNQUFBOUgsRUFBQThILEtBQUFOLGVBQUF6SixFQUFBaUMsRUFBQThILEtBQUFOLGNBQXFEdkgsRUFBQW9MLEVBQUFwTixLQUFBZ0MsRUFBQTlCLEtBQUFtTixFQUFBM0wsZUFBQXhCLEtBQUFDLEVBQUFELFFBQUEsSUFBQThCLEVBQUE5QixTQUFBLElBQUFKLElBQUFJLEdBQUE4QixFQUFBOUIsSUFBOEcsUUFBckJBLEVBQUF3SSxVQUFBMUUsT0FBQSxHQUFxQjdELEVBQUF1TixTQUFBekwsT0FBc0IsS0FBQS9CLEVBQUEsQ0FBYUosRUFBQXVGLE1BQUFuRixHQUFXLFFBQUFELEVBQUEsRUFBWUEsRUFBQUMsRUFBSUQsSUFBQUgsRUFBQUcsR0FBQXlJLFVBQUF6SSxFQUFBLEdBQXdCRSxFQUFBdU4sU0FBQTVOLEVBQWEsT0FBTzZOLFNBQUFoTSxFQUFBa0ksS0FBQTlILEVBQUE4SCxLQUFBekksSUFBQXNLLEVBQUE0QixJQUFBM0IsRUFBQVUsTUFBQWxNLEVBQUF5TixPQUFBMUwsSUFBcUQ2TyxjQUFBLFNBQUFoUCxHQUEyQixJQUFBQyxFQUFBeUwsRUFBQXBNLEtBQUEsS0FBQVUsR0FBOEIsT0FBVEMsRUFBQTZILEtBQUE5SCxFQUFTQyxHQUFTZ1AsZUFBQW5ELEVBQUFvRCxRQUFBLFNBQ2hlQyxtREFBQSxDQUFvREMsa0JBQUFsRSxFQUFBMUYsT0FBQXFELElBQStCdUUsRUFBQWlDLHdCQUFBbEcsRUFBNEJpRSxFQUFBa0Msa0JBQUF0RyxFQUFzQixJQUFBdUcsRUFBQSxDQUFPQyxRQUFBcEMsR0FBVXFDLEVBQUFGLEdBQUFuQyxHQUFBbUMsRUFBVzFSLEVBQUFELFFBQUE2UixFQUFBRCxTQUFBQzs7Ozs7Ozs7R0NYcEosSUFBQTVGLEVBQU9uTSxFQUFRLEdBQU82QixFQUFJN0IsRUFBUSxHQUFleVAsRUFBS3pQLEVBQVEsSUFDM0UsU0FBQXNCLEVBQUFnQixHQUFjLFFBQUFDLEVBQUEwRyxVQUFBMUUsT0FBQSxFQUFBOUQsRUFBQSx5REFBQTZCLEVBQUE1QixFQUFBLEVBQThGQSxFQUFBNkIsRUFBSTdCLElBQUFELEdBQUEsV0FBQXlGLG1CQUFBK0MsVUFBQXZJLEVBQUEsS0FEeEIsU0FBQTRCLEVBQUFDLEVBQUE5QixFQUFBQyxFQUFBOEIsRUFBQUMsRUFBQXdKLEVBQUFDLEdBQTZCLElBQUE1SixFQUFBLENBQWdCLEdBQVRBLE9BQUEsT0FBUyxJQUFBQyxFQUFBRCxFQUFBTSxNQUFBLHFJQUF1SixDQUFLLElBQUF1SSxFQUFBLENBQUExSyxFQUFBQyxFQUFBOEIsRUFBQUMsRUFBQXdKLEVBQUFDLEdBQUE3TCxFQUFBLEdBQXdCaUMsRUFBQU0sTUFBQUwsRUFBQVEsUUFBQSxpQkFBbUMsT0FBQW9JLEVBQUE5SyxTQUFpQk0sS0FBQSxzQkFBNkMsTUFBaEIyQixFQUFBVSxZQUFBLEVBQWdCVixHQUNyUGdOLEVBQUEsMkJBQUFoTixFQUFBLDRIQUFtQzdCLEdBQTZIMEwsR0FBQTdLLEVBQUEsT0FDclUsSUFBQTBRLEdBQUEsRUFBQUMsRUFBQSxLQUFBQyxHQUFBLEVBQUFDLEVBQUEsS0FBQUMsRUFBQSxDQUFvQ0MsUUFBQSxTQUFBL1AsR0FBb0IwUCxHQUFBLEVBQU1DLEVBQUEzUCxJQUFPLFNBQUFnUSxFQUFBaFEsRUFBQUMsRUFBQTlCLEVBQUFDLEVBQUE4QixFQUFBQyxFQUFBd0osRUFBQUMsRUFBQWYsR0FBK0I2RyxHQUFBLEVBQU1DLEVBQUEsS0FEOE8sU0FBQTNQLEVBQUFDLEVBQUE5QixFQUFBQyxFQUFBOEIsRUFBQUMsRUFBQXdKLEVBQUFDLEVBQUFmLEdBQStCLElBQUE5SyxFQUFBdUYsTUFBQTVELFVBQUFzQyxNQUFBL0QsS0FBQTBJLFVBQUEsR0FBOEMsSUFBSTFHLEVBQUFnUSxNQUFBOVIsRUFBQUosR0FBYSxNQUFBRyxHQUFTbU0sS0FBQTBGLFFBQUE3UixLQUM3VStSLE1BQUFILEVBQUFuSixXQUE2SixJQUFBdUosRUFBQSxLQUFBQyxFQUFBLEdBQy9RLFNBQUFDLElBQWMsR0FBQUYsRUFBQSxRQUFBbFEsS0FBQW1RLEVBQUEsQ0FBdUIsSUFBQWxRLEVBQUFrUSxFQUFBblEsR0FBQTdCLEVBQUErUixFQUFBRyxRQUFBclEsR0FBa0QsSUFBdEIsRUFBQTdCLEdBQUFhLEVBQUEsS0FBQWdCLElBQXNCc1EsRUFBQW5TLEdBQW1FLFFBQUFDLEtBQXhENkIsRUFBQXNRLGVBQUF2UixFQUFBLEtBQUFnQixHQUFpQ3NRLEVBQUFuUyxHQUFBOEIsRUFBUTlCLEVBQUE4QixFQUFBdVEsV0FBZSxDQUFnQixJQUFBdFEsT0FBQSxFQUFhQyxFQUFBaEMsRUFBQUMsR0FBQXVMLEVBQUExSixFQUFBMkosRUFBQXhMLEVBQW1CcVMsRUFBQTlRLGVBQUFpSyxJQUFBNUssRUFBQSxLQUFBNEssR0FBc0M2RyxFQUFBN0csR0FBQXpKLEVBQVEsSUFBQTBJLEVBQUExSSxFQUFBdVEsd0JBQWdDLEdBQUE3SCxFQUFBLENBQU0sSUFBQTNJLEtBQUEySSxJQUFBbEosZUFBQU8sSUFBQXlRLEVBQUE5SCxFQUFBM0ksR0FBQXlKLEVBQUFDLEdBQTZDMUosR0FBQSxPQUFLQyxFQUFBeVEsa0JBQUFELEVBQUF4USxFQUFBeVEsaUJBQUFqSCxFQUFBQyxHQUFBMUosR0FBQSxHQUFBQSxHQUFBLEVBQStEQSxHQUFBbEIsRUFBQSxLQUFBWixFQUFBNEIsS0FDL1ksU0FBQTJRLEVBQUEzUSxFQUFBQyxFQUFBOUIsR0FBbUIwUyxFQUFBN1EsSUFBQWhCLEVBQUEsTUFBQWdCLEdBQXdCNlEsRUFBQTdRLEdBQUFDLEVBQVE2USxFQUFBOVEsR0FBQUMsRUFBQXVRLFdBQUFyUyxHQUFBNFMsYUFBbUMsSUFBQVQsRUFBQSxHQUFBRyxFQUFBLEdBQWVJLEVBQUEsR0FBTUMsRUFBQSxHQUFNRSxFQUFBLEtBQUFDLEVBQUEsS0FBQUMsRUFBQSxLQUF5QixTQUFBQyxFQUFBblIsRUFBQUMsRUFBQTlCLEdBQW1CLElBQUFDLEVBQUE0QixFQUFBOEgsTUFBQSxnQkFBOEI5SCxFQUFBb1IsY0FBQUYsRUFBQS9TLEdBRmxELFNBQUE2QixFQUFBQyxFQUFBOUIsRUFBQUMsRUFBQThCLEVBQUFDLEVBQUF3SixFQUFBQyxFQUFBZixHQUF3RCxHQUF6Qm1ILEVBQUFDLE1BQUE1RixLQUFBMUQsV0FBeUIrSSxFQUFBLENBQU8sR0FBQUEsRUFBQSxDQUFPLElBQUEzUixFQUFBNFIsRUFBU0QsR0FBQSxFQUFNQyxFQUFBLFVBQVEzUSxFQUFBLE9BQUFqQixPQUFBLEVBQXVCNlIsT0FBQSxFQUFBQyxFQUFBOVIsSUFFNUNzVCxDQUFBalQsRUFBQTZCLE9BQUEsRUFBQUQsR0FBaUJBLEVBQUFvUixjQUFBLEtBQXFCLFNBQUFFLEVBQUF0UixFQUFBQyxHQUF3QyxPQUF2QixNQUFBQSxHQUFBakIsRUFBQSxNQUF1QixNQUFBZ0IsRUFBQUMsRUFBb0JxRCxNQUFBcUosUUFBQTNNLEdBQXFCc0QsTUFBQXFKLFFBQUExTSxJQUFBRCxFQUFBd0MsS0FBQXlOLE1BQUFqUSxFQUFBQyxHQUFBRCxJQUErQ0EsRUFBQXdDLEtBQUF2QyxHQUFVRCxHQUFTc0QsTUFBQXFKLFFBQUExTSxHQUFBLENBQUFELEdBQUEySSxPQUFBMUksR0FBQSxDQUFBRCxFQUFBQyxHQUMxWSxTQUFBc1IsRUFBQXZSLEVBQUFDLEVBQUE5QixHQUFtQm1GLE1BQUFxSixRQUFBM00sS0FBQWlHLFFBQUFoRyxFQUFBOUIsR0FBQTZCLEdBQUFDLEVBQUFoQyxLQUFBRSxFQUFBNkIsR0FBK0MsSUFBQXdSLEVBQUEsS0FBWSxTQUFBQyxFQUFBelIsR0FBZSxHQUFBQSxFQUFBLENBQU0sSUFBQUMsRUFBQUQsRUFBQTBSLG1CQUFBdlQsRUFBQTZCLEVBQUEyUixtQkFBa0QsR0FBQXJPLE1BQUFxSixRQUFBMU0sR0FBQSxRQUFBN0IsRUFBQSxFQUFnQ0EsRUFBQTZCLEVBQUFnQyxTQUFBakMsRUFBQTRSLHVCQUFzQ3hULElBQUErUyxFQUFBblIsRUFBQUMsRUFBQTdCLEdBQUFELEVBQUFDLFNBQW9CNkIsR0FBQWtSLEVBQUFuUixFQUFBQyxFQUFBOUIsR0FBa0I2QixFQUFBMFIsbUJBQUEsS0FBMEIxUixFQUFBMlIsbUJBQUEsS0FBMEIzUixFQUFBNlIsZ0JBQUE3UixFQUFBZ0wsWUFBQThHLFFBQUE5UixJQUNyVCxJQUFBK1IsRUFBQSxDQUFRQyx1QkFBQSxTQUFBaFMsR0FBbUNrUSxHQUFBbFIsRUFBQSxPQUFtQmtSLEVBQUE1TSxNQUFBNUQsVUFBQXNDLE1BQUEvRCxLQUFBK0IsR0FBaUNvUSxLQUFLNkIseUJBQUEsU0FBQWpTLEdBQXNDLElBQUE3QixFQUFBOEIsR0FBQSxFQUFXLElBQUE5QixLQUFBNkIsRUFBQSxHQUFBQSxFQUFBTCxlQUFBeEIsR0FBQSxDQUFtQyxJQUFBQyxFQUFBNEIsRUFBQTdCLEdBQVdnUyxFQUFBeFEsZUFBQXhCLElBQUFnUyxFQUFBaFMsS0FBQUMsSUFBQStSLEVBQUFoUyxJQUFBYSxFQUFBLE1BQUFiLEdBQUFnUyxFQUFBaFMsR0FBQUMsRUFBQTZCLEdBQUEsR0FBd0VBLEdBQUFtUSxNQUMzUSxTQUFBOEIsRUFBQWxTLEVBQUFDLEdBQWlCLElBQUE5QixFQUFBNkIsRUFBQW1TLFVBQWtCLElBQUFoVSxFQUFBLFlBQWtCLElBQUFDLEVBQUE0UyxFQUFBN1MsR0FBWSxJQUFBQyxFQUFBLFlBQWtCRCxFQUFBQyxFQUFBNkIsR0FBT0QsRUFBQSxPQUFBQyxHQUFZLGdOQUFBN0IsS0FBQWdVLFlBQUFoVSxJQUFBLFlBQUE0QixJQUFBOEgsT0FBQSxVQUFBOUgsR0FBQSxXQUFBQSxHQUFBLGFBQUFBLElBQWtUQSxHQUFBNUIsRUFBSyxNQUFBNEIsRUFBUSxRQUFBQSxHQUFBLEVBQWEsT0FBQUEsRUFBQSxNQUFpQjdCLEdBQUEsbUJBQUFBLEdBQUFhLEVBQUEsTUFBQWlCLFNBQUE5QixHQUNuY0EsR0FBUyxTQUFBa1UsRUFBQXJTLEdBQW9ELEdBQXJDLE9BQUFBLElBQUF3UixFQUFBRixFQUFBRSxFQUFBeFIsSUFBd0JBLEVBQUF3UixFQUFLQSxFQUFBLEtBQVF4UixJQUFBdVIsRUFBQXZSLEVBQUF5UixHQUFBRCxHQUFBeFMsRUFBQSxNQUFBNFEsR0FBQSxNQUFBNVAsRUFBQTZQLEVBQUFELEdBQUEsRUFBQUMsRUFBQSxLQUFBN1AsRUFBa0UsSUFBQXNTLEVBQUFDLEtBQUFDLFNBQUFyUCxTQUFBLElBQUFuQixNQUFBLEdBQUF5USxFQUFBLDJCQUFBSCxFQUFBSSxFQUFBLHdCQUFBSixFQUEwRyxTQUFBSyxFQUFBM1MsR0FBZSxHQUFBQSxFQUFBeVMsR0FBQSxPQUFBelMsRUFBQXlTLEdBQXNCLE1BQUt6UyxFQUFBeVMsSUFBTyxLQUFBelMsRUFBQTRTLFdBQWdDLFlBQWhDNVMsSUFBQTRTLFdBQXlELFlBQVI1UyxJQUFBeVMsSUFBUUksS0FBQSxJQUFBN1MsRUFBQTZTLElBQUE3UyxFQUFBLEtBQW1DLFNBQUE4UyxFQUFBOVMsR0FBdUIsUUFBUkEsSUFBQXlTLEtBQVEsSUFBQXpTLEVBQUE2UyxLQUFBLElBQUE3UyxFQUFBNlMsSUFBQSxLQUFBN1MsRUFDN1ksU0FBQStTLEVBQUEvUyxHQUFlLE9BQUFBLEVBQUE2UyxLQUFBLElBQUE3UyxFQUFBNlMsSUFBQSxPQUFBN1MsRUFBQW1TLFVBQTJDblQsRUFBQSxNQUFRLFNBQUFnVSxFQUFBaFQsR0FBZSxPQUFBQSxFQUFBMFMsSUFBQSxLQUFtQixTQUFBTyxFQUFBalQsR0FBZSxHQUFBQSxJQUFBa1QsYUFBY2xULEdBQUEsSUFBQUEsRUFBQTZTLEtBQW9CLE9BQUE3UyxHQUFBLEtBQWdCLFNBQUFtVCxFQUFBblQsRUFBQUMsRUFBQTlCLElBQW1COEIsRUFBQWlTLEVBQUFsUyxFQUFBN0IsRUFBQWlWLGVBQUExQyx3QkFBQXpRLE9BQUE5QixFQUFBdVQsbUJBQUFKLEVBQUFuVCxFQUFBdVQsbUJBQUF6UixHQUFBOUIsRUFBQXdULG1CQUFBTCxFQUFBblQsRUFBQXdULG1CQUFBM1IsSUFDeEwsU0FBQXFULEVBQUFyVCxHQUFlLEdBQUFBLEtBQUFvVCxlQUFBMUMsd0JBQUEsQ0FBZ0QsUUFBQXpRLEVBQUFELEVBQUFzVCxZQUFBblYsRUFBQSxHQUE2QjhCLEdBQUU5QixFQUFBcUUsS0FBQXZDLEtBQUFnVCxFQUFBaFQsR0FBbUIsSUFBQUEsRUFBQTlCLEVBQUE4RCxPQUFlLEVBQUFoQyxLQUFNa1QsRUFBQWhWLEVBQUE4QixHQUFBLFdBQUFELEdBQXVCLElBQUFDLEVBQUEsRUFBUUEsRUFBQTlCLEVBQUE4RCxPQUFXaEMsSUFBQWtULEVBQUFoVixFQUFBOEIsR0FBQSxVQUFBRCxJQUEwQixTQUFBdVQsRUFBQXZULEVBQUFDLEVBQUE5QixHQUFtQjZCLEdBQUE3QixLQUFBaVYsZUFBQXhDLG1CQUFBM1EsRUFBQWlTLEVBQUFsUyxFQUFBN0IsRUFBQWlWLGVBQUF4QyxxQkFBQXpTLEVBQUF1VCxtQkFBQUosRUFBQW5ULEVBQUF1VCxtQkFBQXpSLEdBQUE5QixFQUFBd1QsbUJBQUFMLEVBQUFuVCxFQUFBd1QsbUJBQUEzUixJQUF3TCxTQUFBd1QsRUFBQXhULEdBQWVBLEtBQUFvVCxlQUFBeEMsa0JBQUEyQyxFQUFBdlQsRUFBQXNULFlBQUEsS0FBQXRULEdBQ3BhLFNBQUF5VCxFQUFBelQsR0FBZXVSLEVBQUF2UixFQUFBcVQsR0FBUyxJQUFBSyxJQUFBLG9CQUFBQyxnQkFBQUMsV0FBQUQsT0FBQUMsU0FBQTlFLGVBQXdGLFNBQUErRSxFQUFBN1QsRUFBQUMsR0FBaUIsSUFBQTlCLEVBQUEsR0FBd0YsT0FBL0VBLEVBQUE2QixFQUFBOFQsZUFBQTdULEVBQUE2VCxjQUFtQzNWLEVBQUEsU0FBQTZCLEdBQUEsU0FBQUMsRUFBeUI5QixFQUFBLE1BQUE2QixHQUFBLE1BQUFDLEVBQW1COUIsRUFBUyxJQUFBNFYsRUFBQSxDQUFRQyxhQUFBSCxFQUFBLDRCQUFBSSxtQkFBQUosRUFBQSxrQ0FBQUssZUFBQUwsRUFBQSw4QkFBQU0sY0FBQU4sRUFBQSwrQkFBbU1PLEVBQUEsR0FBTUMsRUFBQSxHQUMvTCxTQUFBQyxFQUFBdFUsR0FBZSxHQUFBb1UsRUFBQXBVLEdBQUEsT0FBQW9VLEVBQUFwVSxHQUFzQixJQUFBK1QsRUFBQS9ULEdBQUEsT0FBQUEsRUFBbUIsSUFBQTdCLEVBQUE4QixFQUFBOFQsRUFBQS9ULEdBQWMsSUFBQTdCLEtBQUE4QixFQUFBLEdBQUFBLEVBQUFOLGVBQUF4QixTQUFBa1csRUFBQSxPQUFBRCxFQUFBcFUsR0FBQUMsRUFBQTlCLEdBQTZELE9BQUE2QixFQUF2WDBULElBQUFXLEVBQUFULFNBQUE5RSxjQUFBLE9BQUF5RixNQUFBLG1CQUFBWixnQkFBQUksRUFBQUMsYUFBQVEsaUJBQUFULEVBQUFFLG1CQUFBTyxpQkFBQVQsRUFBQUcsZUFBQU0sV0FBQSxvQkFBQWIsZUFBQUksRUFBQUksY0FBQU0sWUFDQSxJQUFBQyxFQUFBSixFQUFBLGdCQUFBSyxFQUFBTCxFQUFBLHNCQUFBTSxFQUFBTixFQUFBLGtCQUFBTyxHQUFBUCxFQUFBLGlCQUFBUSxHQUFBLHNOQUFBOU8sTUFBQSxLQUFBK08sR0FBQSxLQUFBQyxHQUFBLEtBQUFDLEdBQUEsS0FDQSxTQUFBQyxLQUFjLEdBQUFELEdBQUEsT0FBQUEsR0FBZ0IsSUFBQWpWLEVBQUE1QixFQUFBNkIsRUFBQStVLEdBQUE3VyxFQUFBOEIsRUFBQWdDLE9BQUEvQixFQUFBLFVBQUE2VSxNQUFBaFcsTUFBQWdXLEdBQUFJLFlBQUFoVixFQUFBRCxFQUFBK0IsT0FBMEUsSUFBQWpDLEVBQUEsRUFBUUEsRUFBQTdCLEdBQUE4QixFQUFBRCxLQUFBRSxFQUFBRixHQUFpQkEsS0FBSyxJQUFBMkosRUFBQXhMLEVBQUE2QixFQUFVLElBQUE1QixFQUFBLEVBQVFBLEdBQUF1TCxHQUFBMUosRUFBQTlCLEVBQUFDLEtBQUE4QixFQUFBQyxFQUFBL0IsR0FBc0JBLEtBQUssT0FBQTZXLEdBQUEvVSxFQUFBOEIsTUFBQWhDLEVBQUEsRUFBQTVCLEVBQUEsRUFBQUEsT0FBQSxHQUFvQyxTQUFBZ1gsS0FBYyxTQUFTLFNBQUFDLEtBQWMsU0FDNVAsU0FBQS9MLEdBQUF0SixFQUFBQyxFQUFBOUIsRUFBQUMsR0FBNkcsUUFBQThCLEtBQXpGbUssS0FBQStJLGVBQUFwVCxFQUFzQnFLLEtBQUFpSixZQUFBclQsRUFBbUJvSyxLQUFBaUwsWUFBQW5YLEVBQW1CNkIsRUFBQXFLLEtBQUFXLFlBQUF1SyxVQUE2QnZWLEVBQUFMLGVBQUFPLE1BQUFELEVBQUFELEVBQUFFLElBQUFtSyxLQUFBbkssR0FBQUQsRUFBQTlCLEdBQUEsV0FBQStCLEVBQUFtSyxLQUFBaEUsT0FBQWpJLEVBQUFpTSxLQUFBbkssR0FBQS9CLEVBQUErQixJQUFnTyxPQUE1SG1LLEtBQUFtTCxvQkFBQSxNQUFBclgsRUFBQXNYLGlCQUFBdFgsRUFBQXNYLGtCQUFBLElBQUF0WCxFQUFBdVgsYUFBQU4sR0FBQUMsR0FBK0ZoTCxLQUFBdUgscUJBQUF5RCxHQUE2QmhMLEtBRzlFLFNBQUFzTCxHQUFBM1YsRUFBQUMsRUFBQTlCLEVBQUFDLEdBQXFCLEdBQUFpTSxLQUFBdUwsVUFBQTNULE9BQUEsQ0FBMEIsSUFBQS9CLEVBQUFtSyxLQUFBdUwsVUFBQTFKLE1BQWdELE9BQXJCN0IsS0FBQXBNLEtBQUFpQyxFQUFBRixFQUFBQyxFQUFBOUIsRUFBQUMsR0FBcUI4QixFQUFTLFdBQUFtSyxLQUFBckssRUFBQUMsRUFBQTlCLEVBQUFDLEdBQXlCLFNBQUF5WCxHQUFBN1YsR0FBZUEsYUFBQXFLLE1BQUFyTCxFQUFBLE9BQWtDZ0IsRUFBQThWLGFBQWUsR0FBQXpMLEtBQUF1TCxVQUFBM1QsUUFBQW9JLEtBQUF1TCxVQUFBcFQsS0FBQXhDLEdBQ2hjLFNBQUErVixHQUFBL1YsR0FBZUEsRUFBQTRWLFVBQUEsR0FBZTVWLEVBQUFnVyxVQUFBTCxHQUFlM1YsRUFBQThSLFFBQUErRCxHQUg3Q3RXLEVBQUErSixHQUFBNUosVUFBQSxDQUFldVcsZUFBQSxXQUEwQjVMLEtBQUFvTCxrQkFBQSxFQUF5QixJQUFBelYsRUFBQXFLLEtBQUFpTCxZQUF1QnRWLE1BQUFpVyxlQUFBalcsRUFBQWlXLGlCQUFBLGtCQUFBalcsRUFBQTBWLGNBQUExVixFQUFBMFYsYUFBQSxHQUFBckwsS0FBQW1MLG1CQUFBSixLQUF5SGMsZ0JBQUEsV0FBNEIsSUFBQWxXLEVBQUFxSyxLQUFBaUwsWUFBdUJ0VixNQUFBa1csZ0JBQUFsVyxFQUFBa1csa0JBQUEsa0JBQUFsVyxFQUFBbVcsZUFBQW5XLEVBQUFtVyxjQUFBLEdBQUE5TCxLQUFBdUgscUJBQUF3RCxLQUErSGdCLFFBQUEsV0FBb0IvTCxLQUFBd0gsYUFBQXVELElBQXFCdkQsYUFBQXdELEdBQUFTLFdBQUEsV0FBdUMsSUFDcGQ3VixFQURvZEQsRUFBQXFLLEtBQUFXLFlBQUF1SyxVQUNsZCxJQUFBdFYsS0FBQUQsRUFBQXFLLEtBQUFwSyxHQUFBLEtBQXdCb0ssS0FBQWlMLFlBQUFqTCxLQUFBaUosWUFBQWpKLEtBQUErSSxlQUFBLEtBQTJEL0ksS0FBQXVILHFCQUFBdkgsS0FBQW1MLG1CQUFBSCxHQUFxRGhMLEtBQUFzSCxtQkFBQXRILEtBQUFxSCxtQkFBQSxRQUF3RHBJLEdBQUFpTSxVQUFBLENBQWF6TixLQUFBLEtBQUF6QixPQUFBLEtBQUErSyxjQUFBLFdBQStDLGFBQVlpRixXQUFBLEtBQUFDLFFBQUEsS0FBQUMsV0FBQSxLQUFBQyxVQUFBLFNBQUF4VyxHQUFvRSxPQUFBQSxFQUFBd1csV0FBQUMsS0FBQUMsT0FBK0JqQixpQkFBQSxLQUFBa0IsVUFBQSxNQUM3V3JOLEdBQUFzTixPQUFBLFNBQUE1VyxHQUFxQixTQUFBQyxLQUFjLFNBQUE5QixJQUFhLE9BQUFDLEVBQUE2UixNQUFBNUYsS0FBQTFELFdBQStCLElBQUF2SSxFQUFBaU0sS0FBV3BLLEVBQUFQLFVBQUF0QixFQUFBc0IsVUFBd0IsSUFBQVEsRUFBQSxJQUFBRCxFQUE2SCxPQUFqSFYsRUFBQVcsRUFBQS9CLEVBQUF1QixXQUFpQnZCLEVBQUF1QixVQUFBUSxFQUFjL0IsRUFBQXVCLFVBQUFzTCxZQUFBN00sRUFBMEJBLEVBQUFvWCxVQUFBaFcsRUFBQSxHQUFnQm5CLEVBQUFtWCxVQUFBdlYsR0FBZ0I3QixFQUFBeVksT0FBQXhZLEVBQUF3WSxPQUFrQmIsR0FBQTVYLEdBQU1BLEdBQVU0WCxHQUFBek0sSUFDL0wsSUFBQXVOLEdBQUF2TixHQUFBc04sT0FBQSxDQUFpQm5ULEtBQUEsT0FBVXFULEdBQUF4TixHQUFBc04sT0FBQSxDQUFlblQsS0FBQSxPQUFVc1QsR0FBQSxhQUFBQyxHQUFBdEQsR0FBQSxxQkFBQUMsT0FBQXNELEdBQUEsS0FBNkR2RCxHQUFBLGlCQUFBRSxXQUFBcUQsR0FBQXJELFNBQUFzRCxjQUMzSyxJQUFBQyxHQUFBekQsR0FBQSxjQUFBQyxTQUFBc0QsR0FBQUcsR0FBQTFELEtBQUFzRCxJQUFBQyxJQUFBLEVBQUFBLElBQUEsSUFBQUEsSUFBQUksR0FBQTNSLE9BQUFHLGFBQUEsSUFBQXlSLEdBQUEsQ0FBbUdDLFlBQUEsQ0FBYTdHLHdCQUFBLENBQXlCOEcsUUFBQSxnQkFBQUMsU0FBQSx3QkFBd0QxRyxhQUFBLG1EQUFnRTJHLGVBQUEsQ0FBaUJoSCx3QkFBQSxDQUF5QjhHLFFBQUEsbUJBQUFDLFNBQUEsMkJBQThEMUcsYUFBQSx1REFBQS9LLE1BQUEsTUFBZ0YyUixpQkFBQSxDQUFtQmpILHdCQUFBLENBQXlCOEcsUUFBQSxxQkFDcmVDLFNBQUEsNkJBQXFDMUcsYUFBQSx5REFBQS9LLE1BQUEsTUFBa0Y0UixrQkFBQSxDQUFvQmxILHdCQUFBLENBQXlCOEcsUUFBQSxzQkFBQUMsU0FBQSw4QkFBb0UxRyxhQUFBLDBEQUFBL0ssTUFBQSxPQUFvRjZSLElBQUEsRUFDNVQsU0FBQUMsR0FBQTlYLEVBQUFDLEdBQWlCLE9BQUFELEdBQVUsdUJBQUErVyxHQUFBMUcsUUFBQXBRLEVBQUE4WCxTQUE4QywyQkFBQTlYLEVBQUE4WCxRQUFzQyxtREFBc0Qsa0JBQWtCLFNBQUFDLEdBQUFoWSxHQUEwQix1QkFBWEEsSUFBQWlZLFNBQVcsU0FBQWpZLElBQUF5RCxLQUFBLEtBQWtELElBQUF5VSxJQUFBLEVBRW5RLElBQUFDLEdBQUEsQ0FBUTNILFdBQUE4RyxHQUFBL0csY0FBQSxTQUFBdlEsRUFBQUMsRUFBQTlCLEVBQUFDLEdBQThDLElBQUE4QixPQUFBLEVBQWFDLE9BQUEsRUFBYSxHQUFBNlcsR0FBQS9XLEVBQUEsQ0FBUyxPQUFBRCxHQUFVLHVCQUFBRSxFQUFBb1gsR0FBQUssaUJBQThDLE1BQUExWCxFQUFRLHFCQUFBQyxFQUFBb1gsR0FBQUksZUFBMEMsTUFBQXpYLEVBQVEsd0JBQUFDLEVBQUFvWCxHQUFBTSxrQkFBZ0QsTUFBQTNYLEVBQVFDLE9BQUEsT0FBU2dZLEdBQUFKLEdBQUE5WCxFQUFBN0IsS0FBQStCLEVBQUFvWCxHQUFBSSxnQkFBQSxZQUFBMVgsR0FBQSxNQUFBN0IsRUFBQTRaLFVBQUE3WCxFQUFBb1gsR0FBQUssa0JBQy9GLE9BRDhMelgsR0FBQWtYLElBQUEsT0FBQWpaLEVBQUFpYSxTQUFBRixJQUFBaFksSUFBQW9YLEdBQUFLLGlCQUFBelgsSUFBQW9YLEdBQUFJLGdCQUFBUSxLQUFBL1gsRUFBQStVLE9BQUFGLEdBQUEsVUFBQUQsR0FBQTNXLEdBQUEyVyxHQUFBaFcsTUFBQWdXLEdBQUFJLFlBQUErQyxJQUMzVyxJQUFBaFksRUFBQTJXLEdBQUFiLFVBQUE5VixFQUFBRCxFQUFBOUIsRUFBQUMsR0FBQStCLEVBQUFELEVBQUF1RCxLQUFBdEQsRUFBQSxRQUFBQSxFQUFBNlgsR0FBQTdaLE1BQUErQixFQUFBdUQsS0FBQXRELEdBQUFzVCxFQUFBdlQsR0FBQUMsRUFBQUQsR0FBQUMsRUFBQSxNQUF5RkgsRUFBQW1YLEdBSG9MLFNBQUFuWCxFQUFBQyxHQUFpQixPQUFBRCxHQUFVLDRCQUFBZ1ksR0FBQS9YLEdBQW1DLDJCQUFBQSxFQUFBb1ksTUFBQSxNQUE0Q1IsSUFBQSxFQUFNUixJQUFVLHVCQUFBclgsRUFBQUMsRUFBQXdELFFBQUE0VCxJQUFBUSxHQUFBLEtBQUE3WCxFQUFtRCxxQkFHaldzWSxDQUFBdFksRUFBQTdCLEdBRnpGLFNBQUE2QixFQUFBQyxHQUFpQixHQUFBaVksR0FBQSx5QkFBQWxZLElBQUFnWCxJQUFBYyxHQUFBOVgsRUFBQUMsSUFBQUQsRUFBQWtWLEtBQUFELEdBQUFELEdBQUFELEdBQUEsS0FBQW1ELElBQUEsRUFBQWxZLEdBQUEsS0FBbUYsT0FBQUEsR0FBVSx3QkFBeUIsb0JBQUFDLEVBQUFzWSxTQUFBdFksRUFBQXVZLFFBQUF2WSxFQUFBd1ksVUFBQXhZLEVBQUFzWSxTQUFBdFksRUFBQXVZLE9BQUEsQ0FBMkUsR0FBQXZZLEVBQUF5WSxNQUFBLEVBQUF6WSxFQUFBeVksS0FBQXpXLE9BQUEsT0FBQWhDLEVBQUF5WSxLQUF5QyxHQUFBelksRUFBQW9ZLE1BQUEsT0FBQTNTLE9BQUFHLGFBQUE1RixFQUFBb1ksT0FBK0MsWUFBWSw0QkFBQWpCLElBQUEsT0FBQW5YLEVBQUFtWSxPQUFBLEtBQUFuWSxFQUFBd0QsS0FBNkQscUJBRTFSa1YsQ0FBQTNZLEVBQUE3QixNQUFBOEIsRUFBQTZXLEdBQUFkLFVBQUFzQixHQUFBQyxZQUFBdFgsRUFBQTlCLEVBQUFDLElBQUFxRixLQUFBekQsRUFBQXlULEVBQUF4VCxNQUFBLEtBQW9GLE9BQUFFLEVBQUFGLEVBQUEsT0FBQUEsRUFBQUUsRUFBQSxDQUFBQSxFQUFBRixLQUFvQzJZLEdBQUEsS0FBQUMsR0FBQSxLQUFBQyxHQUFBLEtBQXlCLFNBQUFDLEdBQUEvWSxHQUFlLEdBQUFBLEVBQUFpUixFQUFBalIsR0FBQSxDQUFZLG1CQUFBNFksSUFBQTVaLEVBQUEsT0FBdUMsSUFBQWlCLEVBQUErUSxFQUFBaFIsRUFBQW1TLFdBQXNCeUcsR0FBQTVZLEVBQUFtUyxVQUFBblMsRUFBQThILEtBQUE3SCxJQUEwQixTQUFBK1ksR0FBQWhaLEdBQWU2WSxHQUFBQyxNQUFBdFcsS0FBQXhDLEdBQUE4WSxHQUFBLENBQUE5WSxHQUFBNlksR0FBQTdZLEVBQTZCLFNBQUFpWixLQUFjLEdBQUFKLEdBQUEsQ0FBTyxJQUFBN1ksRUFBQTZZLEdBQUE1WSxFQUFBNlksR0FBK0IsR0FBakJBLEdBQUFELEdBQUEsS0FBV0UsR0FBQS9ZLEdBQU1DLEVBQUEsSUFBQUQsRUFBQSxFQUFhQSxFQUFBQyxFQUFBZ0MsT0FBV2pDLElBQUErWSxHQUFBOVksRUFBQUQsS0FDcGQsU0FBQWtaLEdBQUFsWixFQUFBQyxHQUFpQixPQUFBRCxFQUFBQyxHQUFZLFNBQUFrWixHQUFBblosRUFBQUMsRUFBQTlCLEdBQW1CLE9BQUE2QixFQUFBQyxFQUFBOUIsR0FBYyxTQUFBaWIsTUFBZSxJQUFBQyxJQUFBLEVBQVUsU0FBQUMsR0FBQXRaLEVBQUFDLEdBQWlCLEdBQUFvWixHQUFBLE9BQUFyWixFQUFBQyxHQUFrQm9aLElBQUEsRUFBTSxJQUFJLE9BQUFILEdBQUFsWixFQUFBQyxHQUFlLFFBQVFvWixJQUFBLFVBQUFSLElBQUEsT0FBQUMsTUFBQU0sS0FBQUgsT0FBeUMsSUFBQU0sR0FBQSxDQUFRQyxPQUFBLEVBQUFDLE1BQUEsRUFBQUMsVUFBQSxFQUFBQyxrQkFBQSxFQUFBQyxPQUFBLEVBQUFDLE9BQUEsRUFBQUMsUUFBQSxFQUFBQyxVQUFBLEVBQUFDLE9BQUEsRUFBQUMsUUFBQSxFQUFBQyxLQUFBLEVBQUFDLE1BQUEsRUFBQUMsTUFBQSxFQUFBQyxLQUFBLEVBQUFDLE1BQUEsR0FBbUosU0FBQUMsR0FBQXZhLEdBQWUsSUFBQUMsRUFBQUQsS0FBQXdhLFVBQUF4YSxFQUFBd2EsU0FBQTFHLGNBQThDLGdCQUFBN1QsSUFBQXNaLEdBQUF2WixFQUFBOEgsTUFBQSxhQUFBN0gsRUFDNVosU0FBQXdhLEdBQUF6YSxHQUF5RyxPQUExRkEsSUFBQXFHLFFBQUFyRyxFQUFBMGEsWUFBQS9HLFFBQWlDZ0gsMEJBQUEzYSxJQUFBMmEseUJBQXlELElBQUEzYSxFQUFBNGEsU0FBQTVhLEVBQUE0UyxXQUFBNVMsRUFBcUMsU0FBQTZhLEdBQUE3YSxHQUFlLElBQUEwVCxFQUFBLFNBQXlCLElBQUF6VCxHQUFURCxFQUFBLEtBQUFBLEtBQVM0VCxTQUFnSCxPQUE1RjNULE9BQUEyVCxTQUFBOUUsY0FBQSxRQUFBZ00sYUFBQTlhLEVBQUEsV0FBNkRDLEVBQUEsbUJBQUFBLEVBQUFELElBQStCQyxFQUFTLFNBQUE4YSxHQUFBL2EsR0FBZSxJQUFBQyxFQUFBRCxFQUFBOEgsS0FBYSxPQUFBOUgsSUFBQXdhLFdBQUEsVUFBQXhhLEVBQUE4VCxnQkFBQSxhQUFBN1QsR0FBQSxVQUFBQSxHQUV2VCxTQUFBK2EsR0FBQWhiLEdBQWVBLEVBQUFpYixnQkFBQWpiLEVBQUFpYixjQURuQyxTQUFBamIsR0FBZSxJQUFBQyxFQUFBOGEsR0FBQS9hLEdBQUEsa0JBQUE3QixFQUFBSyxPQUFBMkoseUJBQUFuSSxFQUFBZ0wsWUFBQXRMLFVBQUFPLEdBQUE3QixFQUFBLEdBQUE0QixFQUFBQyxHQUFxRyxJQUFBRCxFQUFBTCxlQUFBTSxTQUFBLElBQUE5QixHQUFBLG1CQUFBQSxFQUFBUSxLQUFBLG1CQUFBUixFQUFBK2MsSUFBQSxDQUF1RyxJQUFBaGIsRUFBQS9CLEVBQUFRLElBQUF3QixFQUFBaEMsRUFBQStjLElBQWlNLE9BQTdLMWMsT0FBQUMsZUFBQXVCLEVBQUFDLEVBQUEsQ0FBMkJrYixjQUFBLEVBQUF4YyxJQUFBLFdBQStCLE9BQUF1QixFQUFBakMsS0FBQW9NLE9BQW9CNlEsSUFBQSxTQUFBbGIsR0FBaUI1QixFQUFBLEdBQUE0QixFQUFPRyxFQUFBbEMsS0FBQW9NLEtBQUFySyxNQUFrQnhCLE9BQUFDLGVBQUF1QixFQUFBQyxFQUFBLENBQTJCdkIsV0FBQVAsRUFBQU8sYUFBMEIsQ0FBTzBjLFNBQUEsV0FBb0IsT0FBQWhkLEdBQVNpZCxTQUFBLFNBQUFyYixHQUFzQjVCLEVBQUEsR0FBQTRCLEdBQU9zYixhQUFBLFdBQXlCdGIsRUFBQWliLGNBQ3RmLFlBQUtqYixFQUFBQyxNQUE4QnNiLENBQUF2YixJQUF5QyxTQUFBd2IsR0FBQXhiLEdBQWUsSUFBQUEsRUFBQSxTQUFlLElBQUFDLEVBQUFELEVBQUFpYixjQUFzQixJQUFBaGIsRUFBQSxTQUFlLElBQUE5QixFQUFBOEIsRUFBQW1iLFdBQW1CaGQsRUFBQSxHQUEyRCxPQUFsRDRCLElBQUE1QixFQUFBMmMsR0FBQS9hLEtBQUF5YixRQUFBLGVBQUF6YixFQUFBakIsUUFBOENpQixFQUFBNUIsS0FBSUQsSUFBQThCLEVBQUFvYixTQUFBcmIsSUFBQSxHQUM3TixJQUFBMGIsR0FBQTdSLEVBQUFzRixtREFBQXdNLEdBQUEsY0FBQWpTLEdBQUEsbUJBQUE3SyxlQUFBaUssSUFBQThTLEdBQUFsUyxHQUFBN0ssT0FBQWlLLElBQUEsdUJBQUErUyxHQUFBblMsR0FBQTdLLE9BQUFpSyxJQUFBLHNCQUFBZ1QsR0FBQXBTLEdBQUE3SyxPQUFBaUssSUFBQSx3QkFBQWlULEdBQUFyUyxHQUFBN0ssT0FBQWlLLElBQUEsMkJBQUFrVCxHQUFBdFMsR0FBQTdLLE9BQUFpSyxJQUFBLHdCQUFBbVQsR0FBQXZTLEdBQUE3SyxPQUFBaUssSUFBQSx3QkFBQW9ULEdBQUF4UyxHQUFBN0ssT0FBQWlLLElBQUEsdUJBQUFxVCxHQUFBelMsR0FBQTdLLE9BQUFpSyxJQUFBLCtCQUFBc1QsR0FBQTFTLEdBQUE3SyxPQUFBaUssSUFBQSwyQkFBQXVULEdBQUEzUyxHQUFBN0ssT0FBQWlLLElBQUEsa0JBQ0EsTUFBQXdULEdBQUE1UyxHQUFBN0ssT0FBQWlLLElBQUEsb0JBQUF5VCxHQUFBN1MsR0FBQTdLLE9BQUFpSyxJQUFBLG9CQUFBMFQsR0FBQSxtQkFBQTNkLGVBQUE0SyxTQUE2SCxTQUFBZ1QsR0FBQXpjLEdBQWUsY0FBQUEsR0FBQSxpQkFBQUEsRUFBQSxLQUEwRSxtQkFBN0JBLEVBQUF3YyxJQUFBeGMsRUFBQXdjLEtBQUF4YyxFQUFBLGVBQTZCQSxFQUFBLEtBQ3ROLFNBQUEwYyxHQUFBMWMsR0FBZSxTQUFBQSxFQUFBLFlBQXVCLHNCQUFBQSxFQUFBLE9BQUFBLEVBQUF5SCxhQUFBekgsRUFBQTNCLE1BQUEsS0FBNEQsb0JBQUEyQixFQUFBLE9BQUFBLEVBQWdDLE9BQUFBLEdBQVUsS0FBQW1jLEdBQUEsdUJBQStCLEtBQUFMLEdBQUEsaUJBQXlCLEtBQUFELEdBQUEsZUFBdUIsS0FBQUcsR0FBQSxpQkFBeUIsS0FBQUQsR0FBQSxtQkFBMkIsS0FBQU0sR0FBQSxpQkFBeUIsb0JBQUFyYyxFQUFBLE9BQUFBLEVBQUE0TCxVQUEwQyxLQUFBc1EsR0FBQSx5QkFBaUMsS0FBQUQsR0FBQSx5QkFBaUMsS0FBQUcsR0FBQSxJQUFBbmMsRUFBQUQsRUFBQW9PLE9BQW1ELE9BQTVCbk8sSUFBQXdILGFBQUF4SCxFQUFBNUIsTUFBQSxHQUE0QjJCLEVBQUF5SCxjQUFBLEtBQUF4SCxFQUFBLGNBQUFBLEVBQ3ZjLGtCQUFrQixLQUFBcWMsR0FBQSxPQUFBSSxHQUFBMWMsRUFBQThILE1BQTBCLEtBQUF5VSxHQUFBLEdBQUF2YyxFQUFBLElBQUFBLEVBQUF1TyxRQUFBdk8sRUFBQXdPLFFBQUEsWUFBQWtPLEdBQUExYyxHQUF1RCxZQUFZLFNBQUEyYyxHQUFBM2MsR0FBZSxJQUFBQyxFQUFBLEdBQVMsR0FBR0QsRUFBQSxPQUFBQSxFQUFBNlMsS0FBZ0IsdURBQUExVSxFQUFBNkIsRUFBQTRjLFlBQUF4ZSxFQUFBNEIsRUFBQTZjLGFBQUEzYyxFQUFBd2MsR0FBQTFjLEVBQUE4SCxNQUFxRzNILEVBQUEsS0FBV2hDLElBQUFnQyxFQUFBdWMsR0FBQXZlLEVBQUEySixPQUFrQjNKLEVBQUErQixFQUFJQSxFQUFBLEdBQUs5QixFQUFBOEIsRUFBQSxRQUFBOUIsRUFBQTBlLFNBQUFyYyxRQUFBa2IsR0FBQSxRQUFBdmQsRUFBQTJlLFdBQUEsSUFBQTVjLElBQUFELEVBQUEsZ0JBQUFDLEVBQUEsS0FBd0ZBLEVBQUEsYUFBQWhDLEdBQUEsV0FBQStCLEVBQStCLE1BQUFGLEVBQVEsUUFBQUcsRUFBQSxHQUFhRixHQUFBRSxFQUFLSCxJQUFBa1QsYUFBV2xULEdBQVMsT0FBQUMsRUFDMWMsSUFBQStjLEdBQUEsOFZBQUFDLEdBQUF6ZSxPQUFBa0IsVUFBQUMsZUFBQXVkLEdBQUEsR0FBNllDLEdBQUEsR0FFckwsU0FBQXJULEdBQUE5SixFQUFBQyxFQUFBOUIsRUFBQUMsRUFBQThCLEdBQXNCbUssS0FBQStTLGdCQUFBLElBQUFuZCxHQUFBLElBQUFBLEdBQUEsSUFBQUEsRUFBeUNvSyxLQUFBZ1QsY0FBQWpmLEVBQXFCaU0sS0FBQWlULG1CQUFBcGQsRUFBMEJtSyxLQUFBa1QsZ0JBQUFwZixFQUF1QmtNLEtBQUFtVCxhQUFBeGQsRUFBb0JxSyxLQUFBdkMsS0FBQTdILEVBQVksSUFBQWtLLEdBQUEsR0FDN1gsdUlBQUFuRSxNQUFBLEtBQUFDLFFBQUEsU0FBQWpHLEdBQXNLbUssR0FBQW5LLEdBQUEsSUFBQThKLEdBQUE5SixFQUFBLEtBQUFBLEVBQUEsUUFBNEIsd0dBQUFpRyxRQUFBLFNBQUFqRyxHQUE0SCxJQUFBQyxFQUFBRCxFQUFBLEdBQVdtSyxHQUFBbEssR0FBQSxJQUFBNkosR0FBQTdKLEVBQUEsS0FBQUQsRUFBQSxXQUErQixxREFBQWlHLFFBQUEsU0FBQWpHLEdBQXlFbUssR0FBQW5LLEdBQUEsSUFBQThKLEdBQUE5SixFQUFBLEtBQUFBLEVBQUE4VCxjQUFBLFFBQ2piLHdFQUFBN04sUUFBQSxTQUFBakcsR0FBNEZtSyxHQUFBbkssR0FBQSxJQUFBOEosR0FBQTlKLEVBQUEsS0FBQUEsRUFBQSxRQUE0QixnTUFBQWdHLE1BQUEsS0FBQUMsUUFBQSxTQUFBakcsR0FBK05tSyxHQUFBbkssR0FBQSxJQUFBOEosR0FBQTlKLEVBQUEsS0FBQUEsRUFBQThULGNBQUEsUUFBMEMsMENBQUE3TixRQUFBLFNBQUFqRyxHQUE4RG1LLEdBQUFuSyxHQUFBLElBQUE4SixHQUFBOUosRUFBQSxLQUFBQSxFQUFBLFFBQy9iLHVCQUFBaUcsUUFBQSxTQUFBakcsR0FBMkNtSyxHQUFBbkssR0FBQSxJQUFBOEosR0FBQTlKLEVBQUEsS0FBQUEsRUFBQSxRQUE0Qiw4QkFBQWlHLFFBQUEsU0FBQWpHLEdBQWtEbUssR0FBQW5LLEdBQUEsSUFBQThKLEdBQUE5SixFQUFBLEtBQUFBLEVBQUEsUUFBNEIsb0JBQUFpRyxRQUFBLFNBQUFqRyxHQUF3Q21LLEdBQUFuSyxHQUFBLElBQUE4SixHQUFBOUosRUFBQSxLQUFBQSxFQUFBOFQsY0FBQSxRQUEwQyxJQUFBMkosR0FBQSxnQkFBdUIsU0FBQUMsR0FBQTFkLEdBQWUsT0FBQUEsRUFBQSxHQUFBb0QsY0FHN1EsU0FBQXVhLEdBQUEzZCxFQUFBQyxFQUFBOUIsRUFBQUMsR0FBcUIsSUFBQThCLEVBQUFpSyxHQUFBeEssZUFBQU0sR0FBQWtLLEdBQUFsSyxHQUFBLE1BQW9DLE9BQUFDLEVBQUEsSUFBQUEsRUFBQTRILE1BQUExSixJQUFBLEVBQUE2QixFQUFBZ0MsU0FBQSxNQUFBaEMsRUFBQSxVQUFBQSxFQUFBLFlBQUFBLEVBQUEsVUFBQUEsRUFBQSxRQU56RCxTQUFBRCxFQUFBQyxFQUFBOUIsRUFBQUMsR0FBcUIsU0FBQTZCLEdBRDhGLFNBQUFELEVBQUFDLEVBQUE5QixFQUFBQyxHQUFxQixVQUFBRCxHQUFBLElBQUFBLEVBQUEySixLQUFBLFNBQWlDLGNBQUE3SCxHQUFpQixxQ0FBdUMscUJBQUE3QixJQUE2QixPQUFBRCxLQUFBaWYsZ0JBQWtFLFdBQTdCcGQsSUFBQThULGNBQUE5UixNQUFBLE9BQTZCLFVBQUFoQyxHQUErQixrQkFDMVU0ZCxDQUFBNWQsRUFBQUMsRUFBQTlCLEVBQUFDLEdBQUEsU0FBMEQsR0FBQUEsRUFBQSxTQUFjLFVBQUFELEVBQUEsT0FBQUEsRUFBQTJKLE1BQTJCLGNBQUE3SCxFQUFnQixrQkFBQUEsRUFBb0IsY0FBQTRkLE1BQUE1ZCxHQUF1QixjQUFBNGQsTUFBQTVkLElBQUEsRUFBQUEsRUFBNEIsU0FNbkQ2ZCxDQUFBN2QsRUFBQTlCLEVBQUErQixFQUFBOUIsS0FBQUQsRUFBQSxNQUFBQyxHQUFBLE9BQUE4QixFQVA1SixTQUFBRixHQUFlLFFBQUFpZCxHQUFBaGYsS0FBQWtmLEdBQUFuZCxLQUEwQmlkLEdBQUFoZixLQUFBaWYsR0FBQWxkLEtBQTBCZ2QsR0FBQTdZLEtBQUFuRSxHQUFBbWQsR0FBQW5kLElBQUEsR0FBOEJrZCxHQUFBbGQsSUFBQSxHQUFTLElBT2tEK2QsQ0FBQTlkLEtBQUEsT0FBQTlCLEVBQUE2QixFQUFBZ2UsZ0JBQUEvZCxHQUFBRCxFQUFBOGEsYUFBQTdhLEVBQUEsR0FBQTlCLElBQUErQixFQUFBcWQsZ0JBQUF2ZCxFQUFBRSxFQUFBc2QsY0FBQSxPQUFBcmYsRUFBQSxJQUFBK0IsRUFBQTRILE1BQUEsR0FBQTNKLEdBQUE4QixFQUFBQyxFQUFBbWQsY0FBQWpmLEVBQUE4QixFQUFBb2QsbUJBQUEsT0FBQW5mLEVBQUE2QixFQUFBZ2UsZ0JBQUEvZCxJQUFBOUIsRUFBQSxLQUFBK0IsSUFBQTRILE9BQUEsSUFBQTVILElBQUEsSUFBQS9CLEVBQUEsTUFBQUEsRUFBQUMsRUFBQTRCLEVBQUFpZSxlQUFBN2YsRUFBQTZCLEVBQUE5QixHQUFBNkIsRUFBQThhLGFBQUE3YSxFQUFBOUIsTUFDNUosU0FBQStmLEdBQUFsZSxHQUFlLGNBQUFBLEdBQWlCLDRFQUFBQSxFQUFtRixrQkFBa0IsU0FBQW1lLEdBQUFuZSxFQUFBQyxHQUFpQixJQUFBOUIsRUFBQThCLEVBQUF3YixRQUFnQixPQUFBbGMsRUFBQSxHQUFXVSxFQUFBLENBQUltZSxvQkFBQSxFQUFBQyxrQkFBQSxFQUFBdGYsV0FBQSxFQUFBMGMsUUFBQSxNQUFBdGQsSUFBQTZCLEVBQUFzZSxjQUFBQyxpQkFDckwsU0FBQUMsR0FBQXhlLEVBQUFDLEdBQWlCLElBQUE5QixFQUFBLE1BQUE4QixFQUFBb2UsYUFBQSxHQUFBcGUsRUFBQW9lLGFBQUFqZ0IsRUFBQSxNQUFBNkIsRUFBQXdiLFFBQUF4YixFQUFBd2IsUUFBQXhiLEVBQUFtZSxlQUEwRmpnQixFQUFBK2YsR0FBQSxNQUFBamUsRUFBQWxCLE1BQUFrQixFQUFBbEIsTUFBQVosR0FBOEI2QixFQUFBc2UsY0FBQSxDQUFpQkMsZUFBQW5nQixFQUFBcWdCLGFBQUF0Z0IsRUFBQXVnQixXQUFBLGFBQUF6ZSxFQUFBNkgsTUFBQSxVQUFBN0gsRUFBQTZILEtBQUEsTUFBQTdILEVBQUF3YixRQUFBLE1BQUF4YixFQUFBbEIsT0FBZ0gsU0FBQTRmLEdBQUEzZSxFQUFBQyxHQUE2QixPQUFaQSxJQUFBd2IsVUFBWWtDLEdBQUEzZCxFQUFBLFVBQUFDLEdBQUEsR0FDdlMsU0FBQTJlLEdBQUE1ZSxFQUFBQyxHQUFpQjBlLEdBQUEzZSxFQUFBQyxHQUFRLElBQUE5QixFQUFBK2YsR0FBQWplLEVBQUFsQixPQUFBWCxFQUFBNkIsRUFBQTZILEtBQTJCLFNBQUEzSixFQUFBLFdBQUFDLEdBQTRCLElBQUFELEdBQUEsS0FBQTZCLEVBQUFqQixPQUFBaUIsRUFBQWpCLE9BQUFaLEtBQUE2QixFQUFBakIsTUFBQSxHQUFBWixHQUFnRDZCLEVBQUFqQixRQUFBLEdBQUFaLElBQUE2QixFQUFBakIsTUFBQSxHQUFBWixRQUFvQyxjQUFBQyxHQUFBLFVBQUFBLEVBQThELFlBQTNCNEIsRUFBQWdlLGdCQUFBLFNBQWtDL2QsRUFBQU4sZUFBQSxTQUFBa2YsR0FBQTdlLEVBQUFDLEVBQUE2SCxLQUFBM0osR0FBQThCLEVBQUFOLGVBQUEsaUJBQUFrZixHQUFBN2UsRUFBQUMsRUFBQTZILEtBQUFvVyxHQUFBamUsRUFBQW9lLGVBQTJHLE1BQUFwZSxFQUFBd2IsU0FBQSxNQUFBeGIsRUFBQW1lLGlCQUFBcGUsRUFBQW9lLGlCQUFBbmUsRUFBQW1lLGdCQUNwVixTQUFBVSxHQUFBOWUsRUFBQUMsRUFBQTlCLEdBQW1CLEdBQUE4QixFQUFBTixlQUFBLFVBQUFNLEVBQUFOLGVBQUEsaUJBQWdFLElBQUF2QixFQUFBNkIsRUFBQTZILEtBQWEsZ0JBQUExSixHQUFBLFVBQUFBLFFBQUEsSUFBQTZCLEVBQUFsQixPQUFBLE9BQUFrQixFQUFBbEIsT0FBQSxPQUF5RWtCLEVBQUEsR0FBQUQsRUFBQXNlLGNBQUFHLGFBQWtDdGdCLEdBQUE4QixJQUFBRCxFQUFBakIsUUFBQWlCLEVBQUFqQixNQUFBa0IsR0FBNEJELEVBQUFxZSxhQUFBcGUsRUFBMEIsTUFBVDlCLEVBQUE2QixFQUFBM0IsUUFBUzJCLEVBQUEzQixLQUFBLElBQW9CMkIsRUFBQW9lLGdCQUFBcGUsRUFBQW9lLGVBQW1DcGUsRUFBQW9lLGlCQUFBcGUsRUFBQXNlLGNBQUFDLGVBQWtELEtBQUFwZ0IsSUFBQTZCLEVBQUEzQixLQUFBRixHQUMxVyxTQUFBMGdCLEdBQUE3ZSxFQUFBQyxFQUFBOUIsR0FBbUIsV0FBQThCLEdBQUFELEVBQUErZSxjQUFBQyxnQkFBQWhmLElBQUEsTUFBQTdCLEVBQUE2QixFQUFBcWUsYUFBQSxHQUFBcmUsRUFBQXNlLGNBQUFHLGFBQUF6ZSxFQUFBcWUsZUFBQSxHQUFBbGdCLElBQUE2QixFQUFBcWUsYUFBQSxHQUFBbGdCLElBUG5CLDBqQ0FBQTZILE1BQUEsS0FBQUMsUUFBQSxTQUFBakcsR0FBeWxDLElBQUFDLEVBQUFELEVBQUFTLFFBQUFnZCxHQUN6bENDLElBQUl2VCxHQUFBbEssR0FBQSxJQUFBNkosR0FBQTdKLEVBQUEsS0FBQUQsRUFBQSxRQUE0QixzRkFBQWdHLE1BQUEsS0FBQUMsUUFBQSxTQUFBakcsR0FBcUgsSUFBQUMsRUFBQUQsRUFBQVMsUUFBQWdkLEdBQUFDLElBQXVCdlQsR0FBQWxLLEdBQUEsSUFBQTZKLEdBQUE3SixFQUFBLEtBQUFELEVBQUEsa0NBQXNELG9DQUFBaUcsUUFBQSxTQUFBakcsR0FBd0QsSUFBQUMsRUFBQUQsRUFBQVMsUUFBQWdkLEdBQUFDLElBQXVCdlQsR0FBQWxLLEdBQUEsSUFBQTZKLEdBQUE3SixFQUFBLEtBQUFELEVBQUEsMENBQThEbUssR0FBQThVLFNBQUEsSUFBQW5WLEdBQUEsaUNBTXJNLElBQUFvVixHQUFBLENBQVFDLE9BQUEsQ0FBUXpPLHdCQUFBLENBQXlCOEcsUUFBQSxXQUFBQyxTQUFBLG1CQUE4QzFHLGFBQUEsOERBQUEvSyxNQUFBLE9BQXlGLFNBQUFvWixHQUFBcGYsRUFBQUMsRUFBQTlCLEdBQThFLE9BQTNENkIsRUFBQXNKLEdBQUEwTSxVQUFBa0osR0FBQUMsT0FBQW5mLEVBQUFDLEVBQUE5QixJQUErQjJKLEtBQUEsU0FBZ0JrUixHQUFBN2EsR0FBTXNWLEVBQUF6VCxHQUFNQSxFQUFTLElBQUFxZixHQUFBLEtBQUFDLEdBQUEsS0FBb0IsU0FBQUMsR0FBQXZmLEdBQWVxUyxFQUFBclMsR0FDcGQsU0FBQXdmLEdBQUF4ZixHQUEyQixHQUFBd2IsR0FBWnpJLEVBQUEvUyxJQUFZLE9BQUFBLEVBQWtCLFNBQUF5ZixHQUFBemYsRUFBQUMsR0FBaUIsY0FBQUQsRUFBQSxPQUFBQyxFQUF5QixJQUFBeWYsSUFBQSxFQUFrRixTQUFBQyxLQUFjTixRQUFBTyxZQUFBLG1CQUFBQyxJQUFBUCxHQUFBRCxHQUFBLE1BQXVELFNBQUFRLEdBQUE3ZixHQUFlLFVBQUFBLEVBQUF3ZCxjQUFBZ0MsR0FBQUYsS0FBQWhHLEdBQUFpRyxHQUFBdmYsRUFBQW9mLEdBQUFFLEdBQUF0ZixFQUFBeWEsR0FBQXphLEtBQThELFNBQUE4ZixHQUFBOWYsRUFBQUMsRUFBQTlCLEdBQW1CLFVBQUE2QixHQUFBMmYsS0FBQUwsR0FBQW5oQixHQUFBa2hCLEdBQUFwZixHQUFBOGYsWUFBQSxtQkFBQUYsS0FBQSxTQUFBN2YsR0FBQTJmLEtBQW9GLFNBQUFLLEdBQUFoZ0IsR0FBZSx1QkFBQUEsR0FBQSxVQUFBQSxHQUFBLFlBQUFBLEVBQUEsT0FBQXdmLEdBQUFGLElBQ2piLFNBQUFXLEdBQUFqZ0IsRUFBQUMsR0FBaUIsYUFBQUQsRUFBQSxPQUFBd2YsR0FBQXZmLEdBQTRCLFNBQUFpZ0IsR0FBQWxnQixFQUFBQyxHQUFpQixhQUFBRCxHQUFBLFdBQUFBLEVBQUEsT0FBQXdmLEdBQUF2ZixHQURtQ3lULElBQUFnTSxHQUFBN0UsR0FBQSxZQUFBakgsU0FBQXNELGNBQUEsRUFBQXRELFNBQUFzRCxlQUVqRyxJQUFBaUosR0FBQSxDQUFRM1AsV0FBQTBPLEdBQUFrQix1QkFBQVYsR0FBQW5QLGNBQUEsU0FBQXZRLEVBQUFDLEVBQUE5QixFQUFBQyxHQUF3RSxJQUFBOEIsRUFBQUQsRUFBQThTLEVBQUE5UyxHQUFBMFQsT0FBQXhULE9BQUEsRUFBQXdKLE9BQUEsRUFBQUMsRUFBQTFKLEVBQUFzYSxVQUFBdGEsRUFBQXNhLFNBQUExRyxjQUFtUCxHQUFySyxXQUFBbEssR0FBQSxVQUFBQSxHQUFBLFNBQUExSixFQUFBNEgsS0FBQTNILEVBQUFzZixHQUFBbEYsR0FBQXJhLEdBQUF3ZixHQUFBdmYsRUFBQStmLElBQUEvZixFQUFBNmYsR0FBQXJXLEVBQUFtVyxLQUFBbFcsRUFBQTFKLEVBQUFzYSxXQUFBLFVBQUE1USxFQUFBa0ssZ0JBQUEsYUFBQTVULEVBQUE0SCxNQUFBLFVBQUE1SCxFQUFBNEgsUUFBQTNILEVBQUE4ZixJQUFxSzlmLFFBQUFILEVBQUFDLElBQUEsT0FBQW1mLEdBQUFqZixFQUFBaEMsRUFBQUMsR0FBa0N1TCxLQUFBM0osRUFBQUUsRUFBQUQsR0FBWSxTQUFBRCxNQUFBRSxFQUFBb2UsZ0JBQUF0ZSxFQUFBMGUsWUFBQSxXQUFBeGUsRUFBQTRILE1BQUErVyxHQUFBM2UsRUFBQSxTQUFBQSxFQUFBbkIsU0FBMEZzaEIsR0FBQS9XLEdBQUFzTixPQUFBLENBQWMwSixLQUFBLEtBQUFySSxPQUFBLE9BQXNCc0ksR0FBQSxDQUFNQyxJQUFBLFNBQ3JmQyxRQUFBLFVBQUFDLEtBQUEsVUFBQUMsTUFBQSxZQUFtRCxTQUFBQyxHQUFBNWdCLEdBQWUsSUFBQUMsRUFBQW9LLEtBQUFpTCxZQUF1QixPQUFBclYsRUFBQTRnQixpQkFBQTVnQixFQUFBNGdCLGlCQUFBN2dCLFFBQUF1Z0IsR0FBQXZnQixPQUFBQyxFQUFBRCxHQUFvRSxTQUFBOGdCLEtBQWMsT0FBQUYsR0FDM0ssSUFBQUcsR0FBQSxFQUFBQyxHQUFBLEVBQUFDLElBQUEsRUFBQUMsSUFBQSxFQUFBQyxHQUFBZCxHQUFBekosT0FBQSxDQUF3Q3dLLFFBQUEsS0FBQUMsUUFBQSxLQUFBQyxRQUFBLEtBQUFDLFFBQUEsS0FBQUMsTUFBQSxLQUFBQyxNQUFBLEtBQUFsSixRQUFBLEtBQUFtSixTQUFBLEtBQUFsSixPQUFBLEtBQUFDLFFBQUEsS0FBQW9JLGlCQUFBQyxHQUFBYSxPQUFBLEtBQUFDLFFBQUEsS0FBQUMsY0FBQSxTQUFBN2hCLEdBQXFNLE9BQUFBLEVBQUE2aEIsZ0JBQUE3aEIsRUFBQThoQixjQUFBOWhCLEVBQUEwYSxXQUFBMWEsRUFBQStoQixVQUFBL2hCLEVBQUE4aEIsY0FBaUZFLFVBQUEsU0FBQWhpQixHQUF1QixpQkFBQUEsRUFBQSxPQUFBQSxFQUFBZ2lCLFVBQXNDLElBQUEvaEIsRUFBQThnQixHQUFzQixPQUFiQSxHQUFBL2dCLEVBQUFvaEIsUUFBYUgsR0FBQSxjQUFBamhCLEVBQUE4SCxLQUFBOUgsRUFBQW9oQixRQUFBbmhCLEVBQUEsR0FBQWdoQixJQUFBLE1BQXVEZ0IsVUFBQSxTQUFBamlCLEdBQXVCLGlCQUFBQSxFQUFBLE9BQUFBLEVBQUFpaUIsVUFDL2QsSUFBQWhpQixFQUFBK2dCLEdBQXNCLE9BQWJBLEdBQUFoaEIsRUFBQXFoQixRQUFhSCxHQUFBLGNBQUFsaEIsRUFBQThILEtBQUE5SCxFQUFBcWhCLFFBQUFwaEIsRUFBQSxHQUFBaWhCLElBQUEsUUFBd0RnQixHQUFBZixHQUFBdkssT0FBQSxDQUFnQnVMLFVBQUEsS0FBQUMsTUFBQSxLQUFBQyxPQUFBLEtBQUFDLFNBQUEsS0FBQUMsbUJBQUEsS0FBQUMsTUFBQSxLQUFBQyxNQUFBLEtBQUFDLE1BQUEsS0FBQUMsWUFBQSxLQUFBQyxVQUFBLE9BQTZJQyxHQUFBLENBQU1DLFdBQUEsQ0FBWWxTLGlCQUFBLGVBQUFHLGFBQUEsMEJBQXNFZ1MsV0FBQSxDQUFhblMsaUJBQUEsZUFBQUcsYUFBQSwwQkFBc0VpUyxhQUFBLENBQWVwUyxpQkFBQSxpQkFBQUcsYUFBQSw4QkFBNEVrUyxhQUFBLENBQWVyUyxpQkFBQSxpQkFDaGdCRyxhQUFBLCtCQUEyQ21TLEdBQUEsQ0FBSzFTLFdBQUFxUyxHQUFBdFMsY0FBQSxTQUFBdlEsRUFBQUMsRUFBQTlCLEVBQUFDLEdBQThDLElBQUE4QixFQUFBLGNBQUFGLEdBQUEsZ0JBQUFBLEVBQUFHLEVBQUEsYUFBQUgsR0FBQSxlQUFBQSxFQUE0RSxHQUFBRSxJQUFBL0IsRUFBQTBqQixlQUFBMWpCLEVBQUEyakIsZUFBQTNoQixJQUFBRCxFQUFBLFlBQWtNLEdBQXZJQSxFQUFBOUIsRUFBQXVWLFNBQUF2VixLQUFBOEIsRUFBQTlCLEVBQUEyZ0IsZUFBQTdlLEVBQUFpakIsYUFBQWpqQixFQUFBa2pCLGFBQUF6UCxPQUEwRXhULEtBQUFGLE9BQUE5QixFQUFBMGpCLGVBQUExakIsRUFBQTRqQixXQUFBcFAsRUFBQTFTLEdBQUEsTUFBQUUsRUFBQSxLQUE2REEsSUFBQUYsRUFBQSxZQUFxQixJQUFBMEosT0FBQSxFQUFBQyxPQUFBLEVBQUFmLE9BQUEsRUFBQTlLLE9BQUEsRUFBd0MsYUFBQWlDLEdBQUEsY0FBQUEsR0FBQTJKLEVBQUF3WCxHQUFBdlgsRUFBQWlaLEdBQUFFLFdBQUFsYSxFQUFBZ2EsR0FBQUMsV0FBQS9rQixFQUFBLFNBQ3phLGVBQUFpQyxHQUFBLGdCQUFBQSxJQUFBMkosRUFBQXVZLEdBQUF0WSxFQUFBaVosR0FBQUksYUFBQXBhLEVBQUFnYSxHQUFBRyxhQUFBamxCLEVBQUEsV0FBaUcsSUFBQUcsRUFBQSxNQUFBaUMsRUFBQUQsRUFBQTZTLEVBQUE1UyxHQUFzTCxHQUFoS0QsRUFBQSxNQUFBRCxFQUFBQyxFQUFBNlMsRUFBQTlTLElBQWtCRCxFQUFBMkosRUFBQXFNLFVBQUFwTSxFQUFBekosRUFBQWhDLEVBQUFDLElBQXVCMEosS0FBQS9KLEVBQUEsUUFBaUJpQyxFQUFBcUcsT0FBQW5JLEVBQVc4QixFQUFBNmhCLGNBQUEzaEIsR0FBa0IvQixFQUFBd0wsRUFBQXFNLFVBQUFuTixFQUFBNUksRUFBQTlCLEVBQUFDLElBQXVCMEosS0FBQS9KLEVBQUEsUUFBaUJJLEVBQUFrSSxPQUFBbkcsRUFBVy9CLEVBQUEwakIsY0FBQTNqQixFQUFrQkUsRUFBQTZCLEVBQUlFLEdBQUEvQixFQUFBNEIsRUFBQSxDQUF1QixJQUFSRSxFQUFBOUIsRUFBSUwsRUFBQSxFQUFJNEwsRUFBWjFKLEVBQUFFLEVBQW9Cd0osRUFBRUEsRUFBQXNKLEVBQUF0SixHQUFBNUwsSUFBZ0IsSUFBSjRMLEVBQUEsRUFBSWQsRUFBQTNJLEVBQVEySSxFQUFFQSxFQUFBb0ssRUFBQXBLLEdBQUFjLElBQVksS0FBSyxFQUFBNUwsRUFBQTRMLEdBQU0xSixFQUFBZ1QsRUFBQWhULEdBQUFsQyxJQUFhLEtBQUssRUFBQTRMLEVBQUE1TCxHQUFNbUMsRUFBQStTLEVBQUEvUyxHQUFBeUosSUFBYSxLQUFLNUwsS0FBSSxDQUFFLEdBQUFrQyxJQUFBQyxHQUFBRCxJQUFBQyxFQUFBbWpCLFVBQUEsTUFBQXJqQixFQUFrQ0MsRUFBQWdULEVBQUFoVCxHQUFRQyxFQUFBK1MsRUFBQS9TLEdBQVFELEVBQUEsVUFBT0EsRUFBQSxLQUFnQixJQUFKQyxFQUFBRCxFQUFJQSxFQUFBLEdBQVNFLE9BQUFELElBQy9kLFFBRDBlbkMsRUFDdGZvQyxFQUFBa2pCLFlBQVl0bEIsSUFBQW1DLElBQXlCRCxFQUFBdUMsS0FBQXJDLEdBQVVBLEVBQUE4UyxFQUFBOVMsR0FBUSxJQUFBQSxFQUFBLEdBQVMvQixPQUFBOEIsSUFBeUIsUUFBZG5DLEVBQUFLLEVBQUFpbEIsWUFBY3RsQixJQUFBbUMsSUFBeUJDLEVBQUFxQyxLQUFBcEUsR0FBVUEsRUFBQTZVLEVBQUE3VSxHQUFRLElBQUFBLEVBQUEsRUFBUUEsRUFBQTZCLEVBQUFnQyxPQUFXN0QsSUFBQW1WLEVBQUF0VCxFQUFBN0IsR0FBQSxVQUFBNEIsR0FBeUIsSUFBQTVCLEVBQUErQixFQUFBOEIsT0FBZSxFQUFBN0QsS0FBTW1WLEVBQUFwVCxFQUFBL0IsR0FBQSxXQUFBRCxHQUF1QixPQUFBNkIsRUFBQTdCLEtBQWFtbEIsR0FBQTlrQixPQUFBa0IsVUFBQUMsZUFBb0MsU0FBQTRqQixHQUFBdmpCLEVBQUFDLEdBQWlCLE9BQUFELElBQUFDLEVBQUEsSUFBQUQsR0FBQSxJQUFBQyxHQUFBLEVBQUFELEdBQUEsRUFBQUMsRUFBQUQsTUFBQUMsS0FDOVIsU0FBQXVqQixHQUFBeGpCLEVBQUFDLEdBQWlCLEdBQUFzakIsR0FBQXZqQixFQUFBQyxHQUFBLFNBQW9CLG9CQUFBRCxHQUFBLE9BQUFBLEdBQUEsaUJBQUFDLEdBQUEsT0FBQUEsRUFBQSxTQUF5RSxJQUFBOUIsRUFBQUssT0FBQThGLEtBQUF0RSxHQUFBNUIsRUFBQUksT0FBQThGLEtBQUFyRSxHQUFzQyxHQUFBOUIsRUFBQThELFNBQUE3RCxFQUFBNkQsT0FBQSxTQUFnQyxJQUFBN0QsRUFBQSxFQUFRQSxFQUFBRCxFQUFBOEQsT0FBVzdELElBQUEsSUFBQWtsQixHQUFBcmxCLEtBQUFnQyxFQUFBOUIsRUFBQUMsTUFBQW1sQixHQUFBdmpCLEVBQUE3QixFQUFBQyxJQUFBNkIsRUFBQTlCLEVBQUFDLEtBQUEsU0FBdUQsU0FBUyxTQUFBcWxCLEdBQUF6akIsR0FBZSxJQUFBQyxFQUFBRCxFQUFRLEdBQUFBLEVBQUFxakIsVUFBQSxLQUFvQnBqQixFQUFBaVQsUUFBU2pULElBQUFpVCxXQUFZLENBQUssU0FBQWpULEVBQUF5akIsV0FBQSxTQUFnQyxLQUFLempCLEVBQUFpVCxRQUFTLFVBQUFqVCxJQUFBaVQsUUFBQXdRLFdBQUEsU0FBNEMsV0FBQXpqQixFQUFBNFMsSUFBQSxJQUFxQixTQUFBOFEsR0FBQTNqQixHQUFlLElBQUF5akIsR0FBQXpqQixJQUFBaEIsRUFBQSxPQUU1VixTQUFBNGtCLEdBQUE1akIsR0FBdUIsS0FBUkEsRUFEN0gsU0FBQUEsR0FBZSxJQUFBQyxFQUFBRCxFQUFBcWpCLFVBQWtCLElBQUFwakIsRUFBQSxZQUFBQSxFQUFBd2pCLEdBQUF6akIsS0FBQWhCLEVBQUEsV0FBQWlCLEVBQUEsS0FBQUQsRUFBd0QsUUFBQTdCLEVBQUE2QixFQUFBNUIsRUFBQTZCLElBQWlCLENBQUUsSUFBQUMsRUFBQS9CLEVBQUErVSxPQUFBL1MsRUFBQUQsSUFBQW1qQixVQUFBLEtBQW9DLElBQUFuakIsSUFBQUMsRUFBQSxNQUFnQixHQUFBRCxFQUFBMmpCLFFBQUExakIsRUFBQTBqQixNQUFBLENBQXNCLFFBQUFsYSxFQUFBekosRUFBQTJqQixNQUFrQmxhLEdBQUUsQ0FBRSxHQUFBQSxJQUFBeEwsRUFBQSxPQUFBd2xCLEdBQUF6akIsR0FBQUYsRUFBd0IsR0FBQTJKLElBQUF2TCxFQUFBLE9BQUF1bEIsR0FBQXpqQixHQUFBRCxFQUF3QjBKLElBQUFtYSxRQUFZOWtCLEVBQUEsT0FBUyxHQUFBYixFQUFBK1UsU0FBQTlVLEVBQUE4VSxPQUFBL1UsRUFBQStCLEVBQUE5QixFQUFBK0IsTUFBK0IsQ0FBS3dKLEdBQUEsRUFBSyxRQUFBQyxFQUFBMUosRUFBQTJqQixNQUFrQmphLEdBQUUsQ0FBRSxHQUFBQSxJQUFBekwsRUFBQSxDQUFVd0wsR0FBQSxFQUFLeEwsRUFBQStCLEVBQUk5QixFQUFBK0IsRUFBSSxNQUFNLEdBQUF5SixJQUFBeEwsRUFBQSxDQUFVdUwsR0FBQSxFQUFLdkwsRUFBQThCLEVBQUkvQixFQUFBZ0MsRUFBSSxNQUFNeUosSUFBQWthLFFBQVksSUFBQW5hLEVBQUEsQ0FBTyxJQUFBQyxFQUFBekosRUFBQTBqQixNQUFjamEsR0FBRSxDQUFFLEdBQUFBLElBQUF6TCxFQUFBLENBQVV3TCxHQUFBLEVBQUt4TCxFQUFBZ0MsRUFBSS9CLEVBQUE4QixFQUFJLE1BQU0sR0FBQTBKLElBQUF4TCxFQUFBLENBQVV1TCxHQUFBLEVBQUt2TCxFQUFBK0IsRUFBSWhDLEVBQUErQixFQUFJLE1BQU0wSixJQUFBa2EsUUFBWW5hLEdBQ3JmM0ssRUFBQSxRQUFpQmIsRUFBQWtsQixZQUFBamxCLEdBQUFZLEVBQUEsT0FBMEQsT0FBMUIsSUFBQWIsRUFBQTBVLEtBQUE3VCxFQUFBLE9BQTBCYixFQUFBZ1UsVUFBQWhILFVBQUFoTixFQUFBNkIsRUFBQUMsRUFBa0Q4akIsQ0FBQS9qQixJQUFRLFlBQWtCLFFBQUFDLEVBQUFELElBQWEsQ0FBRSxPQUFBQyxFQUFBNFMsS0FBQSxJQUFBNVMsRUFBQTRTLElBQUEsT0FBQTVTLEVBQWlDLEdBQUFBLEVBQUE0akIsTUFBQTVqQixFQUFBNGpCLE1BQUEzUSxPQUFBalQsTUFBQTRqQixVQUFzQyxDQUFLLEdBQUE1akIsSUFBQUQsRUFBQSxNQUFlLE1BQUtDLEVBQUE2akIsU0FBVyxDQUFFLElBQUE3akIsRUFBQWlULFFBQUFqVCxFQUFBaVQsU0FBQWxULEVBQUEsWUFBdUNDLElBQUFpVCxPQUFXalQsRUFBQTZqQixRQUFBNVEsT0FBQWpULEVBQUFpVCxPQUEwQmpULElBQUE2akIsU0FBYSxZQUM1VyxJQUFBRSxHQUFBMWEsR0FBQXNOLE9BQUEsQ0FBaUJxTixjQUFBLEtBQUFDLFlBQUEsS0FBQUMsY0FBQSxPQUF1REMsR0FBQTlhLEdBQUFzTixPQUFBLENBQWV5TixjQUFBLFNBQUFya0IsR0FBMEIsd0JBQUFBLElBQUFxa0IsY0FBQTFRLE9BQUEwUSxpQkFBZ0VDLEdBQUFqRSxHQUFBekosT0FBQSxDQUFnQmlMLGNBQUEsT0FBcUIsU0FBQTBDLEdBQUF2a0IsR0FBZSxJQUFBQyxFQUFBRCxFQUFBK1gsUUFBdUYsTUFBdkUsYUFBQS9YLEVBQUEsS0FBQUEsSUFBQXdrQixXQUFBLEtBQUF2a0IsSUFBQUQsRUFBQSxJQUFBQSxFQUFBQyxFQUF3RCxLQUFBRCxNQUFBLElBQWUsSUFBQUEsR0FBQSxLQUFBQSxJQUFBLEVBQzVULElBQUF5a0IsR0FBQSxDQUFRQyxJQUFBLFNBQUFDLFNBQUEsSUFBQUMsS0FBQSxZQUFBQyxHQUFBLFVBQUFDLE1BQUEsYUFBQUMsS0FBQSxZQUFBQyxJQUFBLFNBQUFDLElBQUEsS0FBQUMsS0FBQSxjQUFBQyxLQUFBLGNBQUFDLE9BQUEsYUFBQUMsZ0JBQUEsZ0JBQTJNQyxHQUFBLENBQUtDLEVBQUEsWUFBQUMsRUFBQSxNQUFBQyxHQUFBLFFBQUFDLEdBQUEsUUFBQUMsR0FBQSxRQUFBQyxHQUFBLFVBQUFDLEdBQUEsTUFBQUMsR0FBQSxRQUFBQyxHQUFBLFdBQUFDLEdBQUEsU0FBQUMsR0FBQSxJQUFBQyxHQUFBLFNBQUFDLEdBQUEsV0FBQUMsR0FBQSxNQUFBQyxHQUFBLE9BQUFDLEdBQUEsWUFBQUMsR0FBQSxVQUFBQyxHQUFBLGFBQUFDLEdBQUEsWUFBQUMsR0FBQSxTQUFBQyxHQUFBLFNBQUFDLElBQUEsS0FBQUMsSUFBQSxLQUFBQyxJQUFBLEtBQUFDLElBQUEsS0FDeE5DLElBQUEsS0FBQUMsSUFBQSxLQUFBQyxJQUFBLEtBQUFDLElBQUEsS0FBQUMsSUFBQSxLQUFBQyxJQUFBLE1BQUFDLElBQUEsTUFBQUMsSUFBQSxNQUFBQyxJQUFBLFVBQUFDLElBQUEsYUFBQUMsSUFBQSxRQUFxSEMsR0FBQXRILEdBQUF6SixPQUFBLENBQWV2WCxJQUFBLFNBQUFXLEdBQWdCLEdBQUFBLEVBQUFYLElBQUEsQ0FBVSxJQUFBWSxFQUFBd2tCLEdBQUF6a0IsRUFBQVgsTUFBQVcsRUFBQVgsSUFBdUIsb0JBQUFZLEVBQUEsT0FBQUEsRUFBK0IsbUJBQUFELEVBQUE4SCxLQUFBLE1BQUE5SCxFQUFBdWtCLEdBQUF2a0IsSUFBQSxRQUFBMEYsT0FBQUcsYUFBQTdGLEdBQUEsWUFBQUEsRUFBQThILE1BQUEsVUFBQTlILEVBQUE4SCxLQUFBd2QsR0FBQXRsQixFQUFBK1gsVUFBQSxtQkFBZ0o2UCxTQUFBLEtBQUFyUCxRQUFBLEtBQUFtSixTQUFBLEtBQUFsSixPQUFBLEtBQUFDLFFBQUEsS0FBQS9WLE9BQUEsS0FBQTBWLE9BQUEsS0FBQXlJLGlCQUFBQyxHQUFBMEQsU0FBQSxTQUFBeGtCLEdBQW9JLG1CQUN4ZUEsRUFBQThILEtBQUF5YyxHQUFBdmtCLEdBQUEsR0FBZStYLFFBQUEsU0FBQS9YLEdBQXFCLGtCQUFBQSxFQUFBOEgsTUFBQSxVQUFBOUgsRUFBQThILEtBQUE5SCxFQUFBK1gsUUFBQSxHQUF1RE0sTUFBQSxTQUFBclksR0FBbUIsbUJBQUFBLEVBQUE4SCxLQUFBeWMsR0FBQXZrQixHQUFBLFlBQUFBLEVBQUE4SCxNQUFBLFVBQUE5SCxFQUFBOEgsS0FBQTlILEVBQUErWCxRQUFBLEtBQWtGOFAsR0FBQTFHLEdBQUF2SyxPQUFBLENBQWdCa1IsYUFBQSxPQUFrQkMsR0FBQTFILEdBQUF6SixPQUFBLENBQWdCb1IsUUFBQSxLQUFBQyxjQUFBLEtBQUFDLGVBQUEsS0FBQTFQLE9BQUEsS0FBQUMsUUFBQSxLQUFBRixRQUFBLEtBQUFtSixTQUFBLEtBQUFiLGlCQUFBQyxLQUE0SHFILEdBQUE3ZSxHQUFBc04sT0FBQSxDQUFlNEcsYUFBQSxLQUFBMEcsWUFBQSxLQUFBQyxjQUFBLE9BQXNEaUUsR0FBQWpILEdBQUF2SyxPQUFBLENBQWdCeVIsT0FBQSxTQUFBcm9CLEdBQW1CLGlCQUFBQSxJQUFBcW9CLE9BQUEsZ0JBQ3Rkcm9CLEtBQUFzb0IsWUFBQSxHQUFtQkMsT0FBQSxTQUFBdm9CLEdBQW9CLGlCQUFBQSxJQUFBdW9CLE9BQUEsZ0JBQUF2b0IsS0FBQXdvQixZQUFBLGVBQUF4b0IsS0FBQXlvQixXQUFBLEdBQThGQyxPQUFBLEtBQUFDLFVBQUEsT0FBNEJDLEdBQUEsb0JBQUFsVSxFQUFBLGlCQUFBQyxFQUFBLHVCQUFBQyxFQUFBLG9SQUNqSyxzZkFDQSxpR0FBQUMsR0FBQSwwREFBQWdVLEdBQUEsR0FBbUtDLEdBQUEsR0FBTyxTQUFBQyxHQUFBL29CLEVBQUFDLEdBQWlCLElBQUE5QixFQUFBNkIsRUFBQSxHQUFrQjVCLEVBQUEsT0FBUDRCLElBQUEsSUFBTyxHQUFBb0QsY0FBQXBELEVBQUFnQyxNQUFBLElBQTJDL0IsRUFBQSxDQUFHeVEsd0JBQUEsQ0FBeUI4RyxRQUFBcFosRUFBQXFaLFNBQUFyWixFQUFBLFdBQStCMlMsYUFBQSxDQUFBNVMsR0FBQTZxQixjQUFBL29CLEdBQW1DNG9CLEdBQUE3b0IsR0FBQUMsRUFBUTZvQixHQUFBM3FCLEdBQUE4QixFQUM5Vix3ZkFDQSxpUUFBQWdHLFFBQUEsU0FBQWpHLEdBQXFSK29CLEdBQUEvb0IsR0FBQSxLQUFXNG9CLEdBQUEzaUIsUUFBQSxTQUFBakcsR0FBdUIrb0IsR0FBQS9vQixHQUFBLEtBQ3ZULElBQUFpcEIsR0FBQSxDQUFRelksV0FBQXFZLEdBQUFLLCtCQUFBLFNBQUFscEIsR0FBaUUsaUJBQVJBLEVBQUE4b0IsR0FBQTlvQixNQUFRLElBQUFBLEVBQUFncEIsZUFBd0N6WSxjQUFBLFNBQUF2USxFQUFBQyxFQUFBOUIsRUFBQUMsR0FBaUMsSUFBQThCLEVBQUE0b0IsR0FBQTlvQixHQUFZLElBQUFFLEVBQUEsWUFBa0IsT0FBQUYsR0FBVSxzQkFBQXVrQixHQUFBcG1CLEdBQUEsWUFBeUMsMEJBQUE2QixFQUFBMm5CLEdBQWlDLE1BQU0sdUJBQUEzbkIsRUFBQXNrQixHQUE4QixNQUFNLG1CQUFBbm1CLEVBQUF3akIsT0FBQSxZQUF5Qyw2SEFBQTNoQixFQUFBbWhCLEdBQTBJLE1BQU0sa0hBQUFuaEIsRUFDdmU2bkIsR0FBRyxNQUFNLGtFQUFBN25CLEVBQUErbkIsR0FBMkUsTUFBTSxLQUFBclQsRUFBQSxLQUFBQyxFQUFBLEtBQUFDLEVBQUE1VSxFQUFBZ2tCLEdBQTZCLE1BQU0sS0FBQW5QLEdBQUE3VSxFQUFBbW9CLEdBQWEsTUFBTSxhQUFBbm9CLEVBQUFxZ0IsR0FBbUIsTUFBTSxZQUFBcmdCLEVBQUFvb0IsR0FBa0IsTUFBTSxpQ0FBQXBvQixFQUFBb2tCLEdBQXlDLE1BQU0sNEpBQUFwa0IsRUFBQWtpQixHQUF5SyxNQUFNLFFBQUFsaUIsRUFBQXNKLEdBQXlDLE9BQU5tSyxFQUF2QnhULEVBQUFELEVBQUFnVyxVQUFBOVYsRUFBQUQsRUFBQTlCLEVBQUFDLElBQTZCNkIsSUFBVWtwQixHQUFBRixHQUFBQywrQkFDbGRFLEdBQUEsR0FBTSxTQUFBQyxHQUFBcnBCLEdBQWUsSUFBQUMsRUFBQUQsRUFBQXNwQixXQUFBbnJCLEVBQUE4QixFQUF1QixHQUFHLElBQUE5QixFQUFBLENBQU82QixFQUFBdXBCLFVBQUEvbUIsS0FBQXJFLEdBQW9CLE1BQU0sSUFBQUMsRUFBTSxJQUFBQSxFQUFBRCxFQUFRQyxFQUFBOFUsUUFBUzlVLElBQUE4VSxPQUF1RCxLQUEzQzlVLEVBQUEsSUFBQUEsRUFBQXlVLElBQUEsS0FBQXpVLEVBQUErVCxVQUFBcVgsZUFBMkMsTUFBWXhwQixFQUFBdXBCLFVBQUEvbUIsS0FBQXJFLEdBQW9CQSxFQUFBd1UsRUFBQXZVLFNBQVFELEdBQVMsSUFBQUEsRUFBQSxFQUFRQSxFQUFBNkIsRUFBQXVwQixVQUFBdG5CLE9BQXFCOUQsSUFBQSxDQUFLOEIsRUFBQUQsRUFBQXVwQixVQUFBcHJCLEdBQWlCLElBQUErQixFQUFBdWEsR0FBQXphLEVBQUFzVixhQUF3QmxYLEVBQUE0QixFQUFBeXBCLGFBQWlCLFFBQUF0cEIsRUFBQUgsRUFBQXNWLFlBQUEzTCxFQUFBLEtBQUFDLEVBQUEsRUFBbUNBLEVBQUEwRyxFQUFBck8sT0FBWTJILElBQUEsQ0FBSyxJQUFBZixFQUFBeUgsRUFBQTFHLEdBQVlmLFFBQUEwSCxjQUFBblMsRUFBQTZCLEVBQUFFLEVBQUFELE1BQUF5SixFQUFBMkgsRUFBQTNILEVBQUFkLElBQTZDd0osRUFBQTFJLElBQU8sSUFBQStmLElBQUEsRUFDL1osU0FBQXRmLEdBQUFwSyxFQUFBQyxHQUFnQixJQUFBQSxFQUFBLFlBQWtCLElBQUE5QixHQUFBZ3JCLEdBQUFucEIsR0FBQTJwQixHQUFBQyxJQUFBdHFCLEtBQUEsS0FBQVUsR0FBaUNDLEVBQUE0cEIsaUJBQUE3cEIsRUFBQTdCLEdBQUEsR0FBMkIsU0FBQTJyQixHQUFBOXBCLEVBQUFDLEdBQWlCLElBQUFBLEVBQUEsWUFBa0IsSUFBQTlCLEdBQUFnckIsR0FBQW5wQixHQUFBMnBCLEdBQUFDLElBQUF0cUIsS0FBQSxLQUFBVSxHQUFpQ0MsRUFBQTRwQixpQkFBQTdwQixFQUFBN0IsR0FBQSxHQUEyQixTQUFBd3JCLEdBQUEzcEIsRUFBQUMsR0FBaUJrWixHQUFBeVEsR0FBQTVwQixFQUFBQyxHQUM5TSxTQUFBMnBCLEdBQUE1cEIsRUFBQUMsR0FBaUIsR0FBQXlwQixHQUFBLENBQU8sSUFBQXZyQixFQUFBc2MsR0FBQXhhLEdBQTJFLEdBQXZELFFBQVI5QixFQUFBd1UsRUFBQXhVLEtBQVEsaUJBQUFBLEVBQUEwVSxLQUFBLElBQUE0USxHQUFBdGxCLE9BQUEsTUFBdURpckIsR0FBQW5uQixPQUFBLENBQWMsSUFBQTdELEVBQUFnckIsR0FBQWxkLE1BQWU5TixFQUFBcXJCLGFBQUF6cEIsRUFBaUI1QixFQUFBa1gsWUFBQXJWLEVBQWdCN0IsRUFBQWtyQixXQUFBbnJCLEVBQWU2QixFQUFBNUIsT0FBSTRCLEVBQUEsQ0FBUXlwQixhQUFBenBCLEVBQUFzVixZQUFBclYsRUFBQXFwQixXQUFBbnJCLEVBQUFvckIsVUFBQSxJQUF3RCxJQUFJalEsR0FBQStQLEdBQUFycEIsR0FBUyxRQUFRQSxFQUFBeXBCLGFBQUEsS0FBQXpwQixFQUFBc1YsWUFBQSxLQUFBdFYsRUFBQXNwQixXQUFBLEtBQUF0cEIsRUFBQXVwQixVQUFBdG5CLE9BQUEsS0FBQW1uQixHQUFBbm5CLFFBQUFtbkIsR0FBQTVtQixLQUFBeEMsS0FBeUcsSUFBQStwQixHQUFBLEdBQVNDLEdBQUEsRUFBQUMsR0FBQSx3QkFBQTFYLEtBQUFDLFVBQUF4USxNQUFBLEdBQzNYLFNBQUFrb0IsR0FBQWxxQixHQUFxRixPQUF0RXhCLE9BQUFrQixVQUFBQyxlQUFBMUIsS0FBQStCLEVBQUFpcUIsTUFBQWpxQixFQUFBaXFCLElBQUFELEtBQUFELEdBQUEvcEIsRUFBQWlxQixLQUFBLElBQXNFRixHQUFBL3BCLEVBQUFpcUIsS0FBaUIsU0FBQUUsR0FBQW5xQixHQUFvRSxhQUFyREEsTUFBQSxvQkFBQTRULHVCQUFBLElBQXFELFlBQXNDLElBQUksT0FBQTVULEVBQUFnZixlQUFBaGYsRUFBQW9xQixLQUErQixNQUFBbnFCLEdBQVMsT0FBQUQsRUFBQW9xQixNQUFlLFNBQUFDLEdBQUFycUIsR0FBZSxLQUFLQSxLQUFBc3FCLFlBQWdCdHFCLElBQUFzcUIsV0FBZ0IsT0FBQXRxQixFQUMvVCxTQUFBdXFCLEdBQUF2cUIsRUFBQUMsR0FBaUIsSUFBZ0I3QixFQUFoQkQsRUFBQWtzQixHQUFBcnFCLEdBQWdCLElBQUpBLEVBQUEsRUFBYzdCLEdBQUUsQ0FBRSxPQUFBQSxFQUFBeWMsU0FBQSxDQUE0QyxHQUF6QnhjLEVBQUE0QixFQUFBN0IsRUFBQWdYLFlBQUFsVCxPQUF5QmpDLEdBQUFDLEdBQUE3QixHQUFBNkIsRUFBQSxPQUFxQnVxQixLQUFBcnNCLEVBQUE0RCxPQUFBOUIsRUFBQUQsR0FBbUJBLEVBQUE1QixFQUFJNEIsRUFBQSxDQUFHLEtBQUs3QixHQUFFLENBQUUsR0FBQUEsRUFBQXNzQixZQUFBLENBQWtCdHNCLElBQUFzc0IsWUFBZ0IsTUFBQXpxQixFQUFRN0IsSUFBQXlVLFdBQWV6VSxPQUFBLEVBQVNBLEVBQUFrc0IsR0FBQWxzQixJQUNyTixTQUFBdXNCLEtBQWMsUUFBQTFxQixFQUFBMlQsT0FBQTFULEVBQUFrcUIsS0FBd0JscUIsYUFBQUQsRUFBQTJxQixtQkFBaUMsQ0FBRSxJQUFJM3FCLEVBQUFDLEVBQUEycUIsZ0JBQUF6SCxZQUFnQyxNQUFBaGxCLEdBQVMsTUFBTThCLEVBQUFrcUIsR0FBQW5xQixFQUFBNFQsVUFBaUIsT0FBQTNULEVBQVMsU0FBQTRxQixHQUFBN3FCLEdBQWUsSUFBQUMsRUFBQUQsS0FBQXdhLFVBQUF4YSxFQUFBd2EsU0FBQTFHLGNBQThDLE9BQUE3VCxJQUFBLFVBQUFBLElBQUEsU0FBQUQsRUFBQThILE1BQUEsV0FBQTlILEVBQUE4SCxNQUFBLFFBQUE5SCxFQUFBOEgsTUFBQSxRQUFBOUgsRUFBQThILE1BQUEsYUFBQTlILEVBQUE4SCxPQUFBLGFBQUE3SCxHQUFBLFNBQUFELEVBQUE4cUIsaUJBQ25OLElBQUFDLEdBQUFyWCxHQUFBLGlCQUFBRSxVQUFBLElBQUFBLFNBQUFzRCxhQUFBOFQsR0FBQSxDQUFvRUMsT0FBQSxDQUFRdmEsd0JBQUEsQ0FBeUI4RyxRQUFBLFdBQUFDLFNBQUEsbUJBQThDMUcsYUFBQSxpRkFBQS9LLE1BQUEsT0FBMkdrbEIsR0FBQSxLQUFBQyxHQUFBLEtBQUFDLEdBQUEsS0FBQUMsSUFBQSxFQUM5UCxTQUFBQyxHQUFBdHJCLEVBQUFDLEdBQWlCLElBQUE5QixFQUFBOEIsRUFBQTBULFNBQUExVCxJQUFBMlQsU0FBQSxJQUFBM1QsRUFBQTJhLFNBQUEzYSxJQUFBOGUsY0FBK0QsT0FBQXNNLElBQUEsTUFBQUgsU0FBQWYsR0FBQWhzQixHQUFBLE1BQTZDLG1CQUFMQSxFQUFBK3NCLEtBQUtMLEdBQUExc0IsS0FBQSxDQUErQm90QixNQUFBcHRCLEVBQUFxdEIsZUFBQTltQixJQUFBdkcsRUFBQXN0QixjQUEwQ3R0QixFQUFBLENBQTZFdXRCLFlBQTdFdnRCLEtBQUE0Z0IsZUFBQTVnQixFQUFBNGdCLGNBQUFvRSxhQUFBeFAsUUFBQWdZLGdCQUE2RUQsV0FBQUUsYUFBQXp0QixFQUFBeXRCLGFBQUFDLFVBQUExdEIsRUFBQTB0QixVQUFBQyxZQUFBM3RCLEVBQUEydEIsYUFBc0dWLElBQUE1SCxHQUFBNEgsR0FBQWp0QixHQUFBLE1BQUFpdEIsR0FBQWp0QixHQUFBNkIsRUFBQXNKLEdBQUEwTSxVQUFBZ1YsR0FBQUMsT0FBQUUsR0FBQW5yQixFQUFBQyxJQUFBNkgsS0FBQSxTQUFBOUgsRUFBQXFHLE9BQUE2a0IsR0FBQXpYLEVBQUF6VCxPQUN6WCxJQUFBK3JCLEdBQUEsQ0FBUXZiLFdBQUF3YSxHQUFBemEsY0FBQSxTQUFBdlEsRUFBQUMsRUFBQTlCLEVBQUFDLEdBQThDLElBQUErQixFQUFBRCxFQUFBOUIsRUFBQXVWLFNBQUF2VixJQUFBd1YsU0FBQSxJQUFBeFYsRUFBQXdjLFNBQUF4YyxJQUFBMmdCLGNBQWlFLEtBQUE1ZSxHQUFBRCxHQUFBLENBQVlGLEVBQUEsQ0FBR0UsRUFBQWdxQixHQUFBaHFCLEdBQVFDLEVBQUEyUSxFQUFBa2IsU0FBYyxRQUFBcmlCLEVBQUEsRUFBWUEsRUFBQXhKLEVBQUE4QixPQUFXMEgsSUFBQSxDQUFLLElBQUFDLEVBQUF6SixFQUFBd0osR0FBVyxJQUFBekosRUFBQVAsZUFBQWlLLEtBQUExSixFQUFBMEosR0FBQSxDQUFnQzFKLEdBQUEsRUFBSyxNQUFBRixHQUFTRSxHQUFBLEVBQUtDLEdBQUFELEVBQUssR0FBQUMsRUFBQSxZQUFrQyxPQUFqQkQsRUFBQUQsRUFBQThTLEVBQUE5UyxHQUFBMFQsT0FBaUIzVCxHQUFVLGFBQUF1YSxHQUFBcmEsSUFBQSxTQUFBQSxFQUFBNHFCLG1CQUFBSSxHQUFBaHJCLEVBQUFpckIsR0FBQWxyQixFQUFBbXJCLEdBQUEsTUFBb0UsTUFBTSxXQUFBQSxHQUFBRCxHQUFBRCxHQUFBLEtBQTBCLE1BQU0sZ0JBQUFHLElBQUEsRUFBdUIsTUFBTSxxREFBQUEsSUFBQSxFQUFBQyxHQUFBbnRCLEVBQUFDLEdBQXNFLHlCQUFBMnNCLEdBQUEsTUFDcGYsaUNBQUFPLEdBQUFudEIsRUFBQUMsR0FBMkMsY0FDM0MsU0FBQTZ0QixHQUFBanNCLEVBQUFDLEdBQTJFLE9BQTFERCxFQUFBVCxFQUFBLENBQUtvTSxjQUFBLEdBQWdCMUwsSUFBSUEsRUFEa1YsU0FBQUQsR0FBZSxJQUFBQyxFQUFBLEdBQTZELE9BQXBENEosRUFBQXdELFNBQUFwSCxRQUFBakcsRUFBQSxTQUFBQSxHQUFrQyxNQUFBQSxJQUFBQyxHQUFBRCxLQUFrQkMsRUFDOVppc0IsQ0FBQWpzQixFQUFBMEwsYUFBQTNMLEVBQUEyTCxTQUFBMUwsR0FBaUNELEVBQVMsU0FBQW1zQixHQUFBbnNCLEVBQUFDLEVBQUE5QixFQUFBQyxHQUFpQyxHQUFaNEIsSUFBQWlCLFFBQVloQixFQUFBLENBQU1BLEVBQUEsR0FBSyxRQUFBQyxFQUFBLEVBQVlBLEVBQUEvQixFQUFBOEQsT0FBVy9CLElBQUFELEVBQUEsSUFBQTlCLEVBQUErQixLQUFBLEVBQW1CLElBQUEvQixFQUFBLEVBQVFBLEVBQUE2QixFQUFBaUMsT0FBVzlELElBQUErQixFQUFBRCxFQUFBTixlQUFBLElBQUFLLEVBQUE3QixHQUFBWSxPQUFBaUIsRUFBQTdCLEdBQUFpdUIsV0FBQWxzQixJQUFBRixFQUFBN0IsR0FBQWl1QixTQUFBbHNCLE1BQUE5QixJQUFBNEIsRUFBQTdCLEdBQUFrdUIsaUJBQUEsT0FBNEcsQ0FBdUIsSUFBbEJsdUIsRUFBQSxHQUFBK2YsR0FBQS9mLEdBQVc4QixFQUFBLEtBQU9DLEVBQUEsRUFBUUEsRUFBQUYsRUFBQWlDLE9BQVcvQixJQUFBLENBQUssR0FBQUYsRUFBQUUsR0FBQW5CLFFBQUFaLEVBQWlFLE9BQTlDNkIsRUFBQUUsR0FBQWtzQixVQUFBLE9BQWlCaHVCLElBQUE0QixFQUFBRSxHQUFBbXNCLGlCQUFBLElBQW9DLE9BQUFwc0IsR0FBQUQsRUFBQUUsR0FBQWtTLFdBQUFuUyxFQUFBRCxFQUFBRSxJQUFrQyxPQUFBRCxNQUFBbXNCLFVBQUEsSUFDbGMsU0FBQUUsR0FBQXRzQixFQUFBQyxHQUFnRSxPQUEvQyxNQUFBQSxFQUFBc3NCLHlCQUFBdnRCLEVBQUEsTUFBK0NPLEVBQUEsR0FBV1UsRUFBQSxDQUFJbEIsV0FBQSxFQUFBc2Ysa0JBQUEsRUFBQTFTLFNBQUEsR0FBQTNMLEVBQUFzZSxjQUFBRyxlQUE0RSxTQUFBK04sR0FBQXhzQixFQUFBQyxHQUFpQixJQUFBOUIsRUFBQThCLEVBQUFsQixNQUFjLE1BQUFaLE1BQUE4QixFQUFBb2UsYUFBQSxPQUFBcGUsSUFBQTBMLFlBQUEsTUFBQXhOLEdBQUFhLEVBQUEsTUFBQXNFLE1BQUFxSixRQUFBMU0sS0FBQSxHQUFBQSxFQUFBZ0MsUUFBQWpELEVBQUEsTUFBQWlCLElBQUEsSUFBQTlCLEVBQUE4QixHQUFBLE1BQUE5QixNQUFBLEtBQXFKNkIsRUFBQXNlLGNBQUEsQ0FBaUJHLGFBQUFQLEdBQUEvZixJQUNoVyxTQUFBc3VCLEdBQUF6c0IsRUFBQUMsR0FBaUIsSUFBQTlCLEVBQUErZixHQUFBamUsRUFBQWxCLE9BQUFYLEVBQUE4ZixHQUFBamUsRUFBQW9lLGNBQXVDLE1BQUFsZ0IsT0FBQSxHQUFBQSxLQUFBNkIsRUFBQWpCLFFBQUFpQixFQUFBakIsTUFBQVosR0FBQSxNQUFBOEIsRUFBQW9lLGNBQUFyZSxFQUFBcWUsZUFBQWxnQixJQUFBNkIsRUFBQXFlLGFBQUFsZ0IsSUFBd0csTUFBQUMsSUFBQTRCLEVBQUFxZSxhQUFBLEdBQUFqZ0IsR0FBK0IsU0FBQXN1QixHQUFBMXNCLEdBQWUsSUFBQUMsRUFBQUQsRUFBQW1WLFlBQW9CbFYsSUFBQUQsRUFBQXNlLGNBQUFHLGVBQUF6ZSxFQUFBakIsTUFBQWtCLEdBSHpLOFIsRUFBQUMsdUJBQUEsMEhBQUFoTSxNQUFBLE1BQWdLZ0wsRUFBQWdDLEVBQU0vQixFQUFBNkIsRUFBTTVCLEVBQUE2QixFQUFNaEIsRUFBQUUseUJBQUEsQ0FBNkIwYSxrQkFBQTFELEdBQUEyRCxzQkFBQTFKLEdBQUEySixrQkFBQTFNLEdBQUEyTSxrQkFBQWYsR0FBQWdCLHVCQUFBNVUsS0FHUSxJQUFBNlUsR0FBQSxDQUFRQyxLQUFBLCtCQUFBQyxPQUFBLHFDQUFBQyxJQUFBLDhCQUN4UixTQUFBQyxHQUFBcHRCLEdBQWUsT0FBQUEsR0FBVSw2Q0FBOEMsc0RBQXVELDhDQUE4QyxTQUFBcXRCLEdBQUFydEIsRUFBQUMsR0FBaUIsYUFBQUQsR0FBQSxpQ0FBQUEsRUFBQW90QixHQUFBbnRCLEdBQUEsK0JBQUFELEdBQUEsa0JBQUFDLEVBQUEsK0JBQUFELEVBQzdMLElBQUFBLEdBQUFzdEIsUUFBQSxFQUFBQyxJQUFBdnRCLEdBQStLLFNBQUFBLEVBQUFDLEdBQWUsR0FBQUQsRUFBQXd0QixlQUFBUixHQUFBRyxLQUFBLGNBQUFudEIsSUFBQXl0QixVQUFBeHRCLE1BQTBELENBQTBFLEtBQXJFcXRCLE9BQUExWixTQUFBOUUsY0FBQSxRQUFxQzJlLFVBQUEsUUFBQXh0QixFQUFBLFNBQWdDQSxFQUFBcXRCLEdBQUFoRCxXQUFvQnRxQixFQUFBc3FCLFlBQWF0cUIsRUFBQTB0QixZQUFBMXRCLEVBQUFzcUIsWUFBNkIsS0FBS3JxQixFQUFBcXFCLFlBQWF0cUIsRUFBQTJ0QixZQUFBMXRCLEVBQUFxcUIsY0FBclgsb0JBQUFzRCxhQUFBQyx3QkFBQSxTQUFBNXRCLEVBQUE5QixFQUFBQyxFQUFBOEIsR0FBa0YwdEIsTUFBQUMsd0JBQUEsV0FBeUMsT0FBQTd0QixHQUFBQyxFQUFBOUIsTUFBb0I2QixJQUM1SyxTQUFBOHRCLEdBQUE5dEIsRUFBQUMsR0FBaUIsR0FBQUEsRUFBQSxDQUFNLElBQUE5QixFQUFBNkIsRUFBQXNxQixXQUFtQixHQUFBbnNCLE9BQUE2QixFQUFBK3RCLFdBQUEsSUFBQTV2QixFQUFBeWMsU0FBcUQsWUFBZHpjLEVBQUE2dkIsVUFBQS90QixHQUFzQkQsRUFBQW1WLFlBQUFsVixFQUN2RyxJQUFBZ3VCLEdBQUEsQ0FBUUMseUJBQUEsRUFBQUMsbUJBQUEsRUFBQUMsa0JBQUEsRUFBQUMsa0JBQUEsRUFBQUMsU0FBQSxFQUFBQyxjQUFBLEVBQUFDLGlCQUFBLEVBQUFDLGFBQUEsRUFBQUMsU0FBQSxFQUFBQyxNQUFBLEVBQUFDLFVBQUEsRUFBQUMsY0FBQSxFQUFBQyxZQUFBLEVBQUFDLGNBQUEsRUFBQUMsV0FBQSxFQUFBQyxVQUFBLEVBQUFDLFNBQUEsRUFBQUMsWUFBQSxFQUFBQyxhQUFBLEVBQUFDLGNBQUEsRUFBQUMsWUFBQSxFQUFBQyxlQUFBLEVBQUFDLGdCQUFBLEVBQUFDLGlCQUFBLEVBQUFDLFlBQUEsRUFBQUMsV0FBQSxFQUFBQyxZQUFBLEVBQUFDLFNBQUEsRUFBQUMsT0FBQSxFQUFBQyxTQUFBLEVBQUFDLFNBQUEsRUFBQUMsUUFBQSxFQUFBQyxRQUFBLEVBQUFDLE1BQUEsRUFBQUMsYUFBQSxFQUNSQyxjQUFBLEVBQUFDLGFBQUEsRUFBQUMsaUJBQUEsRUFBQUMsa0JBQUEsRUFBQUMsa0JBQUEsRUFBQUMsZUFBQSxFQUFBQyxhQUFBLEdBQTBIdHNCLEdBQUEsMEJBQXNKLFNBQUF1c0IsR0FBQTV3QixFQUFBQyxFQUFBOUIsR0FBbUIsYUFBQThCLEdBQUEsa0JBQUFBLEdBQUEsS0FBQUEsRUFBQSxHQUFBOUIsR0FBQSxpQkFBQThCLEdBQUEsSUFBQUEsR0FBQWd1QixHQUFBdHVCLGVBQUFLLElBQUFpdUIsR0FBQWp1QixJQUFBLEdBQUFDLEdBQUE0d0IsT0FBQTV3QixFQUFBLEtBQ25TLFNBQUE2d0IsR0FBQTl3QixFQUFBQyxHQUEyQixRQUFBOUIsS0FBVjZCLElBQUF1VSxNQUFVdFUsRUFBQSxHQUFBQSxFQUFBTixlQUFBeEIsR0FBQSxDQUF1QyxJQUFBQyxFQUFBLElBQUFELEVBQUFrUyxRQUFBLE1BQUFuUSxFQUFBMHdCLEdBQUF6eUIsRUFBQThCLEVBQUE5QixHQUFBQyxHQUF5QyxVQUFBRCxNQUFBLFlBQTRCQyxFQUFBNEIsRUFBQSt3QixZQUFBNXlCLEVBQUErQixHQUFBRixFQUFBN0IsR0FBQStCLEdBRGlCMUIsT0FBQThGLEtBQUEycEIsSUFBQWhvQixRQUFBLFNBQUFqRyxHQUFvQ3FFLEdBQUE0QixRQUFBLFNBQUFoRyxHQUF1QkEsSUFBQUQsRUFBQWd4QixPQUFBLEdBQUE1dEIsY0FBQXBELEVBQUFpeEIsVUFBQSxHQUE2Q2hELEdBQUFodUIsR0FBQWd1QixHQUFBanVCLE9BQzVGLElBQUFreEIsR0FBQTN4QixFQUFBLENBQVU0eEIsVUFBQSxHQUFZLENBQUVDLE1BQUEsRUFBQUMsTUFBQSxFQUFBQyxJQUFBLEVBQUFDLEtBQUEsRUFBQUMsT0FBQSxFQUFBQyxJQUFBLEVBQUFDLEtBQUEsRUFBQUMsT0FBQSxFQUFBQyxRQUFBLEVBQUFDLE1BQUEsRUFBQUMsTUFBQSxFQUFBQyxPQUFBLEVBQUFqdEIsUUFBQSxFQUFBa3RCLE9BQUEsRUFBQUMsS0FBQSxJQUM1TCxTQUFBQyxHQUFBbHlCLEVBQUFDLEdBQWlCQSxJQUFBaXhCLEdBQUFseEIsS0FBQSxNQUFBQyxFQUFBMEwsVUFBQSxNQUFBMUwsRUFBQXNzQiwwQkFBQXZ0QixFQUFBLE1BQUFnQixFQUFBLFVBQUFDLEVBQUFzc0IsMEJBQUEsTUFBQXRzQixFQUFBMEwsVUFBQTNNLEVBQUEsdUJBQUFpQixFQUFBc3NCLHlCQUFBLFdBQUF0c0IsRUFBQXNzQix5QkFBQXZ0QixFQUFBLGFBQUFpQixFQUFBc1UsT0FBQSxpQkFBQXRVLEVBQUFzVSxPQUFBdlYsRUFBQSxVQUNqQixTQUFBbXpCLEdBQUFueUIsRUFBQUMsR0FBaUIsUUFBQUQsRUFBQXFRLFFBQUEsNEJBQUFwUSxFQUFBbXlCLEdBQW9ELE9BQUFweUIsR0FBVSwwS0FBa0wsa0JBQ2pRLFNBQUFxeUIsR0FBQXJ5QixFQUFBQyxHQUFxRSxJQUFBOUIsRUFBQStyQixHQUFwRGxxQixFQUFBLElBQUFBLEVBQUE0YSxVQUFBLEtBQUE1YSxFQUFBNGEsU0FBQTVhLElBQUErZSxlQUFnRTllLEVBQUE2USxFQUFBN1EsR0FBUSxRQUFBN0IsRUFBQSxFQUFZQSxFQUFBNkIsRUFBQWdDLE9BQVc3RCxJQUFBLENBQUssSUFBQThCLEVBQUFELEVBQUE3QixHQUFXLElBQUFELEVBQUF3QixlQUFBTyxLQUFBL0IsRUFBQStCLEdBQUEsQ0FBZ0MsT0FBQUEsR0FBVSxhQUFBNHBCLEdBQUEsU0FBQTlwQixHQUE2QixNQUFNLHVCQUFBOHBCLEdBQUEsUUFBQTlwQixHQUF1QzhwQixHQUFBLE9BQUE5cEIsR0FBYTdCLEVBQUFtMEIsTUFBQSxFQUFVbjBCLEVBQUFvMEIsT0FBQSxFQUFXLE1BQU0seUJBQUExWCxHQUFBM2EsSUFBQTRwQixHQUFBNXBCLEVBQUFGLEdBQTBDLE1BQU0sNkNBQWdELGFBQUE4VSxHQUFBekUsUUFBQW5RLElBQUFrSyxHQUFBbEssRUFBQUYsR0FBbUM3QixFQUFBK0IsSUFBQSxJQUFVLFNBQUFzeUIsTUFBZSxJQUFBQyxHQUFBLEtBQUFDLEdBQUEsS0FDeGIsU0FBQUMsR0FBQTN5QixFQUFBQyxHQUFpQixPQUFBRCxHQUFVLDZEQUFBQyxFQUFBMnlCLFVBQTZFLFNBQVMsU0FBQUMsR0FBQTd5QixFQUFBQyxHQUFpQixtQkFBQUQsR0FBQSxXQUFBQSxHQUFBLGFBQUFBLEdBQUEsaUJBQUFDLEVBQUEwTCxVQUFBLGlCQUFBMUwsRUFBQTBMLFVBQUEsaUJBQUExTCxFQUFBc3NCLHlCQUFBLE9BQUF0c0IsRUFBQXNzQix5QkFBQSxNQUFBdHNCLEVBQUFzc0Isd0JBQUF1RyxPQUFzTyxJQUFBQyxHQUFBLG1CQUFBQywyQkFBQSxFQUFBQyxHQUFBLG1CQUFBQywrQkFBQSxFQUN4VyxTQUFBQyxHQUFBbnpCLEdBQWUsSUFBQUEsSUFBQXlxQixZQUFvQnpxQixHQUFBLElBQUFBLEVBQUE0YSxVQUFBLElBQUE1YSxFQUFBNGEsVUFBa0M1YSxJQUFBeXFCLFlBQWlCLE9BQUF6cUIsRUFBUyxTQUFBb3pCLEdBQUFwekIsR0FBZSxJQUFBQSxJQUFBc3FCLFdBQW1CdHFCLEdBQUEsSUFBQUEsRUFBQTRhLFVBQUEsSUFBQTVhLEVBQUE0YSxVQUFrQzVhLElBQUF5cUIsWUFBaUIsT0FBQXpxQixFQUFTLElBQUFxekIsSUFBUSxJQUFBQyxHQUFBLEdBQUFDLElBQUEsRUFBZ0IsU0FBQTdvQixHQUFBMUssR0FBYyxFQUFBdXpCLEtBQUF2ekIsRUFBQW1MLFFBQUFtb0IsR0FBQUMsSUFBQUQsR0FBQUMsSUFBQSxLQUFBQSxNQUEwQyxTQUFBNW9CLEdBQUEzSyxFQUFBQyxHQUFxQnF6QixLQUFMQyxJQUFLdnpCLEVBQUFtTCxRQUFpQm5MLEVBQUFtTCxRQUFBbEwsRUFBWSxJQUFBdXpCLEdBQUEsR0FBU3pvQixHQUFBLENBQUlJLFFBQUFxb0IsSUFBV3RvQixHQUFBLENBQUlDLFNBQUEsR0FBV3NvQixHQUFBRCxHQUN0VyxTQUFBRSxHQUFBMXpCLEVBQUFDLEdBQWlCLElBQUE5QixFQUFBNkIsRUFBQThILEtBQUFQLGFBQTBCLElBQUFwSixFQUFBLE9BQUFxMUIsR0FBZ0IsSUFBQXAxQixFQUFBNEIsRUFBQW1TLFVBQWtCLEdBQUEvVCxLQUFBdTFCLDhDQUFBMXpCLEVBQUEsT0FBQTdCLEVBQUF3MUIsMENBQTJHLElBQVF6ekIsRUFBUkQsRUFBQSxHQUFXLElBQUFDLEtBQUFoQyxFQUFBK0IsRUFBQUMsR0FBQUYsRUFBQUUsR0FBc0ksT0FBakgvQixLQUFBNEIsSUFBQW1TLFdBQUF3aEIsNENBQUExekIsRUFBQUQsRUFBQTR6QiwwQ0FBQTF6QixHQUFpSEEsRUFBUyxTQUFBbUwsR0FBQXJMLEdBQW9DLGNBQXRCQSxJQUFBc0gsbUJBQWtELFNBQUF1c0IsR0FBQTd6QixHQUFlMEssR0FBQVEsSUFBT1IsR0FBQUssSUFBTyxTQUFBK29CLEdBQUE5ekIsR0FBZTBLLEdBQUFRLElBQU9SLEdBQUFLLElBQ3JjLFNBQUFncEIsR0FBQS96QixFQUFBQyxFQUFBOUIsR0FBbUI0TSxHQUFBSSxVQUFBcW9CLElBQUF4MEIsRUFBQSxPQUErQjJMLEdBQUFJLEdBQUE5SyxHQUFTMEssR0FBQU8sR0FBQS9NLEdBQVMsU0FBQTYxQixHQUFBaDBCLEVBQUFDLEVBQUE5QixHQUFtQixJQUFBQyxFQUFBNEIsRUFBQW1TLFVBQXdDLEdBQXRCblMsRUFBQUMsRUFBQXFILGtCQUFzQixtQkFBQWxKLEVBQUE2MUIsZ0JBQUEsT0FBQTkxQixFQUF3RSxRQUFBK0IsS0FBdEI5QixJQUFBNjFCLGtCQUFzQi96QixLQUFBRixHQUFBaEIsRUFBQSxNQUFBMGQsR0FBQXpjLElBQUEsVUFBQUMsR0FBeUQsT0FBQVgsRUFBQSxHQUFXcEIsRUFBQUMsR0FBTSxTQUFBODFCLEdBQUFsMEIsR0FBZSxJQUFBQyxFQUFBRCxFQUFBbVMsVUFBOEcsT0FBNUZsUyxPQUFBazBCLDJDQUFBWCxHQUFxREMsR0FBQTFvQixHQUFBSSxRQUFhUixHQUFBSSxHQUFBOUssR0FBUzBLLEdBQUFPLE1BQUFDLFVBQWlCLEVBQzlZLFNBQUFpcEIsR0FBQXAwQixFQUFBQyxFQUFBOUIsR0FBbUIsSUFBQUMsRUFBQTRCLEVBQUFtUyxVQUFrQi9ULEdBQUFZLEVBQUEsT0FBa0JiLEdBQUE4QixFQUFBK3pCLEdBQUFoMEIsRUFBQUMsRUFBQXd6QixJQUFBcjFCLEVBQUErMUIsMENBQUFsMEIsRUFBQXlLLEdBQUFRLElBQUFSLEdBQUFLLElBQUFKLEdBQUFJLEdBQUE5SyxJQUFBeUssR0FBQVEsSUFBNkZQLEdBQUFPLEdBQUEvTSxHQUFTLElBQUFrMkIsR0FBQSxLQUFBQyxHQUFBLEtBQW9CLFNBQUFDLEdBQUF2MEIsR0FBZSxnQkFBQUMsR0FBbUIsSUFBSSxPQUFBRCxFQUFBQyxHQUFZLE1BQUE5QixNQUVuTyxTQUFBcTJCLEdBQUF4MEIsRUFBQUMsRUFBQTlCLEVBQUFDLEdBQXFCaU0sS0FBQXdJLElBQUE3UyxFQUFXcUssS0FBQWhMLElBQUFsQixFQUFXa00sS0FBQXlaLFFBQUF6WixLQUFBd1osTUFBQXhaLEtBQUE2SSxPQUFBN0ksS0FBQThILFVBQUE5SCxLQUFBdkMsS0FBQXVDLEtBQUFvcUIsWUFBQSxLQUFtRnBxQixLQUFBNUksTUFBQSxFQUFhNEksS0FBQWtCLElBQUEsS0FBY2xCLEtBQUFxcUIsYUFBQXowQixFQUFvQm9LLEtBQUFzcUIsdUJBQUF0cUIsS0FBQXVxQixjQUFBdnFCLEtBQUF3cUIsWUFBQXhxQixLQUFBeXFCLGNBQUEsS0FBd0Z6cUIsS0FBQXBMLEtBQUFiLEVBQVlpTSxLQUFBcVosVUFBQSxFQUFpQnJaLEtBQUEwcUIsV0FBQTFxQixLQUFBMnFCLFlBQUEzcUIsS0FBQTRxQixXQUFBLEtBQXNENXFCLEtBQUE2cUIsb0JBQUE3cUIsS0FBQThxQixlQUFBLEVBQStDOXFCLEtBQUFnWixVQUFBLEtBQW9CLFNBQUEvWCxHQUFBdEwsRUFBQUMsRUFBQTlCLEVBQUFDLEdBQW9CLFdBQUFvMkIsR0FBQXgwQixFQUFBQyxFQUFBOUIsRUFBQUMsR0FDL2EsU0FBQWczQixHQUFBcDFCLEdBQTZCLFVBQWRBLElBQUFOLGFBQWNNLEVBQUE0SyxrQkFDN0IsU0FBQXlxQixHQUFBcjFCLEVBQUFDLEdBQWlCLElBQUE5QixFQUFBNkIsRUFBQXFqQixVQUNXLE9BRE8sT0FBQWxsQixNQUFBbU4sR0FBQXRMLEVBQUE2UyxJQUFBNVMsRUFBQUQsRUFBQVgsSUFBQVcsRUFBQWYsT0FBQXcxQixZQUFBejBCLEVBQUF5MEIsWUFBQXQyQixFQUFBMkosS0FBQTlILEVBQUE4SCxLQUFBM0osRUFBQWdVLFVBQUFuUyxFQUFBbVMsVUFBQWhVLEVBQUFrbEIsVUFBQXJqQixJQUFBcWpCLFVBQUFsbEIsTUFBQXUyQixhQUFBejBCLEVBQUE5QixFQUFBdWxCLFVBQUEsRUFBQXZsQixFQUFBODJCLFdBQUEsS0FBQTkyQixFQUFBNjJCLFlBQUEsS0FBQTcyQixFQUFBNDJCLFdBQUEsTUFBMk41MkIsRUFBQSsyQixvQkFBQWwxQixFQUFBazFCLG9CQUE0Qy8yQixFQUFBZzNCLGVBQUFuMUIsRUFBQW0xQixlQUFrQ2gzQixFQUFBMGxCLE1BQUE3akIsRUFBQTZqQixNQUFnQjFsQixFQUFBMjJCLGNBQUE5MEIsRUFBQTgwQixjQUFnQzMyQixFQUFBeTJCLGNBQUE1MEIsRUFBQTQwQixjQUFnQ3oyQixFQUFBMDJCLFlBQUE3MEIsRUFBQTYwQixZQUE0QjEyQixFQUFBdzJCLHVCQUFBMzBCLEVBQUEyMEIsdUJBQWtEeDJCLEVBQUEybEIsUUFBQTlqQixFQUFBOGpCLFFBQzFlM2xCLEVBQUFzRCxNQUFBekIsRUFBQXlCLE1BQWdCdEQsRUFBQW9OLElBQUF2TCxFQUFBdUwsSUFBWXBOLEVBQzVCLFNBQUFtM0IsR0FBQXQxQixFQUFBQyxFQUFBOUIsRUFBQUMsRUFBQThCLEVBQUFDLEdBQXlCLElBQUF3SixFQUFBLEVBQVksR0FBSnZMLEVBQUE0QixFQUFJLG1CQUFBQSxFQUFBbzFCLEdBQUFwMUIsS0FBQTJKLEVBQUEsUUFBc0Msb0JBQUEzSixFQUFBMkosRUFBQSxPQUFnQzNKLEVBQUEsT0FBQUEsR0FBaUIsS0FBQThiLEdBQUEsT0FBQXlaLEdBQUFwM0IsRUFBQXdOLFNBQUF6TCxFQUFBQyxFQUFBRixHQUFvQyxLQUFBa2MsR0FBQSxPQUFBcVosR0FBQXIzQixFQUFBLEVBQUErQixFQUFBQyxFQUFBRixHQUE2QixLQUFBOGIsR0FBQSxPQUFBeVosR0FBQXIzQixFQUFBLEVBQUErQixFQUFBQyxFQUFBRixHQUE2QixLQUFBK2IsR0FBQSxPQUFBaGMsRUFBQXNMLEdBQUEsR0FBQW5OLEVBQUE4QixFQUFBLEVBQUFDLElBQUF1MEIsWUFBQXpZLEdBQUFoYyxFQUFBOEgsS0FBQWtVLEdBQUFoYyxFQUFBbTFCLGVBQUFoMUIsRUFBQUgsRUFBK0UsS0FBQXFjLEdBQUEsT0FBQXJjLEVBQUFzTCxHQUFBLEdBQUFuTixFQUFBOEIsRUFBQUMsSUFBQXUwQixZQUFBcFksR0FBQXJjLEVBQUE4SCxLQUFBdVUsR0FBQXJjLEVBQUFtMUIsZUFBQWgxQixFQUFBSCxFQUE2RSw0QkFBQUEsR0FBQSxPQUFBQSxFQUFBLE9BQUFBLEVBQUE0TCxVQUE0RCxLQUFBcVEsR0FBQXRTLEVBQUEsR0FBYSxNQUFBM0osRUFBUSxLQUFBa2MsR0FBQXZTLEVBQUEsRUFBWSxNQUFBM0osRUFBUSxLQUFBb2MsR0FBQXpTLEVBQUEsR0FBYSxNQUFBM0osRUFBUSxLQUFBc2MsR0FBQTNTLEVBQ2hmLEdBQUcsTUFBQTNKLEVBQVEsS0FBQXVjLEdBQUE1UyxFQUFBLEdBQWF2TCxFQUFBLEtBQU8sTUFBQTRCLEVBQVFoQixFQUFBLFlBQUFnQixhQUFBLElBQXdGLE9BQXpEQyxFQUFBcUwsR0FBQTNCLEVBQUF4TCxFQUFBOEIsRUFBQUMsSUFBYXUwQixZQUFBejBCLEVBQWdCQyxFQUFBNkgsS0FBQTFKLEVBQVM2QixFQUFBazFCLGVBQUFoMUIsRUFBbUJGLEVBQVMsU0FBQXMxQixHQUFBdjFCLEVBQUFDLEVBQUE5QixFQUFBQyxHQUFxRCxPQUFoQzRCLEVBQUFzTCxHQUFBLEVBQUF0TCxFQUFBNUIsRUFBQTZCLElBQWFrMUIsZUFBQWgzQixFQUFtQjZCLEVBQVMsU0FBQXcxQixHQUFBeDFCLEVBQUFDLEVBQUE5QixFQUFBQyxHQUFnRyxPQUEzRTRCLEVBQUFzTCxHQUFBLEVBQUF0TCxFQUFBNUIsRUFBQTZCLEdBQWFBLEVBQUEsTUFBQUEsR0FBQThiLEdBQUFJLEdBQWtCbmMsRUFBQXkwQixZQUFBeDBCLEVBQWdCRCxFQUFBOEgsS0FBQTdILEVBQVNELEVBQUFtMUIsZUFBQWgzQixFQUFtQjZCLEVBQVMsU0FBQXkxQixHQUFBejFCLEVBQUFDLEVBQUE5QixHQUFzRCxPQUFuQzZCLEVBQUFzTCxHQUFBLEVBQUF0TCxFQUFBLEtBQUFDLElBQWdCazFCLGVBQUFoM0IsRUFBbUI2QixFQUNyVyxTQUFBMDFCLEdBQUExMUIsRUFBQUMsRUFBQTlCLEdBQXNMLE9BQW5LOEIsRUFBQXFMLEdBQUEsU0FBQXRMLEVBQUEyTCxTQUFBM0wsRUFBQTJMLFNBQUEsR0FBQTNMLEVBQUFYLElBQUFZLElBQStDazFCLGVBQUFoM0IsRUFBbUI4QixFQUFBa1MsVUFBQSxDQUFhcVgsY0FBQXhwQixFQUFBd3BCLGNBQUFtTSxnQkFBQSxLQUFBQyxlQUFBNTFCLEVBQUE0MUIsZ0JBQW9GMzFCLEVBQVMsU0FBQTQxQixHQUFBNzFCLEVBQUFDLEdBQWlCRCxFQUFBODFCLFVBQUEsRUFBYyxJQUFBMzNCLEVBQUE2QixFQUFBKzFCLG9CQUE0QixJQUFBNTNCLEVBQUE2QixFQUFBKzFCLG9CQUFBLzFCLEVBQUFnMkIsa0JBQUEvMUIsRUFBQTlCLEVBQUE4QixFQUFBRCxFQUFBKzFCLG9CQUFBOTFCLEVBQUFELEVBQUFnMkIsa0JBQUEvMUIsSUFBQUQsRUFBQWcyQixrQkFBQS8xQixHQUE2SGcyQixHQUFBaDJCLEVBQUFELEdBQ3ZYLFNBQUFrMkIsR0FBQWwyQixFQUFBQyxHQUFpQkQsRUFBQTgxQixVQUFBLEVBQWMsSUFBQTMzQixFQUFBNkIsRUFBQW0yQixpQkFBeUIsSUFBQWg0QixNQUFBOEIsSUFBQUQsRUFBQW0yQixpQkFBQSxHQUFvQ2g0QixFQUFBNkIsRUFBQSsxQixvQkFBd0IsSUFBQTMzQixFQUFBNEIsRUFBQWcyQixrQkFBMEI3M0IsSUFBQThCLEVBQUFELEVBQUErMUIsb0JBQUEzM0IsSUFBQTZCLEVBQUFELEVBQUFnMkIsa0JBQUEsRUFBQTUzQixNQUFBNkIsSUFBQUQsRUFBQWcyQixrQkFBQTczQixHQUF5RkEsRUFBQTZCLEVBQUFvMkIsc0JBQTBCaDRCLEVBQUE0QixFQUFBcTJCLG9CQUF3QixJQUFBbDRCLEVBQUE2QixFQUFBbzJCLHNCQUFBcDJCLEVBQUFxMkIsb0JBQUFwMkIsRUFBQTlCLEVBQUE4QixFQUFBRCxFQUFBbzJCLHNCQUFBbjJCLEVBQUE3QixFQUFBNkIsSUFBQUQsRUFBQXEyQixvQkFBQXAyQixHQUFtSGcyQixHQUFBaDJCLEVBQUFELEdBQzVZLFNBQUFzMkIsR0FBQXQyQixFQUFBQyxHQUFpQixJQUFBOUIsRUFBQTZCLEVBQUErMUIsb0JBQTRFLE9BQXRCNTNCLEVBQUE4QixNQUFBOUIsSUFBMUI2QixJQUFBbzJCLHVCQUFxQ24yQixNQUFBRCxHQUFXQyxFQUFTLFNBQUFnMkIsR0FBQWoyQixFQUFBQyxHQUFpQixJQUFBOUIsRUFBQThCLEVBQUFtMkIsc0JBQUFoNEIsRUFBQTZCLEVBQUFvMkIsb0JBQUFuMkIsRUFBQUQsRUFBQTgxQixvQkFBQTUxQixFQUFBRixFQUFBazJCLGlCQUErRyxLQUFaajJCLEVBQUEsSUFBQUEsSUFBQUMsS0FBWSxJQUFBSCxHQUFBNUIsRUFBQTRCLEtBQUFFLEVBQUE5QixHQUErQixLQUFKNEIsRUFBQUUsSUFBSS9CLEVBQUE2QixNQUFBN0IsR0FBa0I4QixFQUFBczJCLDJCQUFBcjJCLEVBQStCRCxFQUFBazFCLGVBQUFuMUIsRUFBbUIsSUFBQXcyQixJQUFBLEVBQ3pVLFNBQUFDLEdBQUF6MkIsR0FBZSxPQUFPMDJCLFVBQUExMkIsRUFBQTIyQixZQUFBLEtBQUFDLFdBQUEsS0FBQUMsb0JBQUEsS0FBQUMsbUJBQUEsS0FBQTlCLFlBQUEsS0FBQUQsV0FBQSxLQUFBZ0Msb0JBQUEsS0FBQUMsbUJBQUEsTUFBaUwsU0FBQUMsR0FBQWozQixHQUFlLE9BQU8wMkIsVUFBQTEyQixFQUFBMDJCLFVBQUFDLFlBQUEzMkIsRUFBQTIyQixZQUFBQyxXQUFBNTJCLEVBQUE0MkIsV0FBQUMsb0JBQUEsS0FBQUMsbUJBQUEsS0FBQTlCLFlBQUEsS0FBQUQsV0FBQSxLQUFBZ0Msb0JBQUEsS0FBQUMsbUJBQUEsTUFDN04sU0FBQUUsR0FBQWwzQixHQUFlLE9BQU9tMUIsZUFBQW4xQixFQUFBNlMsSUFBQSxFQUFBc2tCLFFBQUEsS0FBQUMsU0FBQSxLQUFBbDFCLEtBQUEsS0FBQSt5QixXQUFBLE1BQTZFLFNBQUFvQyxHQUFBcjNCLEVBQUFDLEdBQWlCLE9BQUFELEVBQUE0MkIsV0FBQTUyQixFQUFBMjJCLFlBQUEzMkIsRUFBQTQyQixXQUFBMzJCLEdBQUFELEVBQUE0MkIsV0FBQTEwQixLQUFBakMsRUFBQUQsRUFBQTQyQixXQUFBMzJCLEdBQ3BILFNBQUFxM0IsR0FBQXQzQixFQUFBQyxHQUFpQixJQUFBOUIsRUFBQTZCLEVBQUFxakIsVUFBa0IsVUFBQWxsQixFQUFBLENBQWEsSUFBQUMsRUFBQTRCLEVBQUE2MEIsWUFBb0IzMEIsRUFBQSxLQUFXLE9BQUE5QixNQUFBNEIsRUFBQTYwQixZQUFBNEIsR0FBQXoyQixFQUFBNDBCLHFCQUFnRHgyQixFQUFBNEIsRUFBQTYwQixZQUFBMzBCLEVBQUEvQixFQUFBMDJCLFlBQUEsT0FBQXoyQixFQUFBLE9BQUE4QixHQUFBOUIsRUFBQTRCLEVBQUE2MEIsWUFBQTRCLEdBQUF6MkIsRUFBQTQwQixlQUFBMTBCLEVBQUEvQixFQUFBMDJCLFlBQUE0QixHQUFBdDRCLEVBQUF5MkIsZ0JBQUF4MkIsRUFBQTRCLEVBQUE2MEIsWUFBQW9DLEdBQUEvMkIsR0FBQSxPQUFBQSxNQUFBL0IsRUFBQTAyQixZQUFBb0MsR0FBQTc0QixJQUF5TCxPQUFBOEIsR0FBQTlCLElBQUE4QixFQUFBbTNCLEdBQUFqNUIsRUFBQTZCLEdBQUEsT0FBQTdCLEVBQUF3NEIsWUFBQSxPQUFBMTJCLEVBQUEwMkIsWUFBQVMsR0FBQWo1QixFQUFBNkIsR0FBQW8zQixHQUFBbjNCLEVBQUFELEtBQUFvM0IsR0FBQWo1QixFQUFBNkIsR0FBQUMsRUFBQTAyQixXQUFBMzJCLEdBQ3hULFNBQUFzM0IsR0FBQXYzQixFQUFBQyxHQUFpQixJQUFBOUIsRUFBQTZCLEVBQUE2MEIsWUFBeUUsUUFBckQxMkIsRUFBQSxPQUFBQSxFQUFBNkIsRUFBQTYwQixZQUFBNEIsR0FBQXoyQixFQUFBNDBCLGVBQUE0QyxHQUFBeDNCLEVBQUE3QixJQUFxRDI0QixtQkFBQTM0QixFQUFBMDRCLG9CQUFBMTRCLEVBQUEyNEIsbUJBQUE3MkIsR0FBQTlCLEVBQUEyNEIsbUJBQUE1MEIsS0FBQWpDLEVBQUE5QixFQUFBMjRCLG1CQUFBNzJCLEdBQThILFNBQUF1M0IsR0FBQXgzQixFQUFBQyxHQUFpQixJQUFBOUIsRUFBQTZCLEVBQUFxakIsVUFBdUUsT0FBckQsT0FBQWxsQixHQUFBOEIsSUFBQTlCLEVBQUEwMkIsY0FBQTUwQixFQUFBRCxFQUFBNjBCLFlBQUFvQyxHQUFBaDNCLElBQXFEQSxFQUNoVCxTQUFBdzNCLEdBQUF6M0IsRUFBQUMsRUFBQTlCLEVBQUFDLEVBQUE4QixFQUFBQyxHQUF5QixPQUFBaEMsRUFBQTBVLEtBQWMsZ0NBQUE3UyxFQUFBN0IsRUFBQWc1QixTQUFBbjNCLEVBQUEvQixLQUFBa0MsRUFBQS9CLEVBQUE4QixHQUFBRixFQUFnRSxPQUFBQSxFQUFBMGpCLFdBQUEsS0FBQTFqQixFQUFBMGpCLFVBQUEsR0FBd0MsT0FBMkQsVUFBeEN4akIsRUFBQSxtQkFBbkJGLEVBQUE3QixFQUFBZzVCLFNBQW1CbjNCLEVBQUEvQixLQUFBa0MsRUFBQS9CLEVBQUE4QixHQUFBRixHQUF3QyxNQUE4QixPQUFBVCxFQUFBLEdBQVduQixFQUFBOEIsR0FBTSxPQUFBczJCLElBQUEsRUFBYSxPQUFBcDRCLEVBQ3RRLFNBQUFzNUIsR0FBQTEzQixFQUFBQyxFQUFBOUIsRUFBQUMsRUFBQThCLEdBQXVCczJCLElBQUEsRUFBZ0IsUUFBQXIyQixHQUFWRixFQUFBdTNCLEdBQUF4M0IsRUFBQUMsSUFBVXkyQixVQUFBL3NCLEVBQUEsS0FBQUMsRUFBQSxFQUFBZixFQUFBNUksRUFBQTAyQixZQUFBNTRCLEVBQUFvQyxFQUFxRCxPQUFBMEksR0FBUyxDQUFFLElBQUEzSyxFQUFBMkssRUFBQXNzQixlQUF1QmozQixFQUFBZ0MsR0FBQSxPQUFBeUosTUFBQWQsRUFBQTFJLEVBQUFwQyxHQUFBNkwsRUFBQTFMLElBQUEwTCxFQUFBMUwsS0FBQUgsRUFBQTA1QixHQUFBejNCLEVBQUFDLEVBQUE0SSxFQUFBOUssRUFBQUksRUFBQUMsR0FBQSxPQUFBeUssRUFBQXV1QixXQUFBcDNCLEVBQUEwakIsV0FBQSxHQUFBN2EsRUFBQW9zQixXQUFBLFlBQUFoMUIsRUFBQTgwQixXQUFBOTBCLEVBQUErMEIsWUFBQS8wQixFQUFBODBCLFdBQUFsc0IsR0FBQTVJLEVBQUE4MEIsV0FBQUUsV0FBQXBzQixFQUFBNUksRUFBQTgwQixXQUFBbHNCLEtBQTRNQSxJQUFBM0csS0FBZ0IsSUFBUGhFLEVBQUEsS0FBTzJLLEVBQUE1SSxFQUFBNDJCLG9CQUE0QixPQUFBaHVCLEdBQVMsQ0FBRSxJQUFBRSxFQUFBRixFQUFBc3NCLGVBQXVCcHNCLEVBQUE3SSxHQUFBLE9BQUFoQyxNQUFBMkssRUFBQSxPQUFBYyxJQUFBeEosRUFBQXBDLElBQUE2TCxFQUFBYixJQUFBYSxFQUFBYixLQUFBaEwsRUFBQTA1QixHQUFBejNCLEVBQUFDLEVBQUE0SSxFQUFBOUssRUFBQUksRUFBQUMsR0FBQSxPQUFBeUssRUFBQXV1QixXQUFBcDNCLEVBQUEwakIsV0FDeFosR0FBQTdhLEVBQUFvc0IsV0FBQSxZQUFBaDFCLEVBQUErMkIsbUJBQUEvMkIsRUFBQTgyQixvQkFBQTkyQixFQUFBKzJCLG1CQUFBbnVCLEdBQUE1SSxFQUFBKzJCLG1CQUFBL0IsV0FBQXBzQixFQUFBNUksRUFBQSsyQixtQkFBQW51QixLQUEySkEsSUFBQTNHLEtBQVMsT0FBQXlILElBQUExSixFQUFBMjJCLFdBQUEsTUFBOEIsT0FBQTE0QixFQUFBK0IsRUFBQTYyQixtQkFBQSxLQUFBOTJCLEVBQUEwakIsV0FBQSxHQUFtRCxPQUFBL1osR0FBQSxPQUFBekwsSUFBQWlDLEVBQUFwQyxHQUEwQmtDLEVBQUF5MkIsVUFBQXYyQixFQUFjRixFQUFBMDJCLFlBQUFodEIsRUFBZ0IxSixFQUFBNDJCLG9CQUFBMzRCLEVBQXdCOEIsRUFBQW0xQixlQUFBdnJCLEVBQW1CNUosRUFBQTQwQixjQUFBNzJCLEVBQ3hWLFNBQUE0NUIsR0FBQTMzQixFQUFBQyxFQUFBOUIsR0FBbUIsT0FBQThCLEVBQUE0MkIsc0JBQUEsT0FBQTUyQixFQUFBMjJCLGFBQUEzMkIsRUFBQTIyQixXQUFBMTBCLEtBQUFqQyxFQUFBNDJCLG9CQUFBNTJCLEVBQUEyMkIsV0FBQTMyQixFQUFBNjJCLG9CQUFBNzJCLEVBQUE0MkIsb0JBQUE1MkIsRUFBQTYyQixtQkFBQSxNQUFpTGMsR0FBQTMzQixFQUFBKzBCLFlBQUE3MkIsR0FBb0I4QixFQUFBKzBCLFlBQUEvMEIsRUFBQTgwQixXQUFBLEtBQWdDNkMsR0FBQTMzQixFQUFBODJCLG9CQUFBNTRCLEdBQTRCOEIsRUFBQTgyQixvQkFBQTkyQixFQUFBKzJCLG1CQUFBLEtBQWdELFNBQUFZLEdBQUE1M0IsRUFBQUMsR0FBaUIsS0FBSyxPQUFBRCxHQUFTLENBQUUsSUFBQTdCLEVBQUE2QixFQUFBbzNCLFNBQWlCLFVBQUFqNUIsRUFBQSxDQUFhNkIsRUFBQW8zQixTQUFBLEtBQWdCLElBQUFoNUIsRUFBQTZCLEVBQVEsbUJBQUE5QixHQUFBYSxFQUFBLE1BQUFiLEdBQXdDQSxFQUFBRixLQUFBRyxHQUFVNEIsSUFBQWkxQixZQUM3YyxTQUFBNEMsR0FBQTczQixFQUFBQyxHQUFpQixPQUFPbEIsTUFBQWlCLEVBQUE4RSxPQUFBN0UsRUFBQTYzQixNQUFBbmIsR0FBQTFjLElBQThCLElBQUE4M0IsR0FBQSxDQUFRNXNCLFFBQUEsTUFBYTZzQixHQUFBLEtBQUFDLEdBQUEsS0FBQUMsR0FBQSxLQUF5QixTQUFBQyxHQUFBbjRCLEVBQUFDLEdBQWlCLElBQUE5QixFQUFBNkIsRUFBQThILEtBQUFvRyxTQUFzQnZELEdBQUFvdEIsR0FBQTU1QixFQUFBMFAsZUFBd0IxUCxFQUFBMFAsY0FBQTVOLEVBQWtCLFNBQUFtNEIsR0FBQXA0QixHQUFlLElBQUFDLEVBQUE4M0IsR0FBQTVzQixRQUFpQlQsR0FBQXF0QixJQUFRLzNCLEVBQUE4SCxLQUFBb0csU0FBQUwsY0FBQTVOLEVBQWdDLFNBQUFvNEIsR0FBQXI0QixHQUFlZzRCLEdBQUFoNEIsRUFBS2s0QixHQUFBRCxHQUFBLEtBQVdqNEIsRUFBQTIwQix1QkFBQSxLQUM1UixTQUFBMkQsR0FBQXQ0QixFQUFBQyxHQUE2TixPQUE1TWk0QixLQUFBbDRCLElBQUEsSUFBQUMsR0FBQSxJQUFBQSxJQUEwQixpQkFBQUEsR0FBQSxhQUFBQSxJQUFBaTRCLEdBQUFsNEIsRUFBQUMsRUFBQSxZQUF5REEsRUFBQSxDQUFHc0ssUUFBQXZLLEVBQUF1NEIsYUFBQXQ0QixFQUFBaUMsS0FBQSxNQUFvQyxPQUFBKzFCLElBQUEsT0FBQUQsSUFBQWg1QixFQUFBLE9BQUFnNUIsR0FBQXJELHVCQUFBc0QsR0FBQWg0QixHQUFBZzRCLE1BQUEvMUIsS0FBQWpDLEdBQWtGRCxFQUFBNk4sY0FBdUIsSUFBQTJxQixHQUFBLEdBQVM5c0IsR0FBQSxDQUFJUCxRQUFBcXRCLElBQVdDLEdBQUEsQ0FBS3R0QixRQUFBcXRCLElBQVdFLEdBQUEsQ0FBS3Z0QixRQUFBcXRCLElBQVksU0FBQUcsR0FBQTM0QixHQUFzQyxPQUF2QkEsSUFBQXc0QixJQUFBeDVCLEVBQUEsT0FBdUJnQixFQUNuVixTQUFBNDRCLEdBQUE1NEIsRUFBQUMsR0FBaUIwSyxHQUFBK3RCLEdBQUF6NEIsR0FBVTBLLEdBQUE4dEIsR0FBQXo0QixHQUFVMkssR0FBQWUsR0FBQThzQixJQUFVLElBQUFyNkIsRUFBQThCLEVBQUEyYSxTQUFpQixPQUFBemMsR0FBVSxlQUFBOEIsT0FBQTQ0QixpQkFBQTU0QixFQUFBdXRCLGFBQUFILEdBQUEsU0FBa0UsTUFBTSxRQUFBcHRCLEVBQUFvdEIsR0FBQXB0QixHQUFBOUIsRUFBQSxJQUFBQSxFQUFBOEIsRUFBQTJTLFdBQUEzUyxHQUFBdXRCLGNBQUEsS0FBQXJ2QixJQUFBMjZCLFNBQTRFcHVCLEdBQUFnQixJQUFPZixHQUFBZSxHQUFBekwsR0FBUyxTQUFBODRCLEdBQUEvNEIsR0FBZTBLLEdBQUFnQixJQUFPaEIsR0FBQSt0QixJQUFRL3RCLEdBQUFndUIsSUFBUSxTQUFBTSxHQUFBaDVCLEdBQWUyNEIsR0FBQUQsR0FBQXZ0QixTQUFlLElBQUFsTCxFQUFBMDRCLEdBQUFqdEIsR0FBQVAsU0FBb0JoTixFQUFBa3ZCLEdBQUFwdEIsRUFBQUQsRUFBQThILE1BQW1CN0gsSUFBQTlCLElBQUF3TSxHQUFBOHRCLEdBQUF6NEIsR0FBQTJLLEdBQUFlLEdBQUF2TixJQUE0QixTQUFBODZCLEdBQUFqNUIsR0FBZXk0QixHQUFBdHRCLFVBQUFuTCxJQUFBMEssR0FBQWdCLElBQUFoQixHQUFBK3RCLEtBQ3BZLFNBQUEzc0IsR0FBQTlMLEVBQUFDLEdBQWdCLEdBQUFELEtBQUF3SCxhQUFpRCxRQUFBckosS0FBM0I4QixFQUFBVixFQUFBLEdBQU1VLEdBQUlELElBQUF3SCxrQkFBaUIsSUFBQXZILEVBQUE5QixLQUFBOEIsRUFBQTlCLEdBQUE2QixFQUFBN0IsSUFBMEMsT0FBQThCLEVBQWtTLElBQUFpNUIsR0FBQXhkLEdBQUF0TSxrQkFBQStwQixJQUFBLElBQUF0dkIsRUFBQTRELFdBQUFqRCxLQUM3WSxTQUFBNHVCLEdBQUFwNUIsRUFBQUMsRUFBQTlCLEVBQUFDLEdBQWdERCxFQUFBLE9BQVRBLElBQUFDLEVBQWxCNkIsRUFBQUQsRUFBQTQwQixnQkFBMkIzMEIsRUFBQVYsRUFBQSxHQUE2QlUsRUFBQTlCLEdBQU02QixFQUFBNDBCLGNBQUF6MkIsRUFBa0MsUUFBaEJDLEVBQUE0QixFQUFBNjBCLGNBQWdCLElBQUE3MEIsRUFBQW0xQixpQkFBQS8yQixFQUFBczRCLFVBQUF2NEIsR0FDckgsSUFBQWs3QixHQUFBLENBQVF0dkIsVUFBQSxTQUFBL0osR0FBc0IsU0FBQUEsSUFBQXM1QixzQkFBQSxJQUFBN1YsR0FBQXpqQixJQUE2Q2tLLGdCQUFBLFNBQUFsSyxFQUFBQyxFQUFBOUIsR0FBaUM2QixJQUFBczVCLG9CQUF3QixJQUFBbDdCLEVBQUFtN0IsS0FBcUJyNUIsRUFBQWczQixHQUFWOTRCLEVBQUFvN0IsR0FBQXA3QixFQUFBNEIsSUFBc0JFLEVBQUFpM0IsUUFBQWwzQixFQUFZLE1BQUE5QixJQUFBK0IsRUFBQWszQixTQUFBajVCLEdBQXFDczdCLEtBQUtuQyxHQUFBdDNCLEVBQUFFLEdBQVF3NUIsR0FBQTE1QixFQUFBNUIsSUFBUTZMLG9CQUFBLFNBQUFqSyxFQUFBQyxFQUFBOUIsR0FBcUM2QixJQUFBczVCLG9CQUF3QixJQUFBbDdCLEVBQUFtN0IsS0FBcUJyNUIsRUFBQWczQixHQUFWOTRCLEVBQUFvN0IsR0FBQXA3QixFQUFBNEIsSUFBc0JFLEVBQUEyUyxJQUFBLEVBQVEzUyxFQUFBaTNCLFFBQUFsM0IsRUFBWSxNQUFBOUIsSUFBQStCLEVBQUFrM0IsU0FBQWo1QixHQUFxQ3M3QixLQUFLbkMsR0FBQXQzQixFQUFBRSxHQUFRdzVCLEdBQUExNUIsRUFBQTVCLElBQVE0TCxtQkFBQSxTQUFBaEssRUFBQUMsR0FBa0NELElBQUFzNUIsb0JBQXdCLElBQUFuN0IsRUFBQW83QixLQUFxQm43QixFQUFBODRCLEdBQVYvNEIsRUFBQXE3QixHQUFBcjdCLEVBQUE2QixJQUFzQjVCLEVBQUF5VSxJQUNsZixFQUFFLE1BQUE1UyxJQUFBN0IsRUFBQWc1QixTQUFBbjNCLEdBQXFDdzVCLEtBQUtuQyxHQUFBdDNCLEVBQUE1QixHQUFRczdCLEdBQUExNUIsRUFBQTdCLEtBQVUsU0FBQXc3QixHQUFBMzVCLEVBQUFDLEVBQUE5QixFQUFBQyxFQUFBOEIsRUFBQUMsRUFBQXdKLEdBQXlDLHlCQUFkM0osSUFBQW1TLFdBQWN5bkIsc0JBQUE1NUIsRUFBQTQ1QixzQkFBQXg3QixFQUFBK0IsRUFBQXdKLElBQUExSixFQUFBUCxZQUFBTyxFQUFBUCxVQUFBdUwsd0JBQUF1WSxHQUFBcmxCLEVBQUFDLEtBQUFvbEIsR0FBQXRqQixFQUFBQyxJQUN2RyxTQUFBMDVCLEdBQUE3NUIsRUFBQUMsRUFBQTlCLEdBQW1CLElBQUFDLEdBQUEsRUFBQThCLEVBQUFzekIsR0FBY3J6QixFQUFBRixFQUFBNjVCLFlBQW9aLE1BQWhZLGlCQUFBMzVCLEdBQUEsT0FBQUEsSUFBQSs0QixHQUFBOXRCLGtCQUFBMnVCLFlBQUE1NUIsSUFBQUQsRUFBQW1MLEdBQUFwTCxHQUFBd3pCLEdBQUExb0IsR0FBQUksUUFBQWhMLEdBQUEvQixFQUFBLE9BQUFBLEVBQUE2QixFQUFBc0gsZUFBQW1zQixHQUFBMXpCLEVBQUFFLEdBQUFzekIsSUFBaUp2ekIsRUFBQSxJQUFBQSxFQUFBOUIsRUFBQWdDLEdBQWFILEVBQUE0MEIsY0FBQSxPQUFBMzBCLEVBQUErNUIsWUFBQSxJQUFBLzVCLEVBQUErNUIsTUFBQS81QixFQUFBKzVCLE1BQUEsS0FBOEQvNUIsRUFBQXdLLFFBQUE0dUIsR0FBYXI1QixFQUFBbVMsVUFBQWxTLEVBQWNBLEVBQUFxNUIsb0JBQUF0NUIsRUFBd0I1QixLQUFBNEIsSUFBQW1TLFdBQUF3aEIsNENBQUF6ekIsRUFBQUYsRUFBQTR6QiwwQ0FBQXp6QixHQUFpSEYsRUFDcmIsU0FBQWc2QixHQUFBajZCLEVBQUFDLEVBQUE5QixFQUFBQyxHQUFxQjRCLEVBQUFDLEVBQUErNUIsTUFBVSxtQkFBQS81QixFQUFBaTZCLDJCQUFBajZCLEVBQUFpNkIsMEJBQUEvN0IsRUFBQUMsR0FBa0YsbUJBQUE2QixFQUFBazZCLGtDQUFBbDZCLEVBQUFrNkIsaUNBQUFoOEIsRUFBQUMsR0FBZ0c2QixFQUFBKzVCLFFBQUFoNkIsR0FBQXE1QixHQUFBcHZCLG9CQUFBaEssSUFBQSs1QixNQUFBLE1BQ2pOLFNBQUFJLEdBQUFwNkIsRUFBQUMsRUFBQTlCLEVBQUFDLEdBQXFCLElBQUE4QixFQUFBRixFQUFBbVMsVUFBa0JqUyxFQUFBb0ssTUFBQW5NLEVBQVUrQixFQUFBODVCLE1BQUFoNkIsRUFBQTQwQixjQUF3QjEwQixFQUFBc0ssS0FBQTJ1QixHQUFVLElBQUFoNUIsRUFBQUYsRUFBQTY1QixZQUFvQixpQkFBQTM1QixHQUFBLE9BQUFBLEVBQUFELEVBQUFxSyxRQUFBMnVCLEdBQUE5dEIsa0JBQUEydUIsWUFBQTU1QixNQUFBa0wsR0FBQXBMLEdBQUF3ekIsR0FBQTFvQixHQUFBSSxRQUFBakwsRUFBQXFLLFFBQUFtcEIsR0FBQTF6QixFQUFBRyxJQUFvSSxRQUFoQkEsRUFBQUgsRUFBQTYwQixlQUFnQjZDLEdBQUExM0IsRUFBQUcsRUFBQWhDLEVBQUErQixFQUFBOUIsR0FBQThCLEVBQUE4NUIsTUFBQWg2QixFQUFBNDBCLGVBQStFLG1CQUE3QnowQixFQUFBRixFQUFBMEgsNEJBQTZCeXhCLEdBQUFwNUIsRUFBQUMsRUFBQUUsRUFBQWhDLEdBQUErQixFQUFBODVCLE1BQUFoNkIsRUFBQTQwQixlQUE2RCxtQkFBQTMwQixFQUFBMEgsMEJBQUEsbUJBQUF6SCxFQUFBbTZCLHlCQUFBLG1CQUFBbjZCLEVBQUFvNkIsMkJBQ3ZYLG1CQUFBcDZCLEVBQUFxNkIscUJBQUF0NkIsRUFBQUMsRUFBQTg1QixNQUFBLG1CQUFBOTVCLEVBQUFxNkIsb0JBQUFyNkIsRUFBQXE2QixxQkFBQSxtQkFBQXI2QixFQUFBbzZCLDJCQUFBcDZCLEVBQUFvNkIsNEJBQUFyNkIsSUFBQUMsRUFBQTg1QixPQUFBWCxHQUFBcHZCLG9CQUFBL0osSUFBQTg1QixNQUFBLGNBQUE3NUIsRUFBQUgsRUFBQTYwQixlQUFBNkMsR0FBQTEzQixFQUFBRyxFQUFBaEMsRUFBQStCLEVBQUE5QixHQUFBOEIsRUFBQTg1QixNQUFBaDZCLEVBQUE0MEIsZ0JBQTRULG1CQUFBMTBCLEVBQUFzNkIsb0JBQUF4NkIsRUFBQTBqQixXQUFBLEdBQTBELElBQUErVyxHQUFBbjNCLE1BQUFxSixRQUN0WCxTQUFBK3RCLEdBQUExNkIsRUFBQUMsRUFBQTlCLEdBQTJCLFdBQVI2QixFQUFBN0IsRUFBQW9OLE1BQVEsbUJBQUF2TCxHQUFBLGlCQUFBQSxFQUFBLENBQXlELEdBQUE3QixFQUFBME4sT0FBQSxDQUFhMU4sSUFBQTBOLE9BQVcsSUFBQXpOLE9BQUEsRUFBYUQsSUFBQSxJQUFBQSxFQUFBMFUsS0FBQTdULEVBQUEsT0FBQVosRUFBQUQsRUFBQWdVLFdBQTZDL1QsR0FBQVksRUFBQSxNQUFBZ0IsR0FBb0IsSUFBQUUsRUFBQSxHQUFBRixFQUFXLGNBQUFDLEdBQUEsT0FBQUEsRUFBQXNMLEtBQUEsbUJBQUF0TCxFQUFBc0wsS0FBQXRMLEVBQUFzTCxJQUFBb3ZCLGFBQUF6NkIsRUFBQUQsRUFBQXNMLE1BQXdGdEwsRUFBQSxTQUFBRCxHQUFjLElBQUFDLEVBQUE3QixFQUFBb00sS0FBYXZLLElBQUFrNUIsS0FBQWw1QixFQUFBN0IsRUFBQW9NLEtBQUEsSUFBc0IsT0FBQXhLLFNBQUFDLEVBQUFDLEdBQUFELEVBQUFDLEdBQUFGLElBQTZCMjZCLFdBQUF6NkIsRUFBZUQsR0FBUyxpQkFBQUQsR0FBQWhCLEVBQUEsT0FBb0NiLEVBQUEwTixRQUFBN00sRUFBQSxNQUFBZ0IsR0FBMkIsT0FBQUEsRUFDbGMsU0FBQTQ2QixHQUFBNTZCLEVBQUFDLEdBQWlCLGFBQUFELEVBQUE4SCxNQUFBOUksRUFBQSx5QkFBQVIsT0FBQWtCLFVBQUF5RCxTQUFBbEYsS0FBQWdDLEdBQUEscUJBQXFHekIsT0FBQThGLEtBQUFyRSxHQUFBcUIsS0FBQSxVQUE4QnJCLEVBQUEsSUFDcEosU0FBQTQ2QixHQUFBNzZCLEdBQWUsU0FBQUMsSUFBQTlCLEdBQWdCLEdBQUE2QixFQUFBLENBQU0sSUFBQTVCLEVBQUE2QixFQUFBODBCLFdBQW1CLE9BQUEzMkIsS0FBQTYyQixXQUFBOTJCLEVBQUE4QixFQUFBODBCLFdBQUE1MkIsR0FBQThCLEVBQUErMEIsWUFBQS8wQixFQUFBODBCLFdBQUE1MkIsRUFBc0VBLEVBQUE4MkIsV0FBQSxLQUFrQjkyQixFQUFBdWxCLFVBQUEsR0FBZSxTQUFBdmxCLElBQUFDLEdBQWdCLElBQUE0QixFQUFBLFlBQWtCLEtBQUssT0FBQTVCLEdBQVM2QixFQUFBOUIsRUFBQUMsT0FBQTBsQixRQUFvQixZQUFZLFNBQUExbEIsRUFBQTRCLEVBQUFDLEdBQWdCLElBQUFELEVBQUEsSUFBQTg2QixJQUFjLE9BQUE3NkIsR0FBUyxPQUFBQSxFQUFBWixJQUFBVyxFQUFBa2IsSUFBQWpiLEVBQUFaLElBQUFZLEdBQUFELEVBQUFrYixJQUFBamIsRUFBQXdCLE1BQUF4QixPQUFBNmpCLFFBQTBELE9BQUE5akIsRUFBUyxTQUFBRSxFQUFBRixFQUFBQyxFQUFBOUIsR0FBdUQsT0FBckM2QixFQUFBcTFCLEdBQUFyMUIsRUFBQUMsSUFBWXdCLE1BQUEsRUFBVXpCLEVBQUE4akIsUUFBQSxLQUFlOWpCLEVBQVMsU0FBQUcsRUFBQUYsRUFBQTlCLEVBQUFDLEdBQTRCLE9BQVY2QixFQUFBd0IsTUFBQXJELEVBQVU0QixFQUE2QixRQUFkNUIsRUFBQTZCLEVBQUFvakIsWUFBY2psQixJQUFBcUQsT0FBQXRELEdBQUE4QixFQUFBeWpCLFVBQ2xkLEVBQUF2bEIsR0FBQUMsR0FBTzZCLEVBQUF5akIsVUFBQSxFQUFjdmxCLEdBRGdhQSxFQUN2WixTQUFBd0wsRUFBQTFKLEdBQXFELE9BQXZDRCxHQUFBLE9BQUFDLEVBQUFvakIsWUFBQXBqQixFQUFBeWpCLFVBQUEsR0FBdUN6akIsRUFBUyxTQUFBMkosRUFBQTVKLEVBQUFDLEVBQUE5QixFQUFBQyxHQUFvQixjQUFBNkIsR0FBQSxJQUFBQSxFQUFBNFMsTUFBQTVTLEVBQUF3MUIsR0FBQXQzQixFQUFBNkIsRUFBQWYsS0FBQWIsSUFBQThVLE9BQUFsVCxFQUFBQyxLQUE0REEsRUFBQUMsRUFBQUQsRUFBQTlCLElBQVcrVSxPQUFBbFQsRUFBV0MsR0FBUyxTQUFBNEksRUFBQTdJLEVBQUFDLEVBQUE5QixFQUFBQyxHQUFvQixjQUFBNkIsS0FBQXcwQixjQUFBdDJCLEVBQUEySixPQUFBMUosRUFBQThCLEVBQUFELEVBQUE5QixFQUFBbU0sUUFBQWlCLElBQUFtdkIsR0FBQTE2QixFQUFBQyxFQUFBOUIsR0FBQUMsRUFBQThVLE9BQUFsVCxFQUFBNUIsS0FBeUZBLEVBQUFrM0IsR0FBQW4zQixFQUFBMkosS0FBQTNKLEVBQUFrQixJQUFBbEIsRUFBQW1NLE1BQUEsS0FBQXRLLEVBQUFmLEtBQUFiLElBQXlDbU4sSUFBQW12QixHQUFBMTZCLEVBQUFDLEVBQUE5QixHQUFnQkMsRUFBQThVLE9BQUFsVCxFQUFXNUIsR0FBUyxTQUFBTCxFQUFBaUMsRUFBQUMsRUFBQTlCLEVBQUFDLEdBQW9CLGNBQUE2QixHQUFBLElBQUFBLEVBQUE0UyxLQUFBNVMsRUFBQWtTLFVBQUFxWCxnQkFBQXJyQixFQUFBcXJCLGVBQUF2cEIsRUFBQWtTLFVBQUF5akIsaUJBQ3paejNCLEVBQUF5M0IsaUJBQUEzMUIsRUFBQXkxQixHQUFBdjNCLEVBQUE2QixFQUFBZixLQUFBYixJQUFBOFUsT0FBQWxULEVBQUFDLEtBQXNEQSxFQUFBQyxFQUFBRCxFQUFBOUIsRUFBQXdOLFVBQUEsS0FBd0J1SCxPQUFBbFQsRUFBV0MsR0FBUyxTQUFBL0IsRUFBQThCLEVBQUFDLEVBQUE5QixFQUFBQyxFQUFBdUwsR0FBc0IsY0FBQTFKLEdBQUEsSUFBQUEsRUFBQTRTLE1BQUE1UyxFQUFBczFCLEdBQUFwM0IsRUFBQTZCLEVBQUFmLEtBQUFiLEVBQUF1TCxJQUFBdUosT0FBQWxULEVBQUFDLEtBQThEQSxFQUFBQyxFQUFBRCxFQUFBOUIsSUFBVytVLE9BQUFsVCxFQUFXQyxHQUFTLFNBQUE4SSxFQUFBL0ksRUFBQUMsRUFBQTlCLEdBQWtCLG9CQUFBOEIsR0FBQSxpQkFBQUEsRUFBQSxPQUFBQSxFQUFBdzFCLEdBQUEsR0FBQXgxQixFQUFBRCxFQUFBZixLQUFBZCxJQUFBK1UsT0FBQWxULEVBQUFDLEVBQW9GLG9CQUFBQSxHQUFBLE9BQUFBLEVBQUEsQ0FBa0MsT0FBQUEsRUFBQTJMLFVBQW1CLEtBQUFnUSxHQUFBLE9BQUF6ZCxFQUFBbTNCLEdBQUFyMUIsRUFBQTZILEtBQUE3SCxFQUFBWixJQUFBWSxFQUFBcUssTUFBQSxLQUFBdEssRUFBQWYsS0FBQWQsSUFBQW9OLElBQUFtdkIsR0FBQTE2QixFQUFBLEtBQUFDLEdBQUE5QixFQUFBK1UsT0FBQWxULEVBQUE3QixFQUF3RixLQUFBMGQsR0FBQSxPQUFBNWIsRUFBQXkxQixHQUFBejFCLEVBQUFELEVBQUFmLEtBQUFkLElBQUErVSxPQUFBbFQsRUFBQUMsRUFBNkMsR0FBQXc2QixHQUFBeDZCLElBQ3Jmd2MsR0FBQXhjLEdBQUEsT0FBQUEsRUFBQXMxQixHQUFBdDFCLEVBQUFELEVBQUFmLEtBQUFkLEVBQUEsT0FBQStVLE9BQUFsVCxFQUFBQyxFQUFnRDI2QixHQUFBNTZCLEVBQUFDLEdBQVEsWUFBWSxTQUFBa0osRUFBQW5KLEVBQUFDLEVBQUE5QixFQUFBQyxHQUFvQixJQUFBOEIsRUFBQSxPQUFBRCxJQUFBWixJQUFBLEtBQTBCLG9CQUFBbEIsR0FBQSxpQkFBQUEsRUFBQSxjQUFBK0IsRUFBQSxLQUFBMEosRUFBQTVKLEVBQUFDLEVBQUEsR0FBQTlCLEVBQUFDLEdBQStFLG9CQUFBRCxHQUFBLE9BQUFBLEVBQUEsQ0FBa0MsT0FBQUEsRUFBQXlOLFVBQW1CLEtBQUFnUSxHQUFBLE9BQUF6ZCxFQUFBa0IsTUFBQWEsRUFBQS9CLEVBQUEySixPQUFBZ1UsR0FBQTVkLEVBQUE4QixFQUFBQyxFQUFBOUIsRUFBQW1NLE1BQUFxQixTQUFBdk4sRUFBQThCLEdBQUEySSxFQUFBN0ksRUFBQUMsRUFBQTlCLEVBQUFDLEdBQUEsS0FBaUYsS0FBQXlkLEdBQUEsT0FBQTFkLEVBQUFrQixNQUFBYSxFQUFBbkMsRUFBQWlDLEVBQUFDLEVBQUE5QixFQUFBQyxHQUFBLEtBQXlDLEdBQUFxOEIsR0FBQXQ4QixJQUFBc2UsR0FBQXRlLEdBQUEsY0FBQStCLEVBQUEsS0FBQWhDLEVBQUE4QixFQUFBQyxFQUFBOUIsRUFBQUMsRUFBQSxNQUFxRHc4QixHQUFBNTZCLEVBQUE3QixHQUFRLFlBQVksU0FBQWtMLEVBQUFySixFQUFBQyxFQUFBOUIsRUFBQUMsRUFBQThCLEdBQXNCLG9CQUFBOUIsR0FBQSxpQkFBQUEsRUFBQSxPQUMvY3dMLEVBQUEzSixFQUQrY0QsRUFDL2NBLEVBQUFyQixJQUFBUixJQUFBLFFBQUFDLEVBQUE4QixHQUE2QixvQkFBQTlCLEdBQUEsT0FBQUEsRUFBQSxDQUFrQyxPQUFBQSxFQUFBd04sVUFBbUIsS0FBQWdRLEdBQUEsT0FBQTViLElBQUFyQixJQUFBLE9BQUFQLEVBQUFpQixJQUFBbEIsRUFBQUMsRUFBQWlCLE1BQUEsS0FBQWpCLEVBQUEwSixPQUFBZ1UsR0FBQTVkLEVBQUErQixFQUFBRCxFQUFBNUIsRUFBQWtNLE1BQUFxQixTQUFBekwsRUFBQTlCLEVBQUFpQixLQUFBd0osRUFBQTVJLEVBQUFELEVBQUE1QixFQUFBOEIsR0FBMEcsS0FBQTJiLEdBQUEsT0FBQTlkLEVBQUFrQyxFQUFBRCxJQUFBckIsSUFBQSxPQUFBUCxFQUFBaUIsSUFBQWxCLEVBQUFDLEVBQUFpQixNQUFBLEtBQUFqQixFQUFBOEIsR0FBOEQsR0FBQXU2QixHQUFBcjhCLElBQUFxZSxHQUFBcmUsR0FBQSxPQUFBRixFQUFBK0IsRUFBQUQsSUFBQXJCLElBQUFSLElBQUEsS0FBQUMsRUFBQThCLEVBQUEsTUFBd0QwNkIsR0FBQTM2QixFQUFBN0IsR0FBUSxZQUFZLFNBQUFtTCxFQUFBckosRUFBQXlKLEVBQUFDLEVBQUFmLEdBQW9CLFFBQUE5SyxFQUFBLEtBQUFhLEVBQUEsS0FBQVYsRUFBQXlMLEVBQUFYLEVBQUFXLEVBQUEsRUFBQS9KLEVBQUEsS0FBdUMsT0FBQTFCLEdBQUE4SyxFQUFBWSxFQUFBM0gsT0FBcUIrRyxJQUFBLENBQUs5SyxFQUFBdUQsTUFBQXVILEdBQUFwSixFQUFBMUIsSUFBQSxNQUFBMEIsRUFBQTFCLEVBQUE0bEIsUUFBbUMsSUFBQTdhLEVBQUFFLEVBQUFqSixFQUFBaEMsRUFBQTBMLEVBQUFaLEdBQUFILEdBQW9CLFVBQUFJLEVBQUEsQ0FBYSxPQUFBL0ssTUFBQTBCLEdBQWdCLE1BQU1JLEdBQ3JmOUIsR0FBQSxPQUFBK0ssRUFBQW9hLFdBQUFwakIsRUFBQUMsRUFBQWhDLEdBQThCeUwsRUFBQXhKLEVBQUE4SSxFQUFBVSxFQUFBWCxHQUFXLE9BQUFwSyxFQUFBYixFQUFBa0wsRUFBQXJLLEVBQUFrbEIsUUFBQTdhLEVBQXlCckssRUFBQXFLLEVBQUkvSyxFQUFBMEIsRUFBSSxHQUFBb0osSUFBQVksRUFBQTNILE9BQUEsT0FBQTlELEVBQUErQixFQUFBaEMsR0FBQUgsRUFBZ0MsVUFBQUcsRUFBQSxDQUFhLEtBQUs4SyxFQUFBWSxFQUFBM0gsT0FBVytHLEtBQUE5SyxFQUFBNkssRUFBQTdJLEVBQUEwSixFQUFBWixHQUFBSCxNQUFBYyxFQUFBeEosRUFBQWpDLEVBQUF5TCxFQUFBWCxHQUFBLE9BQUFwSyxFQUFBYixFQUFBRyxFQUFBVSxFQUFBa2xCLFFBQUE1bEIsRUFBQVUsRUFBQVYsR0FBNkQsT0FBQUgsRUFBUyxJQUFBRyxFQUFBRSxFQUFBOEIsRUFBQWhDLEdBQWE4SyxFQUFBWSxFQUFBM0gsT0FBVytHLEtBQUFwSixFQUFBeUosRUFBQW5MLEVBQUFnQyxFQUFBOEksRUFBQVksRUFBQVosR0FBQUgsTUFBQTdJLEdBQUEsT0FBQUosRUFBQXlqQixXQUFBbmxCLEVBQUE2OEIsT0FBQSxPQUFBbjdCLEVBQUFQLElBQUEySixFQUFBcEosRUFBQVAsS0FBQXNLLEVBQUF4SixFQUFBUCxFQUFBK0osRUFBQVgsR0FBQSxPQUFBcEssRUFBQWIsRUFBQTZCLEVBQUFoQixFQUFBa2xCLFFBQUFsa0IsRUFBQWhCLEVBQUFnQixHQUFnSyxPQUF6Q0ksR0FBQTlCLEVBQUErSCxRQUFBLFNBQUFqRyxHQUF5QixPQUFBQyxFQUFBQyxFQUFBRixLQUFnQmpDLEVBQVMsU0FBQWlPLEVBQUE5TCxFQUFBeUosRUFBQUMsRUFBQWYsR0FBb0IsSUFBQTlLLEVBQUEwZSxHQUFBN1MsR0FBWSxtQkFBQTdMLEdBQUFpQixFQUFBLE9BQWtELE9BQVo0SyxFQUFBN0wsRUFBQUUsS0FBQTJMLEtBQVk1SyxFQUFBLE9BQ2hlLFFBQUFkLEVBQUFILEVBQUEsS0FBQWEsRUFBQStLLEVBQUFYLEVBQUFXLEVBQUEsRUFBQS9KLEVBQUEsS0FBQXFKLEVBQUFXLEVBQUExSCxPQUE2QyxPQUFBdEQsSUFBQXFLLEVBQUEyRCxLQUFrQjVELElBQUFDLEVBQUFXLEVBQUExSCxPQUFBLENBQWdCdEQsRUFBQTZDLE1BQUF1SCxHQUFBcEosRUFBQWhCLElBQUEsTUFBQWdCLEVBQUFoQixFQUFBa2xCLFFBQW1DLElBQUExYSxFQUFBRCxFQUFBakosRUFBQXRCLEVBQUFxSyxFQUFBbEssTUFBQThKLEdBQXVCLFVBQUFPLEVBQUEsQ0FBYXhLLE1BQUFnQixHQUFTLE1BQU1JLEdBQUFwQixHQUFBLE9BQUF3SyxFQUFBaWEsV0FBQXBqQixFQUFBQyxFQUFBdEIsR0FBaUMrSyxFQUFBeEosRUFBQWlKLEVBQUFPLEVBQUFYLEdBQVcsT0FBQTlLLEVBQUFILEVBQUFxTCxFQUFBbEwsRUFBQTRsQixRQUFBMWEsRUFBeUJsTCxFQUFBa0wsRUFBSXhLLEVBQUFnQixFQUFJLEdBQUFxSixFQUFBMkQsS0FBQSxPQUFBek8sRUFBQStCLEVBQUF0QixHQUFBYixFQUEwQixVQUFBYSxFQUFBLENBQWEsTUFBS3FLLEVBQUEyRCxLQUFRNUQsSUFBQUMsRUFBQVcsRUFBQTFILE9BQUEsUUFBQStHLEVBQUFGLEVBQUE3SSxFQUFBK0ksRUFBQWxLLE1BQUE4SixNQUFBYyxFQUFBeEosRUFBQThJLEVBQUFVLEVBQUFYLEdBQUEsT0FBQTlLLEVBQUFILEVBQUFrTCxFQUFBL0ssRUFBQTRsQixRQUFBN2EsRUFBQS9LLEVBQUErSyxHQUFvRixPQUFBbEwsRUFBUyxJQUFBYSxFQUFBUixFQUFBOEIsRUFBQXRCLElBQWFxSyxFQUFBMkQsS0FBUTVELElBQUFDLEVBQUFXLEVBQUExSCxPQUFBLFFBQUErRyxFQUFBSSxFQUFBekssRUFBQXNCLEVBQUE4SSxFQUFBQyxFQUFBbEssTUFBQThKLE1BQUE3SSxHQUFBLE9BQUFpSixFQUFBb2EsV0FBQXprQixFQUFBbThCLE9BQUEsT0FBQTl4QixFQUFBNUosSUFBQTJKLEVBQ3haQyxFQUFBNUosS0FBQXNLLEVBQUF4SixFQUFBOEksRUFBQVUsRUFBQVgsR0FBQSxPQUFBOUssRUFBQUgsRUFBQWtMLEVBQUEvSyxFQUFBNGxCLFFBQUE3YSxFQUFBL0ssRUFBQStLLEdBQXlGLE9BQXpDakosR0FBQXBCLEVBQUFxSCxRQUFBLFNBQUFqRyxHQUF5QixPQUFBQyxFQUFBQyxFQUFBRixLQUFnQmpDLEVBQVMsZ0JBQUFpQyxFQUFBNUIsRUFBQStCLEVBQUF5SixHQUF5QixJQUFBZixFQUFBLGlCQUFBMUksR0FBQSxPQUFBQSxLQUFBMkgsT0FBQWdVLElBQUEsT0FBQTNiLEVBQUFkLElBQStEd0osSUFBQTFJLElBQUFtSyxNQUFBcUIsVUFBd0IsSUFBQTVOLEVBQUEsaUJBQUFvQyxHQUFBLE9BQUFBLEVBQW9DLEdBQUFwQyxFQUFBLE9BQUFvQyxFQUFBeUwsVUFBd0IsS0FBQWdRLEdBQUE1YixFQUFBLENBQW1CLElBQVJqQyxFQUFBb0MsRUFBQWQsSUFBUXdKLEVBQUF6SyxFQUFRLE9BQUF5SyxHQUFTLENBQUUsR0FBQUEsRUFBQXhKLE1BQUF0QixFQUFBLFFBQUE4SyxFQUFBZ0ssSUFBQTFTLEVBQUEySCxPQUFBZ1UsR0FBQWpULEVBQUE0ckIsY0FBQXQwQixFQUFBMkgsS0FBQSxDQUE4RDNKLEVBQUE2QixFQUFBNkksRUFBQWliLFVBQWUxbEIsRUFBQThCLEVBQUEySSxFQUFBMUksRUFBQTJILE9BQUFnVSxHQUFBM2IsRUFBQW1LLE1BQUFxQixTQUFBeEwsRUFBQW1LLFFBQThDaUIsSUFBQW12QixHQUFBMTZCLEVBQUE2SSxFQUFBMUksR0FBZ0IvQixFQUFBOFUsT0FBQWxULEVBQVdBLEVBQUE1QixFQUFJLE1BQUE0QixFQUFhN0IsRUFBQTZCLEVBQUE2SSxHQUFPLE1BQU01SSxFQUFBRCxFQUFBNkksR0FBWUEsRUFDcGZBLEVBQUFpYixRQUFVM2pCLEVBQUEySCxPQUFBZ1UsS0FBQTFkLEVBQUFtM0IsR0FBQXAxQixFQUFBbUssTUFBQXFCLFNBQUEzTCxFQUFBZixLQUFBMkssRUFBQXpKLEVBQUFkLE1BQUE2VCxPQUFBbFQsSUFBQTVCLEtBQUF3TCxFQUFBMHJCLEdBQUFuMUIsRUFBQTJILEtBQUEzSCxFQUFBZCxJQUFBYyxFQUFBbUssTUFBQSxLQUFBdEssRUFBQWYsS0FBQTJLLElBQUEyQixJQUFBbXZCLEdBQUExNkIsRUFBQTVCLEVBQUErQixHQUFBeUosRUFBQXNKLE9BQUFsVCxJQUFBNEosR0FBNkksT0FBQUQsRUFBQTNKLEdBQVksS0FBQTZiLEdBQUE3YixFQUFBLENBQVcsSUFBQTZJLEVBQUExSSxFQUFBZCxJQUFZLE9BQUFqQixHQUFTLENBQUUsR0FBQUEsRUFBQWlCLE1BQUF3SixFQUFBLFFBQUF6SyxFQUFBeVUsS0FBQXpVLEVBQUErVCxVQUFBcVgsZ0JBQUFycEIsRUFBQXFwQixlQUFBcHJCLEVBQUErVCxVQUFBeWpCLGlCQUFBejFCLEVBQUF5MUIsZUFBQSxDQUF1SHozQixFQUFBNkIsRUFBQTVCLEVBQUEwbEIsVUFBZTFsQixFQUFBOEIsRUFBQTlCLEVBQUErQixFQUFBd0wsVUFBQSxLQUF3QnVILE9BQUFsVCxFQUFXQSxFQUFBNUIsRUFBSSxNQUFBNEIsRUFBYTdCLEVBQUE2QixFQUFBNUIsR0FBTyxNQUFNNkIsRUFBQUQsRUFBQTVCLEdBQVlBLElBQUEwbEIsU0FBWTFsQixFQUFBczNCLEdBQUF2MUIsRUFBQUgsRUFBQWYsS0FBQTJLLElBQWlCc0osT0FBQWxULEVBQVdBLEVBQUE1QixFQUFJLE9BQUF1TCxFQUFBM0osR0FBWSxvQkFBQUcsR0FBQSxpQkFBQUEsRUFBQSxPQUFBQSxFQUNoZCxHQUFBQSxFQUFBLE9BQUEvQixHQUFBLElBQUFBLEVBQUF5VSxLQUFBMVUsRUFBQTZCLEVBQUE1QixFQUFBMGxCLFVBQUExbEIsRUFBQThCLEVBQUE5QixFQUFBK0IsSUFBQStTLE9BQUFsVCxJQUFBNUIsSUFBQUQsRUFBQTZCLEVBQUE1QixNQUFBcTNCLEdBQUF0MUIsRUFBQUgsRUFBQWYsS0FBQTJLLElBQUFzSixPQUFBbFQsSUFBQTVCLEdBQUF1TCxFQUFBM0osR0FBa0gsR0FBQXk2QixHQUFBdDZCLEdBQUEsT0FBQW9KLEVBQUF2SixFQUFBNUIsRUFBQStCLEVBQUF5SixHQUEyQixHQUFBNlMsR0FBQXRjLEdBQUEsT0FBQTZMLEVBQUFoTSxFQUFBNUIsRUFBQStCLEVBQUF5SixHQUFzQyxHQUFYN0wsR0FBQTY4QixHQUFBNTZCLEVBQUFHLFFBQVcsSUFBQUEsSUFBQTBJLEVBQUEsT0FBQTdJLEVBQUE2UyxLQUE0QyxjQUFBN1QsRUFBQSxPQUFBNEssRUFBQTVKLEVBQUE4SCxNQUFBTCxhQUFBbUMsRUFBQXZMLE1BQUEsYUFBbUUsT0FBQUYsRUFBQTZCLEVBQUE1QixJQUFlLElBQUE0OEIsR0FBQUgsSUFBQSxHQUFBSSxHQUFBSixJQUFBLEdBQUFLLEdBQUEsS0FBQUMsR0FBQSxLQUFBQyxJQUFBLEVBQ2pULFNBQUFDLEdBQUFyN0IsRUFBQUMsR0FBaUIsSUFBQTlCLEVBQUFtTixHQUFBLGVBQXVCbk4sRUFBQXMyQixZQUFBLFVBQXdCdDJCLEVBQUEySixLQUFBLFVBQWlCM0osRUFBQWdVLFVBQUFsUyxFQUFjOUIsRUFBQStVLE9BQUFsVCxFQUFXN0IsRUFBQXVsQixVQUFBLEVBQWMsT0FBQTFqQixFQUFBKzBCLFlBQUEvMEIsRUFBQSswQixXQUFBRSxXQUFBOTJCLEVBQUE2QixFQUFBKzBCLFdBQUE1MkIsR0FBQTZCLEVBQUFnMUIsWUFBQWgxQixFQUFBKzBCLFdBQUE1MkIsRUFBNEYsU0FBQW05QixHQUFBdDdCLEVBQUFDLEdBQWlCLE9BQUFELEVBQUE2UyxLQUFjLFdBQUExVSxFQUFBNkIsRUFBQThILEtBQXdGLGVBQXBFN0gsRUFBQSxJQUFBQSxFQUFBMmEsVUFBQXpjLEVBQUEyVixnQkFBQTdULEVBQUF1YSxTQUFBMUcsY0FBQSxLQUFBN1QsS0FBb0VELEVBQUFtUyxVQUFBbFMsR0FBQSxHQUFzQyxzQkFBQUEsRUFBQSxLQUFBRCxFQUFBMDBCLGNBQUEsSUFBQXowQixFQUFBMmEsU0FBQSxLQUFBM2EsS0FBQUQsRUFBQW1TLFVBQUFsUyxHQUFBLEdBQTBGLGtCQUMzYyxTQUFBczdCLEdBQUF2N0IsR0FBZSxHQUFBbzdCLEdBQUEsQ0FBTyxJQUFBbjdCLEVBQUFrN0IsR0FBUyxHQUFBbDdCLEVBQUEsQ0FBTSxJQUFBOUIsRUFBQThCLEVBQVEsSUFBQXE3QixHQUFBdDdCLEVBQUFDLEdBQUEsQ0FBcUIsS0FBUkEsRUFBQWt6QixHQUFBaDFCLE1BQVFtOUIsR0FBQXQ3QixFQUFBQyxHQUEyQyxPQUExQkQsRUFBQTBqQixXQUFBLEVBQWUwWCxJQUFBLE9BQU1GLEdBQUFsN0IsR0FBWXE3QixHQUFBSCxHQUFBLzhCLEdBQVMrOEIsR0FBQWw3QixFQUFLbTdCLEdBQUEvSCxHQUFBbnpCLFFBQVNELEVBQUEwakIsV0FBQSxFQUFBMFgsSUFBQSxFQUFBRixHQUFBbDdCLEdBQWdDLFNBQUF3N0IsR0FBQXg3QixHQUFlLElBQUFBLElBQUFrVCxPQUFlLE9BQUFsVCxHQUFBLElBQUFBLEVBQUE2UyxLQUFBLElBQUE3UyxFQUFBNlMsS0FBK0I3UyxJQUFBa1QsT0FBWWdvQixHQUFBbDdCLEVBQUssU0FBQXk3QixHQUFBejdCLEdBQWUsR0FBQUEsSUFBQWs3QixHQUFBLFNBQW1CLElBQUFFLEdBQUEsT0FBQUksR0FBQXg3QixHQUFBbzdCLElBQUEsS0FBNkIsSUFBQW43QixFQUFBRCxFQUFBOEgsS0FBYSxPQUFBOUgsRUFBQTZTLEtBQUEsU0FBQTVTLEdBQUEsU0FBQUEsSUFBQTR5QixHQUFBNXlCLEVBQUFELEVBQUE4MEIsZUFBQSxJQUFBNzBCLEVBQUFrN0IsR0FBc0VsN0IsR0FBRW83QixHQUFBcjdCLEVBQUFDLEtBQUFrekIsR0FBQWx6QixHQUFrRCxPQUFqQ3U3QixHQUFBeDdCLEdBQU1tN0IsR0FBQUQsR0FBQS9ILEdBQUFuekIsRUFBQW1TLFdBQUEsTUFBMkIsRUFBUyxTQUFBdXBCLEtBQWNQLEdBQUFELEdBQUEsS0FBV0UsSUFBQSxFQUFNLElBQUFPLEdBQUFqZ0IsR0FBQXRNLGtCQUN2ZSxTQUFBckQsR0FBQS9MLEVBQUFDLEVBQUE5QixFQUFBQyxHQUFvQjZCLEVBQUE0akIsTUFBQSxPQUFBN2pCLEVBQUFpN0IsR0FBQWg3QixFQUFBLEtBQUE5QixFQUFBQyxHQUFBNDhCLEdBQUEvNkIsRUFBQUQsRUFBQTZqQixNQUFBMWxCLEVBQUFDLEdBQWtELFNBQUF3OUIsR0FBQTU3QixFQUFBQyxFQUFBOUIsRUFBQUMsRUFBQThCLEdBQXVCL0IsSUFBQWlRLE9BQVcsSUFBQWpPLEVBQUFGLEVBQUFzTCxJQUF1RCxPQUEzQzhzQixHQUFBcDRCLEdBQVE3QixFQUFBRCxFQUFBQyxFQUFBK0IsR0FBU0YsRUFBQXlqQixXQUFBLEVBQWUzWCxHQUFBL0wsRUFBQUMsRUFBQTdCLEVBQUE4QixHQUFXRCxFQUFBNGpCLE1BQy9KLFNBQUFnWSxHQUFBNzdCLEVBQUFDLEVBQUE5QixFQUFBQyxFQUFBOEIsRUFBQUMsR0FBeUIsVUFBQUgsRUFBQSxDQUFhLElBQUEySixFQUFBeEwsRUFBQTJKLEtBQWEseUJBQUE2QixHQUFBeXJCLEdBQUF6ckIsU0FBQSxJQUFBQSxFQUFBbkMsY0FBQSxPQUFBckosRUFBQXVRLFVBQXFIMU8sRUFBQXMxQixHQUFBbjNCLEVBQUEySixLQUFBLEtBQUExSixFQUFBLEtBQUE2QixFQUFBaEIsS0FBQWtCLElBQWtDb0wsSUFBQXRMLEVBQUFzTCxJQUFZdkwsRUFBQWtULE9BQUFqVCxFQUFXQSxFQUFBNGpCLE1BQUE3akIsSUFBOUtDLEVBQUE0UyxJQUFBLEdBQUE1UyxFQUFBNkgsS0FBQTZCLEVBQUFteUIsR0FBQTk3QixFQUFBQyxFQUFBMEosRUFBQXZMLEVBQUE4QixFQUFBQyxJQUF5TSxPQUFWd0osRUFBQTNKLEVBQUE2akIsTUFBVTNqQixFQUFBQyxJQUFBRCxFQUFBeUosRUFBQW1yQixlQUFBMzJCLEVBQUEsUUFBQUEsSUFBQXVRLFNBQUF2USxFQUFBcWxCLElBQUF0akIsRUFBQTlCLElBQUE0QixFQUFBdUwsTUFBQXRMLEVBQUFzTCxLQUFBd3dCLEdBQUEvN0IsRUFBQUMsRUFBQUUsSUFBK0ZGLEVBQUF5akIsV0FBQSxHQUFlMWpCLEVBQUFxMUIsR0FBQTFyQixFQUFBdkwsSUFBWW1OLElBQUF0TCxFQUFBc0wsSUFBWXZMLEVBQUFrVCxPQUFBalQsRUFBV0EsRUFBQTRqQixNQUFBN2pCLEdBQzdZLFNBQUE4N0IsR0FBQTk3QixFQUFBQyxFQUFBOUIsRUFBQUMsRUFBQThCLEVBQUFDLEdBQXlCLGNBQUFILEdBQUFFLEVBQUFDLEdBQUFxakIsR0FBQXhqQixFQUFBODBCLGNBQUExMkIsSUFBQTRCLEVBQUF1TCxNQUFBdEwsRUFBQXNMLElBQUF3d0IsR0FBQS83QixFQUFBQyxFQUFBRSxHQUFBNjdCLEdBQUFoOEIsRUFBQUMsRUFBQTlCLEVBQUFDLEVBQUErQixHQUFtRixTQUFBODdCLEdBQUFqOEIsRUFBQUMsR0FBaUIsSUFBQTlCLEVBQUE4QixFQUFBc0wsS0FBWSxPQUFBdkwsR0FBQSxPQUFBN0IsR0FBQSxPQUFBNkIsS0FBQXVMLE1BQUFwTixLQUFBOEIsRUFBQXlqQixXQUFBLEtBQTRELFNBQUFzWSxHQUFBaDhCLEVBQUFDLEVBQUE5QixFQUFBQyxFQUFBOEIsR0FBdUIsSUFBQUMsRUFBQWtMLEdBQUFsTixHQUFBczFCLEdBQUExb0IsR0FBQUksUUFBNkUsT0FBckRoTCxFQUFBdXpCLEdBQUF6ekIsRUFBQUUsR0FBVWs0QixHQUFBcDRCLEdBQVE5QixJQUFBQyxFQUFBK0IsR0FBU0YsRUFBQXlqQixXQUFBLEVBQWUzWCxHQUFBL0wsRUFBQUMsRUFBQTlCLEVBQUErQixHQUFXRCxFQUFBNGpCLE1BQ3pTLFNBQUFxWSxHQUFBbDhCLEVBQUFDLEVBQUE5QixFQUFBQyxFQUFBOEIsR0FBdUIsR0FBQW1MLEdBQUFsTixHQUFBLENBQVMsSUFBQWdDLEdBQUEsRUFBUyt6QixHQUFBajBCLFFBQU1FLEdBQUEsRUFBa0IsR0FBUms0QixHQUFBcDRCLEdBQVEsT0FBQUEsRUFBQWtTLFVBQUEsT0FBQW5TLE1BQUFxakIsVUFBQSxLQUFBcGpCLEVBQUFvakIsVUFBQSxLQUFBcGpCLEVBQUF5akIsV0FBQSxHQUFBbVcsR0FBQTU1QixFQUFBOUIsRUFBQUMsR0FBQWc4QixHQUFBbjZCLEVBQUE5QixFQUFBQyxFQUFBOEIsR0FBQTlCLEdBQUEsT0FBZ0gsVUFBQTRCLEVBQUEsQ0FBa0IsSUFBQTJKLEVBQUExSixFQUFBa1MsVUFBQXZJLEVBQUEzSixFQUFBNjBCLGNBQW9DbnJCLEVBQUFXLE1BQUFWLEVBQVUsSUFBQWYsRUFBQWMsRUFBQVksUUFBQXhNLEVBQUFJLEVBQUEyN0IsWUFBZ0MsaUJBQUEvN0IsR0FBQSxPQUFBQSxJQUFBbTdCLEdBQUE5dEIsa0JBQUEydUIsWUFBQWg4QixLQUFBMjFCLEdBQUF6ekIsRUFBQWxDLEVBQUFzTixHQUFBbE4sR0FBQXMxQixHQUFBMW9CLEdBQUFJLFNBQW9HLElBQUFqTixFQUFBQyxFQUFBd0oseUJBQUFvQixFQUFBLG1CQUFBN0ssR0FBQSxtQkFBQXlMLEVBQUEwd0Isd0JBQXdHdHhCLEdBQUEsbUJBQUFZLEVBQUF3d0Isa0NBQzdkLG1CQUFBeHdCLEVBQUF1d0IsNEJBQUF0d0IsSUFBQXhMLEdBQUF5SyxJQUFBOUssSUFBQWs4QixHQUFBaDZCLEVBQUEwSixFQUFBdkwsRUFBQUwsR0FBNkV5NEIsSUFBQSxFQUFNLElBQUFydEIsRUFBQWxKLEVBQUEyMEIsY0FBc0IvckIsRUFBQWMsRUFBQXF3QixNQUFBN3dCLEVBQVksSUFBQUUsRUFBQXBKLEVBQUE0MEIsWUFBb0IsT0FBQXhyQixJQUFBcXVCLEdBQUF6M0IsRUFBQW9KLEVBQUFqTCxFQUFBdUwsRUFBQXpKLEdBQUEySSxFQUFBNUksRUFBQTIwQixlQUE0Q2hyQixJQUFBeEwsR0FBQStLLElBQUFOLEdBQUFxQyxHQUFBQyxTQUFBcXJCLElBQUEsbUJBQUF0NEIsSUFBQWs3QixHQUFBbjVCLEVBQUE5QixFQUFBRCxFQUFBRSxHQUFBeUssRUFBQTVJLEVBQUEyMEIsZ0JBQUFockIsRUFBQTRzQixJQUFBbUQsR0FBQTE1QixFQUFBOUIsRUFBQXlMLEVBQUF4TCxFQUFBK0ssRUFBQU4sRUFBQTlLLEtBQUFnTCxHQUFBLG1CQUFBWSxFQUFBMndCLDJCQUFBLG1CQUFBM3dCLEVBQUE0d0IscUJBQUEsbUJBQUE1d0IsRUFBQTR3QixvQkFBQTV3QixFQUFBNHdCLHFCQUFBLG1CQUFBNXdCLEVBQUEyd0IsMkJBQ3JMM3dCLEVBQUEyd0IsNkJBQUEsbUJBQUEzd0IsRUFBQTZ3QixvQkFBQXY2QixFQUFBeWpCLFdBQUEsd0JBQUEvWixFQUFBNndCLG9CQUFBdjZCLEVBQUF5akIsV0FBQSxHQUFBempCLEVBQUE2MEIsY0FBQTEyQixFQUFBNkIsRUFBQTIwQixjQUFBL3JCLEdBQUFjLEVBQUFXLE1BQUFsTSxFQUFBdUwsRUFBQXF3QixNQUFBbnhCLEVBQUFjLEVBQUFZLFFBQUF4TSxFQUFBSyxFQUFBd0wsSUFBQSxtQkFBQUQsRUFBQTZ3QixvQkFBQXY2QixFQUFBeWpCLFdBQUEsR0FBQXRsQixHQUFBLFFBQWdTdUwsRUFBQTFKLEVBQUFrUyxVQUFBdkksRUFBQTNKLEVBQUE2MEIsY0FBQW5yQixFQUFBVyxNQUFBckssRUFBQTZILE9BQUE3SCxFQUFBdzBCLFlBQUE3cUIsRUFBQWtDLEdBQUE3TCxFQUFBNkgsS0FBQThCLEdBQUFmLEVBQUFjLEVBQUFZLFFBQUEsaUJBQUF4TSxFQUFBSSxFQUFBMjdCLGNBQUEsT0FBQS83QixJQUFBbTdCLEdBQUE5dEIsa0JBQUEydUIsWUFBQWg4QixLQUFBMjFCLEdBQUF6ekIsRUFBQWxDLEVBQUFzTixHQUFBbE4sR0FBQXMxQixHQUFBMW9CLEdBQUFJLFVBQ2hTcEMsRUFBQSxtQkFEZ1M3SyxFQUFBQyxFQUFBd0osMkJBQ2hTLG1CQUFBZ0MsRUFBQTB3QiwwQkFBQSxtQkFBQTF3QixFQUFBd3dCLGtDQUFBLG1CQUFBeHdCLEVBQUF1d0IsNEJBQUF0d0IsSUFBQXhMLEdBQUF5SyxJQUFBOUssSUFBQWs4QixHQUFBaDZCLEVBQUEwSixFQUFBdkwsRUFBQUwsR0FBQXk0QixJQUFBLEVBQUEzdEIsRUFBQTVJLEVBQUEyMEIsY0FBQXpyQixFQUFBUSxFQUFBcXdCLE1BQUFueEIsRUFBQSxRQUFBUSxFQUFBcEosRUFBQTQwQixlQUFBNkMsR0FBQXozQixFQUFBb0osRUFBQWpMLEVBQUF1TCxFQUFBekosR0FBQWlKLEVBQUFsSixFQUFBMjBCLGVBQUFockIsSUFBQXhMLEdBQUF5SyxJQUFBTSxHQUFBK0IsR0FBQUMsU0FBQXFyQixJQUFBLG1CQUFBdDRCLElBQUFrN0IsR0FBQW41QixFQUFBOUIsRUFBQUQsRUFBQUUsR0FBQStLLEVBQUFsSixFQUFBMjBCLGdCQUFBMTJCLEVBQUFzNEIsSUFBQW1ELEdBQUExNUIsRUFBQTlCLEVBQUF5TCxFQUFBeEwsRUFBQXlLLEVBQUFNLEVBQUFwTCxLQUFBZ0wsR0FBQSxtQkFBQVksRUFBQXd5Qiw0QkFBQSxtQkFBQXh5QixFQUFBeXlCLHNCQUNBLG1CQUFBenlCLEVBQUF5eUIscUJBQUF6eUIsRUFBQXl5QixvQkFBQWgrQixFQUFBK0ssRUFBQXBMLEdBQUEsbUJBQUE0TCxFQUFBd3lCLDRCQUFBeHlCLEVBQUF3eUIsMkJBQUEvOUIsRUFBQStLLEVBQUFwTCxJQUFBLG1CQUFBNEwsRUFBQTB5QixxQkFBQXA4QixFQUFBeWpCLFdBQUEsc0JBQUEvWixFQUFBMHdCLDBCQUFBcDZCLEVBQUF5akIsV0FBQSwwQkFBQS9aLEVBQUEweUIsb0JBQUF6eUIsSUFBQTVKLEVBQUE4MEIsZUFBQWpzQixJQUFBN0ksRUFBQTQwQixnQkFBQTMwQixFQUFBeWpCLFdBQUEsc0JBQUEvWixFQUFBMHdCLHlCQUFBendCLElBQUE1SixFQUFBODBCLGVBQUFqc0IsSUFBQTdJLEVBQUE0MEIsZ0JBQUEzMEIsRUFBQXlqQixXQUFBLEtBQUF6akIsRUFBQTYwQixjQUNBMTJCLEVBQUE2QixFQUFBMjBCLGNBQUF6ckIsR0FBQVEsRUFBQVcsTUFBQWxNLEVBQUF1TCxFQUFBcXdCLE1BQUE3d0IsRUFBQVEsRUFBQVksUUFBQXhNLEVBQUFLLEVBQUFGLElBQUEsbUJBQUF5TCxFQUFBMHlCLG9CQUFBenlCLElBQUE1SixFQUFBODBCLGVBQUFqc0IsSUFBQTdJLEVBQUE0MEIsZ0JBQUEzMEIsRUFBQXlqQixXQUFBLHNCQUFBL1osRUFBQTB3Qix5QkFBQXp3QixJQUFBNUosRUFBQTgwQixlQUFBanNCLElBQUE3SSxFQUFBNDBCLGdCQUFBMzBCLEVBQUF5akIsV0FBQSxLQUFBdGxCLEdBQUEsR0FBa1IsT0FBQWsrQixHQUFBdDhCLEVBQUFDLEVBQUE5QixFQUFBQyxFQUFBK0IsRUFBQUQsR0FDbFIsU0FBQW84QixHQUFBdDhCLEVBQUFDLEVBQUE5QixFQUFBQyxFQUFBOEIsRUFBQUMsR0FBeUI4N0IsR0FBQWo4QixFQUFBQyxHQUFRLElBQUEwSixFQUFBLE9BQUExSixFQUFBeWpCLFdBQTJCLElBQUF0bEIsSUFBQXVMLEVBQUEsT0FBQXpKLEdBQUFrMEIsR0FBQW4wQixFQUFBOUIsR0FBQSxHQUFBNDlCLEdBQUEvN0IsRUFBQUMsRUFBQUUsR0FBeUMvQixFQUFBNkIsRUFBQWtTLFVBQWN3cEIsR0FBQXh3QixRQUFBbEwsRUFBYSxJQUFBMkosRUFBQUQsR0FBQSxtQkFBQXhMLEVBQUFvK0IseUJBQUEsS0FBQW4rQixFQUFBZ1EsU0FBME0sT0FBbEluTyxFQUFBeWpCLFdBQUEsRUFBZSxPQUFBMWpCLEdBQUEySixHQUFBMUosRUFBQTRqQixNQUFBbVgsR0FBQS82QixFQUFBRCxFQUFBNmpCLE1BQUEsS0FBQTFqQixHQUFBRixFQUFBNGpCLE1BQUFtWCxHQUFBLzZCLEVBQUEsS0FBQTJKLEVBQUF6SixJQUFBNEwsR0FBQS9MLEVBQUFDLEVBQUEySixFQUFBekosR0FBNkVGLEVBQUEyMEIsY0FBQXgyQixFQUFBNDdCLE1BQXdCOTVCLEdBQUFrMEIsR0FBQW4wQixFQUFBOUIsR0FBQSxHQUFjOEIsRUFBQTRqQixNQUFlLFNBQUEyWSxHQUFBeDhCLEdBQWUsSUFBQUMsRUFBQUQsRUFBQW1TLFVBQWtCbFMsRUFBQXc4QixlQUFBMUksR0FBQS96QixFQUFBQyxFQUFBdzhCLGVBQUF4OEIsRUFBQXc4QixpQkFBQXg4QixFQUFBc0ssU0FBQXRLLEVBQUFzSyxTQUFBd3BCLEdBQUEvekIsRUFBQUMsRUFBQXNLLFNBQUEsR0FBbUdxdUIsR0FBQTU0QixFQUFBQyxFQUFBdXBCLGVBQzdkLFNBQUFrVCxHQUFBMThCLEVBQUFDLEVBQUE5QixHQUFtQixJQUFBQyxFQUFBNkIsRUFBQWhCLEtBQUFpQixFQUFBRCxFQUFBeTBCLGFBQUF2MEIsRUFBQUYsRUFBQTIwQixjQUFnRCxVQUFBMzBCLEVBQUF5akIsV0FBQSxDQUF5QnZqQixFQUFBLEtBQU8sSUFBQXdKLEdBQUEsT0FBU3hKLEVBQUEsQ0FBUXc4QixXQUFBLE9BQUF4OEIsSUFBQXc4QixXQUFBLEdBQW1DaHpCLEdBQUEsRUFBQTFKLEVBQUF5akIsWUFBQSxHQUNnUyxPQUR6USxPQUFBMWpCLEVBQUEySixLQUFBekosRUFBQTA4QixTQUFBMThCLEVBQUFxMUIsR0FBQSxLQUFBbjNCLEVBQUEsY0FBQTZCLEVBQUFoQixRQUFBaUIsRUFBQTJqQixNQUFBLE9BQUE1akIsRUFBQTIwQixjQUFBMzBCLEVBQUE0akIsWUFBQTVqQixFQUFBNGpCLE9BQUF6bEIsRUFBQW0zQixHQUFBNXJCLEVBQUF2TCxFQUFBRCxFQUFBLE1BQUErQixFQUFBNGpCLFFBQUExbEIsR0FBQUQsRUFBQStCLEdBQUFnVCxPQUFBOVUsRUFBQThVLE9BQUFqVCxHQUFBOUIsRUFBQUMsRUFBQTY4QixHQUFBaDdCLEVBQUEsS0FBQUMsRUFBQXlMLFNBQUF4TixHQUFBLE9BQUE2QixFQUFBNDBCLGVBQUE1MEIsR0FBQTVCLEVBQUE0QixFQUFBNmpCLE9BQUFDLFFBQUFuYSxHQUFBeEwsRUFBQStCLEVBQUEwOEIsU0FBQTE4QixFQUFBbTFCLEdBQUFqM0IsSUFBQXMyQixjQUFBLE1BQUF6MEIsRUFBQWhCLFNBQUEwSyxFQUFBLE9BQUExSixFQUFBMjBCLGNBQzlLMzBCLEVBQUE0akIsWUFBQTVqQixFQUFBNGpCLFNBQUF6bEIsRUFBQXlsQixRQUFBM2pCLEVBQUEyakIsTUFBQWxhLElBQUF2TCxFQUFBOEIsRUFBQTRqQixRQUFBdVIsR0FBQXIxQixFQUFBN0IsRUFBQTZCLEVBQUFtMUIsZ0JBQUFoM0IsRUFBQStCLElBQUFnMUIsb0JBQUEsRUFBQS8yQixFQUFBK1UsT0FBQTlVLEVBQUE4VSxPQUFBalQsR0FBQTlCLEVBQUFDLEVBQUE0OEIsR0FBQS82QixFQUFBN0IsRUFBQXlsQixNQUFBM2pCLEVBQUF5TCxTQUFBeE4sS0FBQTZCLElBQUE2akIsTUFBQWxhLEtBQUF6SixFQUFBMDhCLFVBQUExOEIsRUFBQXExQixHQUFBLEtBQUFuM0IsRUFBQSxTQUFBeWxCLE1BQUE3akIsRUFBQSxNQUFBQyxFQUFBaEIsUUFBQWlCLEVBQUEyakIsTUFBQSxPQUFBNWpCLEVBQUEyMEIsY0FBQTMwQixFQUFBNGpCLFlBQUE1akIsRUFBQTRqQixRQUFBemxCLEVBQUE4QixFQUFBNGpCLFFBQUF5UixHQUFBNXJCLEVBQUF2TCxFQUFBRCxFQUFBLE9BQUF1bEIsV0FBQSxFQUFBdmxCLEVBQUErQixJQUFBZzFCLG9CQUFBLEVBQUEvMkIsRUFBQStVLE9BQUE5VSxFQUFBOFUsT0FBQWpULEdBQUE3QixFQUFBRCxFQUFBNjhCLEdBQUEvNkIsRUFBQUQsRUFBQUUsRUFBQXlMLFNBQUF4TixJQUEyWjhCLEVBQUEyMEIsY0FBQXowQixFQUFrQkYsRUFBQTRqQixNQUFBMWxCLEVBQVVDLEVBQ3ZiLFNBQUEyOUIsR0FBQS83QixFQUFBQyxFQUFBOUIsR0FBaUYsR0FBOUQsT0FBQTZCLElBQUFDLEVBQUEwMEIsdUJBQUEzMEIsRUFBQTIwQix3QkFBOEQxMEIsRUFBQWkxQixvQkFBQS8yQixFQUFBLFlBQW1GLEdBQTVDLE9BQUE2QixHQUFBQyxFQUFBNGpCLFFBQUE3akIsRUFBQTZqQixPQUFBN2tCLEVBQUEsT0FBNEMsT0FBQWlCLEVBQUE0akIsTUFBQSxDQUErRSxJQUFsRDFsQixFQUFBazNCLEdBQVZyMUIsRUFBQUMsRUFBQTRqQixNQUFVN2pCLEVBQUEwMEIsYUFBQTEwQixFQUFBbTFCLGdCQUF3Q2wxQixFQUFBNGpCLE1BQUExbEIsRUFBVUEsRUFBQStVLE9BQUFqVCxFQUFlLE9BQUFELEVBQUE4akIsU0FBaUI5akIsSUFBQThqQixTQUFBM2xCLElBQUEybEIsUUFBQXVSLEdBQUFyMUIsSUFBQTAwQixhQUFBMTBCLEVBQUFtMUIsaUJBQUFqaUIsT0FBQWpULEVBQTBFOUIsRUFBQTJsQixRQUFBLEtBQWUsT0FBQTdqQixFQUFBNGpCLE1BQzVXLFNBQUFnWixHQUFBNzhCLEVBQUFDLEVBQUE5QixHQUFtQixJQUFBQyxFQUFBNkIsRUFBQWsxQixlQUF1QixVQUFBbjFCLEtBQUE4MEIsZ0JBQUE3MEIsRUFBQXkwQixlQUFBeHBCLEdBQUFDLFNBQUEvTSxFQUFBRCxFQUFBLENBQWdFLE9BQUE4QixFQUFBNFMsS0FBYyxPQUFBMnBCLEdBQUF2OEIsR0FBYXk3QixLQUFLLE1BQU0sT0FBQTFDLEdBQUEvNEIsR0FBYSxNQUFNLE9BQUFvTCxHQUFBcEwsRUFBQTZILE9BQUFvc0IsR0FBQWowQixHQUF3QixNQUFNLE9BQUEyNEIsR0FBQTM0QixJQUFBa1MsVUFBQXFYLGVBQXVDLE1BQU0sUUFBQTJPLEdBQUFsNEIsSUFBQTYwQixjQUFBLzFCLE9BQW9DLE1BQU0sa0JBQUFrQixFQUFBMjBCLGNBQWlFLFlBQTlCeDJCLEVBQUE2QixFQUFBNGpCLE1BQUFxUixzQkFBOEI5MkIsR0FBQUQsRUFBQXUrQixHQUFBMThCLEVBQUFDLEVBQUE5QixHQUE0QyxRQUFaOEIsRUFBQTg3QixHQUFBLzdCLEVBQUFDLEVBQUE5QixJQUFZOEIsRUFBQTZqQixRQUFBLEtBQWdDLE9BQUFpWSxHQUFBLzdCLEVBQUFDLEVBQUE5QixHQUFvQyxPQUFuQjhCLEVBQUFrMUIsZUFBQSxFQUFtQmwxQixFQUFBNFMsS0FBYyxPQUFBelUsRUFBQTZCLEVBQUF3MEIsWUFBdUIsT0FDOWV6MEIsTUFBQXFqQixVQUFBLEtBQUFwakIsRUFBQW9qQixVQUFBLEtBQUFwakIsRUFBQXlqQixXQUFBLEdBQXNEMWpCLEVBQUFDLEVBQUF5MEIsYUFBaUIsSUFBQXgwQixFQUFBd3pCLEdBQUF6ekIsRUFBQThLLEdBQUFJLFNBQXNELEdBQWhDa3RCLEdBQUFwNEIsR0FBUUMsRUFBQTlCLEVBQUE0QixFQUFBRSxHQUFTRCxFQUFBeWpCLFdBQUEsRUFBZSxpQkFBQXhqQixHQUFBLE9BQUFBLEdBQUEsbUJBQUFBLEVBQUFrTyxhQUFBLElBQUFsTyxFQUFBMEwsU0FBQSxDQUE2RixHQUFSM0wsRUFBQTRTLElBQUEsRUFBUXhILEdBQUFqTixHQUFBLENBQVMsSUFBQStCLEdBQUEsRUFBUyt6QixHQUFBajBCLFFBQU1FLEdBQUEsRUFBVUYsRUFBQTIwQixjQUFBLE9BQUExMEIsRUFBQTg1QixZQUFBLElBQUE5NUIsRUFBQTg1QixNQUFBOTVCLEVBQUE4NUIsTUFBQSxLQUE4RCxJQUFBcndCLEVBQUF2TCxFQUFBdUoseUJBQWlDLG1CQUFBZ0MsR0FBQXl2QixHQUFBbjVCLEVBQUE3QixFQUFBdUwsRUFBQTNKLEdBQW1DRSxFQUFBdUssUUFBQTR1QixHQUFhcDVCLEVBQUFrUyxVQUFBalMsRUFBY0EsRUFBQW81QixvQkFBQXI1QixFQUF3Qm02QixHQUFBbjZCLEVBQUE3QixFQUFBNEIsRUFBQTdCLEdBQVk4QixFQUFBcThCLEdBQUEsS0FBQXI4QixFQUFBN0IsR0FBQSxFQUFBK0IsRUFBQWhDLFFBQXNCOEIsRUFBQTRTLElBQUEsRUFBQTlHLEdBQUEsS0FBQTlMLEVBQUFDLEVBQUEvQixHQUFBOEIsSUFBQTRqQixNQUNuZCxPQUFBNWpCLEVBQVMsUUFBdUosT0FBdkpDLEVBQUFELEVBQUF3MEIsWUFBd0IsT0FBQXowQixNQUFBcWpCLFVBQUEsS0FBQXBqQixFQUFBb2pCLFVBQUEsS0FBQXBqQixFQUFBeWpCLFdBQUEsR0FBNkR2akIsRUFBQUYsRUFBQXkwQixhQUFpQjEwQixFQXJDSyxTQUFBQSxHQUFlLElBQUFDLEVBQUFELEVBQUF3TyxRQUFnQixPQUFBeE8sRUFBQXVPLFNBQWtCLGNBQUF0TyxFQUFnQixPQUFlLGFBQUFBLEVBQWUsY0FBQUQsRUFBQXVPLFFBQUEsR0FBQXRPLEtBQUFELEVBQUFzTyxVQUFBd3VCLEtBQUEsU0FBQTc4QixHQUE2RCxJQUFBRCxFQUFBdU8sVUFBQXRPLElBQUF1UCxRQUFBeFAsRUFBQXVPLFFBQUEsRUFBQXZPLEVBQUF3TyxRQUFBdk8sSUFBcUQsU0FBQUEsR0FBYSxJQUFBRCxFQUFBdU8sVUFBQXZPLEVBQUF1TyxRQUFBLEVBQUF2TyxFQUFBd08sUUFBQXZPLEtBQXlDRCxFQUFBd08sUUFBQXZPLEtBcUM1UTg4QixDQUFBNzhCLEdBQVFELEVBQUE2SCxLQUFBOUgsRUFBU0UsRUFBQUQsRUFBQTRTLElBeERsRSxTQUFBN1MsR0FBZSxzQkFBQUEsRUFBQSxPQUFBbzFCLEdBQUFwMUIsR0FBQSxJQUEwQyxTQUFBQSxFQUFBLENBQXNDLElBQWJBLElBQUE0TCxZQUFhd1EsR0FBQSxVQUFvQixHQUFBcGMsSUFBQXNjLEdBQUEsVUFBb0IsU0F3RHJFMGdCLENBQUFoOUIsR0FBY0csRUFBQTJMLEdBQUE5TCxFQUFBRyxHQUFTd0osT0FBQSxFQUFTekosR0FBVSxPQUFBeUosRUFBQXF5QixHQUFBLEtBQUEvN0IsRUFBQUQsRUFBQUcsRUFBQWhDLEdBQTBCLE1BQU0sT0FBQXdMLEVBQUF1eUIsR0FBQSxLQUFBajhCLEVBQUFELEVBQUFHLEVBQUFoQyxHQUEwQixNQUFNLFFBQUF3TCxFQUFBaXlCLEdBQUEsS0FBQTM3QixFQUFBRCxFQUFBRyxFQUFBaEMsR0FBMkIsTUFBTSxRQUFBd0wsRUFBQWt5QixHQUFBLEtBQUE1N0IsRUFBQUQsRUFBQThMLEdBQUE5TCxFQUFBOEgsS0FBQTNILEdBQUEvQixFQUFBRCxHQUF1QyxNQUFNLFFBQUFhLEVBQUEsTUFBQWdCLEdBQW1CLE9BQUEySixFQUFTLGNBQUF2TCxFQUFBNkIsRUFBQTZILEtBQUE1SCxFQUFBRCxFQUFBeTBCLGFBQUFzSCxHQUFBaDhCLEVBQUFDLEVBQUE3QixFQUFBOEIsRUFBQUQsRUFBQXcwQixjQUFBcjJCLEVBQUE4QixFQUFBNEwsR0FBQTFOLEVBQUE4QixHQUFBL0IsR0FBbUYsY0FBQUMsRUFBQTZCLEVBQUE2SCxLQUFBNUgsRUFBQUQsRUFBQXkwQixhQUFBd0gsR0FBQWw4QixFQUFBQyxFQUFBN0IsRUFBQThCLEVBQUFELEVBQUF3MEIsY0FBQXIyQixFQUFBOEIsRUFBQTRMLEdBQUExTixFQUFBOEIsR0FDdmEvQixHQUFLLE9BQXNXLE9BQXRXcStCLEdBQUF2OEIsR0FBNkIsUUFBaEI3QixFQUFBNkIsRUFBQTQwQixjQUFnQjcxQixFQUFBLE9BQTJDa0IsRUFBQSxRQUFsQkEsRUFBQUQsRUFBQTIwQixlQUFrQjEwQixFQUFBKzhCLFFBQUEsS0FBMEJ2RixHQUFBejNCLEVBQUE3QixFQUFBNkIsRUFBQXkwQixhQUFBLEtBQUF2MkIsSUFBOEJDLEVBQUE2QixFQUFBMjBCLGNBQUFxSSxXQUEwQi84QixHQUFBdzdCLEtBQUF6N0IsRUFBQTg3QixHQUFBLzdCLEVBQUFDLEVBQUE5QixLQUErQitCLEVBQUFELEVBQUFrUyxXQUFjalMsR0FBQSxPQUFBRixHQUFBLE9BQUFBLEVBQUE2akIsUUFBQTNqQixFQUFBZzlCLFdBQUEvQixHQUFBL0gsR0FBQW56QixFQUFBa1MsVUFBQXFYLGVBQUEwUixHQUFBajdCLEVBQUFDLEVBQUFrN0IsSUFBQSxHQUF5Rmw3QixHQUFBRCxFQUFBeWpCLFdBQUEsRUFBQXpqQixFQUFBNGpCLE1BQUFvWCxHQUFBaDdCLEVBQUEsS0FBQTdCLEVBQUFELEtBQUE0TixHQUFBL0wsRUFBQUMsRUFBQTdCLEVBQUFELEdBQUF1OUIsTUFBNER6N0IsSUFBQTRqQixPQUFVNWpCLEVBQVMsY0FBQSs0QixHQUFBLzRCLEdBQUEsT0FBQUQsR0FBQXU3QixHQUFBdDdCLEdBQUE3QixFQUFBNkIsRUFBQTZILEtBQUE1SCxFQUFBRCxFQUFBeTBCLGFBQUF2MEIsRUFBQSxPQUFBSCxJQUFBODBCLGNBQUEsS0FBQW5yQixFQUFBekosRUFBQXlMLFNBQUFrbkIsR0FBQXowQixFQUFBOEIsR0FBQXlKLEVBQUEsWUFDcFh4SixHQUFBMHlCLEdBQUF6MEIsRUFBQStCLEtBQUFGLEVBQUF5akIsV0FBQSxJQUFBdVksR0FBQWo4QixFQUFBQyxHQUFBLElBQUE5QixHQUFBLEVBQUE4QixFQUFBaEIsTUFBQWlCLEVBQUFpOUIsUUFBQWw5QixFQUFBazFCLGVBQUEsRUFBQWwxQixFQUFBLE9BQUE4TCxHQUFBL0wsRUFBQUMsRUFBQTBKLEVBQUF4TCxHQUFBOEIsSUFBQTRqQixPQUFBNWpCLEVBQXFILHFCQUFBRCxHQUFBdTdCLEdBQUF0N0IsR0FBQSxLQUFtQyxlQUFBeThCLEdBQUExOEIsRUFBQUMsRUFBQTlCLEdBQXlCLGNBQUF5NkIsR0FBQTM0QixJQUFBa1MsVUFBQXFYLGVBQUFwckIsRUFBQTZCLEVBQUF5MEIsYUFBQSxPQUFBMTBCLEVBQUFDLEVBQUE0akIsTUFBQW1YLEdBQUEvNkIsRUFBQSxLQUFBN0IsRUFBQUQsR0FBQTROLEdBQUEvTCxFQUFBQyxFQUFBN0IsRUFBQUQsR0FBQThCLEVBQUE0akIsTUFBa0gsZUFBQXpsQixFQUFBNkIsRUFBQTZILEtBQUE1SCxFQUFBRCxFQUFBeTBCLGFBQUFrSCxHQUFBNTdCLEVBQUFDLEVBQUE3QixFQUFBOEIsRUFBQUQsRUFBQXcwQixjQUFBcjJCLEVBQUE4QixFQUFBNEwsR0FBQTFOLEVBQUE4QixHQUFBL0IsR0FBb0YsY0FBQTROLEdBQUEvTCxFQUFBQyxJQUFBeTBCLGFBQUF2MkIsR0FBQThCLEVBQUE0akIsTUFBOEMsT0FBdUQsZUFBQTlYLEdBQUEvTCxFQUFBQyxJQUFBeTBCLGFBQUEvb0IsU0FDNWR4TixHQUFBOEIsRUFBQTRqQixNQUFXLFFBQUE3akIsRUFBQSxDQUFrRixHQUF2RTVCLEVBQUE2QixFQUFBNkgsS0FBQW9HLFNBQWtCaE8sRUFBQUQsRUFBQXkwQixhQUFpQi9xQixFQUFBMUosRUFBQTYwQixjQUE0QnFELEdBQUFsNEIsRUFBVkUsRUFBQUQsRUFBQW5CLE9BQWtCLE9BQUE0SyxFQUFBLENBQWEsSUFBQUMsRUFBQUQsRUFBQTVLLE1BQWtKLFFBQXBJb0IsRUFBQXlKLElBQUF6SixJQUFBLElBQUF5SixHQUFBLEVBQUFBLEdBQUEsRUFBQXpKLElBQUF5SixNQUFBekosS0FBQSx3QkFBQS9CLEVBQUF3UCxzQkFBQXhQLEVBQUF3UCxzQkFBQWhFLEVBQUF6SixHQUFBLGNBQThJLEdBQUF3SixFQUFBZ0MsV0FBQXpMLEVBQUF5TCxXQUFBVCxHQUFBQyxRQUFBLENBQXdDbEwsRUFBQTg3QixHQUFBLzdCLEVBQUFDLEVBQUE5QixHQUFZLE1BQUE2QixRQUFTLFlBQUEySixFQUFBMUosRUFBQTRqQixTQUFBbGEsRUFBQXVKLE9BQUFqVCxHQUEwQyxPQUFBMEosR0FBUyxDQUE2QixXQUEzQkMsRUFBQUQsRUFBQWdyQix3QkFBd0MsR0FBRyxHQUFBL3FCLEVBQUFXLFVBQUFuTSxHQUFBLElBQUF3TCxFQUFBMnVCLGFBQUFwNEIsR0FBQSxDQUEwQyxPQUFBd0osRUFBQWtKLElBQUEsQ0FBYyxJQUFBaEssRUFBQXF1QixHQUFBLzRCLEdBQVkwSyxFQUFBZ0ssSUFBQSxFQUFReWtCLEdBQUEzdEIsRUFBQWQsR0FBUWMsRUFBQXdyQixlQUN2ZmgzQixJQUFBd0wsRUFBQXdyQixlQUFBaDNCLEdBQXNDLFFBQWQwSyxFQUFBYyxFQUFBMFosWUFBY3hhLEVBQUFzc0IsZUFBQWgzQixJQUFBMEssRUFBQXNzQixlQUFBaDNCLEdBQW1ELFFBQUFKLEVBQUE0TCxFQUFBdUosT0FBbUIsT0FBQW5WLEdBQVMsQ0FBZ0IsR0FBZDhLLEVBQUE5SyxFQUFBc2xCLFVBQWN0bEIsRUFBQW0zQixvQkFBQS8yQixFQUFBSixFQUFBbTNCLG9CQUFBLzJCLEVBQUEsT0FBQTBLLEtBQUFxc0Isb0JBQUEvMkIsSUFBQTBLLEVBQUFxc0Isb0JBQUEvMkIsT0FBZ0gsYUFBQTBLLEtBQUFxc0Isb0JBQUEvMkIsR0FBa0UsTUFBbEUwSyxFQUFBcXNCLG9CQUFBLzJCLEVBQTZFSixJQUFBbVYsUUFBWXJLLEVBQUFjLEVBQUFrYSxNQUFVamEsSUFBQTFILFdBQVMsT0FBQTBILFFBQWdCZixFQUFBLEtBQUFjLEVBQUFrSixLQUFBbEosRUFBQTdCLE9BQUE3SCxFQUFBNkgsS0FBQSxLQUFBNkIsRUFBQWthLE1BQXVELFVBQUFoYixJQUFBcUssT0FBQXZKLE9BQXVCLElBQUFkLEVBQUFjLEVBQWEsT0FBQWQsR0FBUyxDQUFFLEdBQUFBLElBQUE1SSxFQUFBLENBQVU0SSxFQUFBLEtBQU8sTUFDeGUsV0FEOGVjLEVBQUFkLEVBQUFpYixTQUM5ZSxDQUFhbmEsRUFBQXVKLE9BQUFySyxFQUFBcUssT0FBa0JySyxFQUFBYyxFQUFJLE1BQU1kLElBQUFxSyxPQUFXdkosRUFBQWQsR0FBS2tELEdBQUEvTCxFQUFBQyxFQUFBQyxFQUFBeUwsU0FBQXhOLEdBQW9COEIsSUFBQTRqQixNQUFVLE9BQUE1akIsRUFBUyxjQUFBQyxFQUFBRCxFQUFBNkgsS0FBQTFKLEdBQUErQixFQUFBRixFQUFBeTBCLGNBQUEvb0IsU0FBQTBzQixHQUFBcDRCLEdBQUE3QixJQUFBOEIsRUFBQW80QixHQUFBcDRCLEVBQUFDLEVBQUFpOUIsd0JBQUFuOUIsRUFBQXlqQixXQUFBLEVBQUEzWCxHQUFBL0wsRUFBQUMsRUFBQTdCLEVBQUFELEdBQUE4QixFQUFBNGpCLE1BQXNJLGVBQUFnWSxHQUFBNzdCLEVBQUFDLEVBQUFDLEVBQUFELEVBQUE2SCxLQUFBM0gsRUFBQTJMLEdBQUE1TCxFQUFBNEgsS0FBQTdILEVBQUF5MEIsY0FBQXQyQixFQUFBRCxHQUFtRSxlQUFBMjlCLEdBQUE5N0IsRUFBQUMsSUFBQTZILEtBQUE3SCxFQUFBeTBCLGFBQUF0MkIsRUFBQUQsR0FBaUQsZUFBQUMsRUFBQTZCLEVBQUE2SCxLQUFBNUgsRUFBQUQsRUFBQXkwQixhQUFBeDBCLEVBQUFELEVBQUF3MEIsY0FBQXIyQixFQUFBOEIsRUFBQTRMLEdBQUExTixFQUFBOEIsR0FBQSxPQUFBRixNQUFBcWpCLFVBQUEsS0FBQXBqQixFQUFBb2pCLFVBQUEsS0FBQXBqQixFQUFBeWpCLFdBQUEsR0FBQXpqQixFQUFBNFMsSUFBQSxFQUFBeEgsR0FBQWpOLElBQUE0QixHQUFBLEVBQUFrMEIsR0FBQWowQixJQUMxVkQsR0FBQSxFQUFBcTRCLEdBQUFwNEIsR0FBQTQ1QixHQUFBNTVCLEVBQUE3QixFQUFBOEIsR0FBQWs2QixHQUFBbjZCLEVBQUE3QixFQUFBOEIsRUFBQS9CLEdBQUFtK0IsR0FBQSxLQUFBcjhCLEVBQUE3QixHQUFBLEVBQUE0QixFQUFBN0IsR0FBeUQsUUFBQWEsRUFBQSxRQUFrQixTQUFBcStCLEdBQUFyOUIsR0FBZUEsRUFBQTBqQixXQUFBLEVBQWUsSUFBQTRaLFFBQUEsRUFBQUMsUUFBQSxFQUFBQyxRQUFBLEVBQUFDLFFBQUEsRUFJekcsU0FBQUMsR0FBQTE5QixFQUFBQyxHQUFpQixJQUFBOUIsRUFBQThCLEVBQUE2RSxPQUFBMUcsRUFBQTZCLEVBQUE2M0IsTUFBeUIsT0FBQTE1QixHQUFBLE9BQUFELElBQUFDLEVBQUF1ZSxHQUFBeGUsSUFBOEIsT0FBQUEsR0FBQXVlLEdBQUF2ZSxFQUFBMkosTUFBcUI3SCxJQUFBbEIsTUFBVSxPQUFBaUIsR0FBQSxJQUFBQSxFQUFBNlMsS0FBQTZKLEdBQUExYyxFQUFBOEgsTUFBZ0MsSUFBSWhCLFFBQUExRyxNQUFBSCxHQUFpQixNQUFBQyxHQUFTOHlCLFdBQUEsV0FBc0IsTUFBQTl5QixLQUFZLFNBQUF5OUIsR0FBQTM5QixHQUFlLElBQUFDLEVBQUFELEVBQUF1TCxJQUFZLFVBQUF0TCxFQUFBLHNCQUFBQSxFQUFBLElBQXlDQSxFQUFBLE1BQVEsTUFBQTlCLEdBQVN5L0IsR0FBQTU5QixFQUFBN0IsUUFBUThCLEVBQUFrTCxRQUFBLEtBQ3BTLFNBQUEweUIsR0FBQTc5QixHQUE2QyxPQUE5QixtQkFBQXMwQixPQUFBdDBCLEdBQThCQSxFQUFBNlMsS0FBYyxtQ0FBQTVTLEVBQUFELEVBQUE2MEIsWUFBbUQsVUFBQTUwQixHQUFBLFFBQUFBLElBQUE4MEIsWUFBQSxDQUF3QyxJQUFBNTJCLEVBQUE4QixJQUFBaUMsS0FBZSxHQUFHLElBQUE5RCxFQUFBRCxFQUFBMi9CLFFBQWdCLFVBQUExL0IsRUFBQSxDQUFhLElBQUE4QixFQUFBRixFQUFRLElBQUk1QixJQUFJLE1BQUErQixHQUFTeTlCLEdBQUExOUIsRUFBQUMsSUFBU2hDLElBQUErRCxXQUFTL0QsSUFBQThCLEdBQWEsTUFBTSxPQUEyQixHQUEzQjA5QixHQUFBMzlCLEdBQTJCLG1CQUFkQyxFQUFBRCxFQUFBbVMsV0FBYzRyQixxQkFBQSxJQUFrRDk5QixFQUFBcUssTUFBQXRLLEVBQUE4MEIsY0FBQTcwQixFQUFBKzVCLE1BQUFoNkIsRUFBQTQwQixjQUFBMzBCLEVBQUE4OUIsdUJBQXlFLE1BQUE1OUIsR0FBU3k5QixHQUFBNTlCLEVBQUFHLEdBQVEsTUFBTSxPQUFBdzlCLEdBQUEzOUIsR0FBYSxNQUFNLE9BQUFnK0IsR0FBQWgrQixJQUNuYyxTQUFBaStCLEdBQUFqK0IsR0FBZSxXQUFBQSxFQUFBNlMsS0FBQSxJQUFBN1MsRUFBQTZTLEtBQUEsSUFBQTdTLEVBQUE2UyxJQUNmLFNBQUFxckIsR0FBQWwrQixHQUFlQSxFQUFBLENBQUcsUUFBQUMsRUFBQUQsRUFBQWtULE9BQW1CLE9BQUFqVCxHQUFTLENBQUUsR0FBQWcrQixHQUFBaCtCLEdBQUEsQ0FBVSxJQUFBOUIsRUFBQThCLEVBQVEsTUFBQUQsRUFBUUMsSUFBQWlULE9BQVdsVSxFQUFBLE9BQVNiLE9BQUEsRUFBUyxJQUFBQyxFQUFBNkIsT0FBQSxFQUFlLE9BQUE5QixFQUFBMFUsS0FBYyxPQUFBNVMsRUFBQTlCLEVBQUFnVSxVQUFxQi9ULEdBQUEsRUFBSyxNQUFNLE9BQThDLE9BQUE2QixFQUFBOUIsRUFBQWdVLFVBQUFxWCxjQUFtQ3ByQixHQUFBLEVBQUssTUFBTSxRQUFBWSxFQUFBLE9BQWlCLEdBQUFiLEVBQUF1bEIsWUFBQW9LLEdBQUE3dEIsRUFBQSxJQUFBOUIsRUFBQXVsQixZQUFBLElBQTRDMWpCLEVBQUFDLEVBQUEsSUFBQTlCLEVBQUE2QixJQUFhLENBQUUsS0FBSyxPQUFBN0IsRUFBQTJsQixTQUFpQixDQUFFLFVBQUEzbEIsRUFBQStVLFFBQUErcUIsR0FBQTkvQixFQUFBK1UsUUFBQSxDQUFrQy9VLEVBQUEsS0FBTyxNQUFBNkIsRUFBUTdCLElBQUErVSxPQUFxQyxJQUExQi9VLEVBQUEybEIsUUFBQTVRLE9BQUEvVSxFQUFBK1UsT0FBMEIvVSxJQUFBMmxCLFFBQWdCLElBQUEzbEIsRUFBQTBVLEtBQUEsSUFBQTFVLEVBQUEwVSxLQUFxQixDQUFFLEtBQUExVSxFQUFBdWxCLFVBQUEsU0FBQXpqQixFQUNqZSxVQUFBOUIsRUFBQTBsQixPQUFBLElBQUExbEIsRUFBQTBVLElBQUEsU0FBQTVTLEVBQXdDOUIsRUFBQTBsQixNQUFBM1EsT0FBQS9VLE1BQUEwbEIsTUFBZ0MsT0FBQTFsQixFQUFBdWxCLFdBQUEsQ0FBcUJ2bEIsSUFBQWdVLFVBQWMsTUFBQW5TLEdBQVMsUUFBQUUsRUFBQUYsSUFBYSxDQUFFLE9BQUFFLEVBQUEyUyxLQUFBLElBQUEzUyxFQUFBMlMsSUFBQSxHQUFBMVUsRUFBQSxHQUFBQyxFQUFBLENBQW1DLElBQUErQixFQUFBRixFQUFBMEosRUFBQXpKLEVBQUFpUyxVQUFBdkksRUFBQXpMLEVBQTBCLElBQUFnQyxFQUFBeWEsU0FBQXphLEVBQUF5UyxXQUFBdXJCLGFBQUF4MEIsRUFBQUMsR0FBQXpKLEVBQUFnK0IsYUFBQXgwQixFQUFBQyxRQUFrRTNKLEVBQUFrK0IsYUFBQWorQixFQUFBaVMsVUFBQWhVLFFBQW1DQyxHQUFBdUwsRUFBQTFKLEVBQUEySixFQUFBMUosRUFBQWlTLFVBQUEsSUFBQXhJLEVBQUFpUixVQUFBemEsRUFBQXdKLEVBQUFpSixZQUFBdXJCLGFBQUF2MEIsRUFBQUQsSUFBQXhKLEVBQUF3SixHQUFBZ2tCLFlBQUEvakIsR0FBQSxPQUFBRCxJQUFBeTBCLHNCQUFBLE9BQUFqK0IsRUFBQWsrQixVQUFBbCtCLEVBQUFrK0IsUUFBQTdMLEtBQUF2eUIsRUFBQTB0QixZQUFBenRCLEVBQUFpUyxnQkFDclMsT0FBQWpTLEVBQUEyUyxLQUFBLE9BQUEzUyxFQUFBMmpCLE1BQUEsQ0FBbUMzakIsRUFBQTJqQixNQUFBM1EsT0FBQWhULEVBQWlCQSxJQUFBMmpCLE1BQVUsU0FBUyxHQUFBM2pCLElBQUFGLEVBQUEsTUFBZSxLQUFLLE9BQUFFLEVBQUE0akIsU0FBaUIsQ0FBRSxVQUFBNWpCLEVBQUFnVCxRQUFBaFQsRUFBQWdULFNBQUFsVCxFQUFBLE9BQXdDRSxJQUFBZ1QsT0FBV2hULEVBQUE0akIsUUFBQTVRLE9BQUFoVCxFQUFBZ1QsT0FBMEJoVCxJQUFBNGpCLFNBQzNMLFNBQUFrYSxHQUFBaCtCLEdBQWUsUUFBQUMsRUFBQUQsRUFBQTdCLEdBQUEsRUFBQUMsT0FBQSxFQUFBOEIsT0FBQSxJQUFvQyxDQUFFLElBQUEvQixFQUFBLENBQU9BLEVBQUE4QixFQUFBaVQsT0FBV2xULEVBQUEsT0FBUSxDQUEyQixPQUF6QixPQUFBN0IsR0FBQWEsRUFBQSxPQUF5QmIsRUFBQTBVLEtBQWMsT0FBQXpVLEVBQUFELEVBQUFnVSxVQUFxQmpTLEdBQUEsRUFBSyxNQUFBRixFQUFRLE9BQWdELE9BQUE1QixFQUFBRCxFQUFBZ1UsVUFBQXFYLGNBQW1DdHBCLEdBQUEsRUFBSyxNQUFBRixFQUFRN0IsSUFBQStVLE9BQVcvVSxHQUFBLEVBQUssT0FBQThCLEVBQUE0UyxLQUFBLElBQUE1UyxFQUFBNFMsSUFBQSxDQUF5QjdTLEVBQUEsUUFBQUcsRUFBQUYsRUFBQTBKLEVBQUF4SixJQUFtQixHQUFBMDlCLEdBQUFsMEIsR0FBQSxPQUFBQSxFQUFBa2EsT0FBQSxJQUFBbGEsRUFBQWtKLElBQUFsSixFQUFBa2EsTUFBQTNRLE9BQUF2SixNQUFBa2EsVUFBK0QsQ0FBSyxHQUFBbGEsSUFBQXhKLEVBQUEsTUFBZSxLQUFLLE9BQUF3SixFQUFBbWEsU0FBaUIsQ0FBRSxVQUFBbmEsRUFBQXVKLFFBQUF2SixFQUFBdUosU0FBQS9TLEVBQUEsTUFBQUgsRUFBeUMySixJQUFBdUosT0FBV3ZKLEVBQUFtYSxRQUFBNVEsT0FBQXZKLEVBQUF1SixPQUEwQnZKLElBQUFtYSxRQUFZNWpCLEdBQzNmQyxFQUFBL0IsRUFBQXVMLEVBQUExSixFQUFBa1MsVUFBQSxJQUFBaFMsRUFBQXlhLFNBQUF6YSxFQUFBeVMsV0FBQThhLFlBQUEvakIsR0FBQXhKLEVBQUF1dEIsWUFBQS9qQixJQUFBdkwsRUFBQXN2QixZQUFBenRCLEVBQUFrUyxnQkFBMkcsT0FBQWxTLEVBQUE0UyxLQUFBelUsRUFBQTZCLEVBQUFrUyxVQUFBcVgsY0FBQXRwQixHQUFBLEdBQUEyOUIsR0FBQTU5QixHQUFBLE9BQUFBLEVBQUE0akIsTUFBQSxDQUEyRTVqQixFQUFBNGpCLE1BQUEzUSxPQUFBalQsRUFBaUJBLElBQUE0akIsTUFBVSxTQUFTLEdBQUE1akIsSUFBQUQsRUFBQSxNQUFlLEtBQUssT0FBQUMsRUFBQTZqQixTQUFpQixDQUFFLFVBQUE3akIsRUFBQWlULFFBQUFqVCxFQUFBaVQsU0FBQWxULEVBQUEsT0FBbUQsS0FBWEMsSUFBQWlULFFBQVdMLE1BQUExVSxHQUFBLEdBQWtCOEIsRUFBQTZqQixRQUFBNVEsT0FBQWpULEVBQUFpVCxPQUEwQmpULElBQUE2akIsU0FDaFcsU0FBQXdhLEdBQUF0K0IsRUFBQUMsR0FBaUIsT0FBQUEsRUFBQTRTLEtBQWMsK0JBQXFDLGFBQWEsV0FBQTFVLEVBQUE4QixFQUFBa1MsVUFBeUIsU0FBQWhVLEVBQUEsQ0FBWSxJQUFBQyxFQUFBNkIsRUFBQTYwQixjQUFBNTBCLEVBQUEsT0FBQUYsSUFBQTgwQixjQUFBMTJCLEVBQW1ENEIsRUFBQUMsRUFBQTZILEtBQVMsSUFBQTNILEVBQUFGLEVBQUE0MEIsWUFBdUMsR0FBbkI1MEIsRUFBQTQwQixZQUFBLEtBQW1CLE9BQUExMEIsRUFBQSxDQUE0RixJQUEvRWhDLEVBQUF1VSxHQUFBdFUsRUFBUSxVQUFBNEIsR0FBQSxVQUFBNUIsRUFBQTBKLE1BQUEsTUFBQTFKLEVBQUFDLE1BQUFzZ0IsR0FBQXhnQixFQUFBQyxHQUFxRCt6QixHQUFBbnlCLEVBQUFFLEdBQVFELEVBQUFreUIsR0FBQW55QixFQUFBNUIsR0FBVThCLEVBQUEsRUFBUUEsRUFBQUMsRUFBQThCLE9BQVcvQixHQUFBLEdBQU0sSUFBQXlKLEVBQUF4SixFQUFBRCxHQUFBMEosRUFBQXpKLEVBQUFELEVBQUEsR0FBb0IsVUFBQXlKLEVBQUFtbkIsR0FBQTN5QixFQUFBeUwsR0FBQSw0QkFBQUQsRUFBQTRqQixHQUFBcHZCLEVBQUF5TCxHQUFBLGFBQUFELEVBQUFta0IsR0FBQTN2QixFQUFBeUwsR0FBQStULEdBQUF4ZixFQUFBd0wsRUFBQUMsRUFBQTNKLEdBQTZGLE9BQUFELEdBQVUsWUFBQTRlLEdBQUF6Z0IsRUFBQUMsR0FBcUIsTUFBTSxlQUFBcXVCLEdBQUF0dUIsRUFDcGVDLEdBQUcsTUFBTSxhQUFBNkIsRUFBQTlCLEVBQUFtZ0IsY0FBQWlnQixZQUFBcGdDLEVBQUFtZ0IsY0FBQWlnQixjQUFBbmdDLEVBQUFvZ0MsU0FBQSxPQUFBeCtCLEVBQUE1QixFQUFBVyxPQUFBb3RCLEdBQUFodUIsSUFBQUMsRUFBQW9nQyxTQUFBeCtCLEdBQUEsR0FBQUMsTUFBQTdCLEVBQUFvZ0MsV0FBQSxNQUFBcGdDLEVBQUFpZ0IsYUFBQThOLEdBQUFodUIsSUFBQUMsRUFBQW9nQyxTQUFBcGdDLEVBQUFpZ0IsY0FBQSxHQUFBOE4sR0FBQWh1QixJQUFBQyxFQUFBb2dDLFNBQUFwZ0MsRUFBQW9nQyxTQUFBLGFBQXNQLE1BQU0sY0FBQXYrQixFQUFBa1MsV0FBQW5ULEVBQUEsT0FBMENpQixFQUFBa1MsVUFBQTZiLFVBQUEvdEIsRUFBQTYwQixjQUFzQyxNQUFNLE9BQWEsY0FBYyxRQUFtRyxHQUF6RTkwQixFQUFBQyxFQUFJLFFBQTlCOUIsRUFBQThCLEVBQUEyMEIsZUFBOEJ4MkIsR0FBQSxHQUFBQSxHQUFBLEVBQUE0QixFQUFBQyxFQUFBNGpCLE1BQUEsSUFBQTFsQixFQUFBdytCLGFBQUF4K0IsRUFBQXcrQixXQUFBcEQsT0FBcUUsT0FBQXY1QixJQUFBLElBQUFDLEVBQUE5QixFQUFBNkIsSUFBeUIsQ0FBRSxPQUNwZkMsRUFBQTRTLElBQUE3UyxFQUFBQyxFQUFBa1MsVUFBQS9ULEVBQUE0QixFQUFBdVUsTUFBQWtxQixRQUFBLFFBQUF6K0IsRUFBQUMsRUFBQWtTLFVBQUFoUyxFQUFBLE9BQUFBLEVBQUFGLEVBQUE2MEIsY0FBQXZnQixRQUFBcFUsRUFBQVIsZUFBQSxXQUFBUSxFQUFBcytCLFFBQUEsS0FBQXorQixFQUFBdVUsTUFBQWtxQixRQUFBN04sR0FBQSxVQUFBendCLFNBQXdMLE9BQUFGLEVBQUE0UyxJQUFBNVMsRUFBQWtTLFVBQUE2YixVQUFBNXZCLEVBQUEsR0FBQTZCLEVBQUE2MEIsa0JBQTZELFNBQUE3MEIsRUFBQTRTLEtBQUEsT0FBQTVTLEVBQUEyMEIsY0FBQSxFQUE0QzUwQixFQUFBQyxFQUFBNGpCLE1BQUFDLFNBQWtCNVEsT0FBQWpULEVBQVdBLEVBQUFELEVBQUksU0FBUyxVQUFBQyxFQUFBNGpCLE1BQUEsQ0FBd0I1akIsRUFBQTRqQixNQUFBM1EsT0FBQWpULEVBQWlCQSxJQUFBNGpCLE1BQVUsVUFBUyxHQUFBNWpCLElBQUE5QixFQUFBLE1BQUE2QixFQUFpQixLQUFLLE9BQUFDLEVBQUE2akIsU0FBaUIsQ0FBRSxVQUFBN2pCLEVBQUFpVCxRQUFBalQsRUFBQWlULFNBQUEvVSxFQUFBLE1BQUE2QixFQUF5Q0MsSUFBQWlULE9BQVdqVCxFQUFBNmpCLFFBQUE1USxPQUNwZWpULEVBQUFpVCxPQUFTalQsSUFBQTZqQixRQUFZLE1BQU0sY0FBYyxRQUFBOWtCLEVBQUEsUUFBa0IsU0FBQTAvQixHQUFBMStCLEVBQUFDLEVBQUE5QixJQUFtQkEsRUFBQSs0QixHQUFBLzRCLElBQVEwVSxJQUFBLEVBQVExVSxFQUFBZzVCLFFBQUEsQ0FBVzhGLFFBQUEsTUFBYyxJQUFBNytCLEVBQUE2QixFQUFBbEIsTUFBbUQsT0FBckNaLEVBQUFpNUIsU0FBQSxXQUFzQnVILEdBQUF2Z0MsR0FBTXMvQixHQUFBMTlCLEVBQUFDLElBQVM5QixFQUMxSyxTQUFBeWdDLEdBQUE1K0IsRUFBQUMsRUFBQTlCLElBQW1CQSxFQUFBKzRCLEdBQUEvNEIsSUFBUTBVLElBQUEsRUFBUSxJQUFBelUsRUFBQTRCLEVBQUE4SCxLQUFBeTBCLHlCQUFzQyxzQkFBQW4rQixFQUFBLENBQTBCLElBQUE4QixFQUFBRCxFQUFBbEIsTUFBY1osRUFBQWc1QixRQUFBLFdBQXFCLE9BQUEvNEIsRUFBQThCLElBQWEsSUFBQUMsRUFBQUgsRUFBQW1TLFVBQTBQLE9BQXhPLE9BQUFoUyxHQUFBLG1CQUFBQSxFQUFBMCtCLG9CQUFBMWdDLEVBQUFpNUIsU0FBQSxXQUEwRSxtQkFBQWg1QixJQUFBLE9BQUEwZ0MsTUFBQSxJQUFBekwsSUFBQSxDQUFBaHBCLE9BQUF5MEIsR0FBQUMsSUFBQTEwQixPQUFtRSxJQUFBbE0sRUFBQThCLEVBQUFsQixNQUFBbUIsRUFBQUQsRUFBQTYzQixNQUF3QjRGLEdBQUExOUIsRUFBQUMsR0FBUW9LLEtBQUF3MEIsa0JBQUExZ0MsRUFBQSxDQUEwQjZnQyxlQUFBLE9BQUE5K0IsSUFBQSxPQUFpQy9CLEVBQzdZLFNBQUE4Z0MsR0FBQWovQixHQUFlLE9BQUFBLEVBQUE2UyxLQUFjLE9BQUF4SCxHQUFBckwsRUFBQThILE9BQUErckIsS0FBd0IsSUFBQTV6QixFQUFBRCxFQUFBMGpCLFVBQWtCLFlBQUF6akIsR0FBQUQsRUFBQTBqQixXQUFBLEtBQUF6akIsRUFBQSxHQUFBRCxHQUFBLEtBQThDLGNBQUErNEIsS0FBQWpGLEtBQUEsUUFBQTd6QixFQUFBRCxFQUFBMGpCLGFBQUExa0IsRUFBQSxPQUFBZ0IsRUFBQTBqQixXQUFBLEtBQUF6akIsRUFBQSxHQUFBRCxFQUE0RixjQUFBaTVCLEdBQUFqNUIsR0FBQSxLQUF5QixxQkFBQUMsRUFBQUQsRUFBQTBqQixZQUFBMWpCLEVBQUEwakIsV0FBQSxLQUFBempCLEVBQUEsR0FBQUQsR0FBQSxLQUFvRSxjQUFBKzRCLEtBQUEsS0FBeUIsZUFBQVgsR0FBQXA0QixHQUFBLEtBQTBCLHFCQWpCNU1zOUIsR0FBQSxTQUFBdDlCLEVBQUFDLEdBQWlCLFFBQUE5QixFQUFBOEIsRUFBQTRqQixNQUFrQixPQUFBMWxCLEdBQVMsQ0FBRSxPQUFBQSxFQUFBMFUsS0FBQSxJQUFBMVUsRUFBQTBVLElBQUE3UyxFQUFBMnRCLFlBQUF4dkIsRUFBQWdVLGdCQUFtRCxPQUFBaFUsRUFBQTBVLEtBQUEsT0FBQTFVLEVBQUEwbEIsTUFBQSxDQUFtQzFsQixFQUFBMGxCLE1BQUEzUSxPQUFBL1UsRUFBaUJBLElBQUEwbEIsTUFBVSxTQUFTLEdBQUExbEIsSUFBQThCLEVBQUEsTUFBZSxLQUFLLE9BQUE5QixFQUFBMmxCLFNBQWlCLENBQUUsVUFBQTNsQixFQUFBK1UsUUFBQS9VLEVBQUErVSxTQUFBalQsRUFBQSxPQUF3QzlCLElBQUErVSxPQUFXL1UsRUFBQTJsQixRQUFBNVEsT0FBQS9VLEVBQUErVSxPQUEwQi9VLElBQUEybEIsVUFBY3laLEdBQUEsYUFDL2JDLEdBQUEsU0FBQXg5QixFQUFBQyxFQUFBOUIsRUFBQUMsRUFBQThCLEdBQXVCLElBQUFDLEVBQUFILEVBQUE4MEIsY0FBc0IsR0FBQTMwQixJQUFBL0IsRUFBQSxDQUFVLElBQUF1TCxFQUFBMUosRUFBQWtTLFVBQXVDLE9BQXJCd21CLEdBQUFqdEIsR0FBQVAsU0FBY25MLEVBQUEsS0FBTzdCLEdBQVUsWUFBQWdDLEVBQUFnZSxHQUFBeFUsRUFBQXhKLEdBQXVCL0IsRUFBQStmLEdBQUF4VSxFQUFBdkwsR0FBVTRCLEVBQUEsR0FBSyxNQUFNLGFBQUFHLEVBQUE4ckIsR0FBQXRpQixFQUFBeEosR0FBd0IvQixFQUFBNnRCLEdBQUF0aUIsRUFBQXZMLEdBQVU0QixFQUFBLEdBQUssTUFBTSxhQUFBRyxFQUFBWixFQUFBLEdBQW9CWSxFQUFBLENBQUlwQixXQUFBLElBQWVYLEVBQUFtQixFQUFBLEdBQU1uQixFQUFBLENBQUlXLFdBQUEsSUFBZWlCLEVBQUEsR0FBSyxNQUFNLGVBQUFHLEVBQUFtc0IsR0FBQTNpQixFQUFBeEosR0FBMEIvQixFQUFBa3VCLEdBQUEzaUIsRUFBQXZMLEdBQVU0QixFQUFBLEdBQUssTUFBTSwyQkFBQUcsRUFBQSsrQixTQUFBLG1CQUFBOWdDLEVBQUE4Z0MsVUFBQXYxQixFQUFBMDBCLFFBQUE3TCxJQUFxRk4sR0FBQS96QixFQUFBQyxHQUFRdUwsRUFBQXhMLE9BQUEsRUFBVyxJQUFBeUwsRUFBQSxLQUFXLElBQUF6TCxLQUFBZ0MsRUFBQSxJQUFBL0IsRUFBQXVCLGVBQUF4QixJQUFBZ0MsRUFBQVIsZUFBQXhCLElBQUEsTUFBQWdDLEVBQUFoQyxHQUFBLGFBQzlhQSxFQUFBLENBQUcsSUFBQTBLLEVBQUExSSxFQUFBaEMsR0FBVyxJQUFBd0wsS0FBQWQsSUFBQWxKLGVBQUFnSyxLQUFBQyxNQUFBLElBQXlDQSxFQUFBRCxHQUFBLFFBQVcsNEJBQUF4TCxHQUFBLGFBQUFBLEdBQUEsbUNBQUFBLEdBQUEsNkJBQUFBLEdBQUEsY0FBQUEsSUFBQTBTLEVBQUFsUixlQUFBeEIsR0FBQTZCLE1BQUEsS0FBQUEsS0FBQSxJQUFBd0MsS0FBQXJFLEVBQUEsT0FBa00sSUFBQUEsS0FBQUMsRUFBQSxDQUFZLElBQUFMLEVBQUFLLEVBQUFELEdBQWlDLEdBQXRCMEssRUFBQSxNQUFBMUksSUFBQWhDLFFBQUEsRUFBc0JDLEVBQUF1QixlQUFBeEIsSUFBQUosSUFBQThLLElBQUEsTUFBQTlLLEdBQUEsTUFBQThLLEdBQUEsYUFBQTFLLEVBQUEsR0FBQTBLLEVBQUEsQ0FBdUUsSUFBQWMsS0FBQWQsS0FBQWxKLGVBQUFnSyxJQUFBNUwsS0FBQTRCLGVBQUFnSyxLQUFBQyxNQUFBLElBQWtFQSxFQUFBRCxHQUFBLElBQVcsSUFBQUEsS0FBQTVMLElBQUE0QixlQUFBZ0ssSUFBQWQsRUFBQWMsS0FBQTVMLEVBQUE0TCxLQUFBQyxJQUNyY0EsRUFBQSxJQUFLQSxFQUFBRCxHQUFBNUwsRUFBQTRMLFNBQWFDLElBQUE1SixNQUFBLElBQUFBLEVBQUF3QyxLQUFBckUsRUFBQXlMLE1BQUE3TCxNQUFvQyw0QkFBQUksR0FBQUosTUFBQSswQixZQUFBLEVBQUFqcUIsTUFBQWlxQixZQUFBLFFBQUEvMEIsR0FBQThLLElBQUE5SyxJQUFBaUMsS0FBQSxJQUFBd0MsS0FBQXJFLEVBQUEsR0FBQUosSUFBQSxhQUFBSSxFQUFBMEssSUFBQTlLLEdBQUEsaUJBQUFBLEdBQUEsaUJBQUFBLElBQUFpQyxLQUFBLElBQUF3QyxLQUFBckUsRUFBQSxHQUFBSixHQUFBLG1DQUFBSSxHQUFBLDZCQUFBQSxJQUFBMFMsRUFBQWxSLGVBQUF4QixJQUFBLE1BQUFKLEdBQUFzMEIsR0FBQW55QixFQUFBL0IsR0FBQTZCLEdBQUE2SSxJQUFBOUssSUFBQWlDLEVBQUEsTUFBQUEsS0FBQSxJQUFBd0MsS0FBQXJFLEVBQUFKLElBQStWNkwsSUFBQTVKLEtBQUEsSUFBQXdDLEtBQUEsUUFBQW9ILEdBQTZCMUosRUFBQUYsR0FBSUMsRUFBQTQwQixZQUFBMzBCLElBQUFtOUIsR0FBQXA5QixLQUEyQnc5QixHQUFBLFNBQUF6OUIsRUFBQUMsRUFBQTlCLEVBQUFDLEdBQXFCRCxJQUFBQyxHQUFBaS9CLEdBQUFwOUIsSUFldGUsSUFBQWsvQixHQUFBLENBQVFwRixZQUFBekIsSUFBZThHLEdBQUExakIsR0FBQXRNLGtCQUFBaXdCLEdBQUEsV0FBQUMsR0FBQSxFQUFBQyxJQUFBLEVBQUF0ekIsR0FBQSxLQUFBTSxHQUFBLEtBQUFFLEdBQUEsRUFBQSt5QixJQUFBLEVBQUFDLElBQUEsRUFBQS95QixHQUFBLEtBQUFnekIsSUFBQSxFQUFBQyxHQUFBLEtBQUFDLEdBQUEsS0FBQWQsR0FBQSxLQUFxSCxTQUFBZSxLQUFjLFVBQUE1ekIsR0FBQSxRQUFBak0sRUFBQWlNLEdBQUFpSCxPQUErQixPQUFBbFQsR0FBUyxDQUFFLElBQUFDLEVBQUFELEVBQVEsT0FBQUMsRUFBQTRTLEtBQWMsV0FBQTFVLEVBQUE4QixFQUFBNkgsS0FBQVIsa0JBQXNDLE1BQUFuSixHQUFBMDFCLEtBQTRCLE1BQU0sT0FBQWtGLEtBQWFqRixLQUFNLE1BQU0sT0FBQW1GLEdBQUFoNUIsR0FBYSxNQUFNLE9BQUE4NEIsS0FBYSxNQUFNLFFBQUFYLEdBQUFuNEIsR0FBY0QsSUFBQWtULE9BQVczRyxHQUFBLEtBQU9FLEdBQUEsRUFBSSt5QixJQUFBLEVBQU1DLElBQUEsRUFBTXh6QixHQUFBLEtBQU8sU0FBQXd0QixLQUFjLE9BQUFtRyxLQUFBenlCLEVBQUEyeUIsd0JBQUFILElBQUFDLE1BQ3RhLFNBQUFHLEdBQUEvL0IsR0FBZSxPQUFNLENBQUUsSUFBQUMsRUFBQUQsRUFBQXFqQixVQUFBbGxCLEVBQUE2QixFQUFBa1QsT0FBQTlVLEVBQUE0QixFQUFBOGpCLFFBQXlDLFlBQUE5akIsRUFBQTBqQixXQUFBLENBQTJCelgsR0FBQWpNLEVBQUlBLEVBQUEsQ0FBRyxJQUFBRSxFQUFBRCxFQUFZRSxFQUFBc00sR0FBUTlDLEdBQVoxSixFQUFBRCxHQUFZMDBCLGFBQXFCLE9BQUF6MEIsRUFBQTRTLEtBQWMsT0FBYSxjQUFjLHFCQUFxQixPQUFBeEgsR0FBQXBMLEVBQUE2SCxPQUFBK3JCLEtBQXdCLE1BQU0sT0FBQWtGLEtBQWFqRixNQUFNbnFCLEVBQUExSixFQUFBa1MsV0FBY3NxQixpQkFBQTl5QixFQUFBWSxRQUFBWixFQUFBOHlCLGVBQUE5eUIsRUFBQTh5QixlQUFBLE1BQXFFLE9BQUF2OEIsR0FBQSxPQUFBQSxFQUFBMmpCLFFBQUE0WCxHQUFBeDdCLEtBQUF5akIsWUFBQSxHQUFrRDZaLEdBQUF0OUIsR0FBTSxNQUFNLE9BQUFnNUIsR0FBQWg1QixHQUFhLElBQUEySixFQUFBK3VCLEdBQUFELEdBQUF2dEIsU0FBOEIsR0FBVGhMLEVBQUFGLEVBQUE2SCxLQUFTLE9BQUE1SCxHQUFBLE1BQUFELEVBQUFrUyxVQUFBcXJCLEdBQUF0OUIsRUFBQUQsRUFBQUUsRUFBQXdKLEVBQUFDLEdBQUExSixFQUFBcUwsTUFBQXRMLEVBQUFzTCxNQUFBdEwsRUFBQXlqQixXQUN0YixVQUFLLEdBQUEvWixFQUFBLENBQVcsSUFBQWQsRUFBQTh2QixHQUFBanRCLEdBQUFQLFNBQW9CLEdBQUFzd0IsR0FBQXg3QixHQUFBLENBQWNDLEdBQUp5SixFQUFBMUosR0FBSWtTLFVBQWMsSUFBQXBVLEVBQUE0TCxFQUFBN0IsS0FBQTVKLEVBQUF5TCxFQUFBbXJCLGNBQUEvckIsRUFBQWEsRUFBZ0UsT0FBN0IxSixFQUFBdVMsR0FBQTlJLEVBQVF6SixFQUFBd1MsR0FBQXhVLEVBQVFpQyxPQUFBLEVBQVN5SixFQUFBN0wsR0FBYywwQkFBQXFNLEdBQUEsT0FBQWxLLEdBQXdDLE1BQU0sNEJBQUFuQyxFQUFBLEVBQWtDQSxFQUFBK1csR0FBQTdTLE9BQVlsRSxJQUFBcU0sR0FBQTBLLEdBQUEvVyxHQUFBbUMsR0FBZSxNQUFNLGFBQUFrSyxHQUFBLFFBQUFsSyxHQUEyQixNQUFNLGlDQUFBa0ssR0FBQSxRQUFBbEssR0FBaURrSyxHQUFBLE9BQUFsSyxHQUFZLE1BQU0sV0FBQWtLLEdBQUEsUUFBQWxLLEdBQXlCa0ssR0FBQSxTQUFBbEssR0FBYyxNQUFNLGNBQUFrSyxHQUFBLFNBQUFsSyxHQUE2QixNQUFNLFlBQUFzZSxHQUFBdGUsRUFBQWhDLEdBQXFCa00sR0FBQSxVQUFBbEssR0FBZW15QixHQUFBdHBCLEVBQUEsWUFBaUIsTUFBTSxhQUFBN0ksRUFBQW9lLGNBQzFlLENBQUNpZ0IsY0FBQXJnQyxFQUFBc2dDLFVBQTBCcDBCLEdBQUEsVUFBQWxLLEdBQWVteUIsR0FBQXRwQixFQUFBLFlBQWlCLE1BQU0sZUFBQXlqQixHQUFBdHNCLEVBQUFoQyxHQUFBa00sR0FBQSxVQUFBbEssR0FBQW15QixHQUFBdHBCLEVBQUEsWUFBdUUsSUFBQTVJLEtBQWYreEIsR0FBQXRvQixFQUFBMUwsR0FBUUgsRUFBQSxLQUFPRyxJQUFBeUIsZUFBQVEsS0FBQTBJLEVBQUEzSyxFQUFBaUMsR0FBQSxhQUFBQSxFQUFBLGlCQUFBMEksRUFBQTNJLEVBQUFpVixjQUFBdE0sSUFBQTlLLEVBQUEsWUFBQThLLElBQUEsaUJBQUFBLEdBQUEzSSxFQUFBaVYsY0FBQSxHQUFBdE0sSUFBQTlLLEVBQUEsZUFBQThLLElBQUFnSSxFQUFBbFIsZUFBQVEsSUFBQSxNQUFBMEksR0FBQXdwQixHQUFBdHBCLEVBQUE1SSxJQUEwTixPQUFBeUosR0FBVSxZQUFBb1IsR0FBQTlhLEdBQW1CNGUsR0FBQTVlLEVBQUFoQyxHQUFBLEdBQVcsTUFBTSxlQUFBOGMsR0FBQTlhLEdBQXNCd3NCLEdBQUF4c0IsR0FBUSxNQUFNLGdDQUFrQywyQkFBQWhDLEVBQUFnaEMsVUFDdGRoL0IsRUFBQW0rQixRQUFBN0wsSUFBZXJ5QixFQUFBcEMsRUFBSTRMLEVBQUFrckIsWUFBQTEwQixHQUFnQndKLEVBQUEsT0FBQXhKLElBQWlCazlCLEdBQUFwOUIsT0FBUyxDQUFLL0IsRUFBQStCLEVBQUlDLEVBQUFDLEVBQUk0SSxFQUFBWSxFQUFJNUwsRUFBQSxJQUFBNkwsRUFBQWdSLFNBQUFoUixJQUFBbVYsY0FBbUNsVyxJQUFBbWtCLEdBQUFDLE9BQUFwa0IsRUFBQXVrQixHQUFBbHRCLElBQXVCMkksSUFBQW1rQixHQUFBQyxLQUFBLFdBQUEvc0IsTUFBQW5DLEVBQUErUSxjQUFBLFFBQUEyZSxVQUFBLHFCQUFBMXZCLEVBQUFtQyxFQUFBd3RCLFlBQUF4dEIsRUFBQW9xQixhQUFBLGlCQUFBdmhCLEVBQUFxcEIsR0FBQXIwQixJQUFBK1EsY0FBQTVPLEVBQUEsQ0FBaUtreUIsR0FBQXJwQixFQUFBcXBCLE1BQVFyMEIsSUFBQStRLGNBQUE1TyxHQUFBLFdBQUFBLEdBQUE2SSxFQUFBeTFCLFdBQUF6Z0MsRUFBQXlnQyxVQUFBLElBQUF6Z0MsSUFBQWlpQyxnQkFBQW4zQixFQUFBM0ksSUFBNEZBLEVBQUFuQyxHQUFJMFUsR0FBQXZVLEVBQVFnQyxFQUFBd1MsR0FBQS9JLEVBQVEyekIsR0FBQXA5QixFQUFBRCxHQUFBLE1BQWM4SSxFQUFBN0ksRUFBWSxJQUFBaUosRUFBQVMsRUFBQVAsRUFBQThvQixHQUFScDBCLEVBQUFvQyxFQUFJakMsRUFBQXlMLEdBQXNCLE9BQUE1TCxHQUFVLDBCQUFBcU0sR0FBQSxPQUN2ZHJCLEdBQUdhLEVBQUExTCxFQUFJLE1BQU0sNEJBQUEwTCxFQUFBLEVBQWtDQSxFQUFBa0wsR0FBQTdTLE9BQVkySCxJQUFBUSxHQUFBMEssR0FBQWxMLEdBQUFiLEdBQWVhLEVBQUExTCxFQUFJLE1BQU0sYUFBQWtNLEdBQUEsUUFBQXJCLEdBQTJCYSxFQUFBMUwsRUFBSSxNQUFNLGlDQUFBa00sR0FBQSxRQUFBckIsR0FBaURxQixHQUFBLE9BQUFyQixHQUFZYSxFQUFBMUwsRUFBSSxNQUFNLFdBQUFrTSxHQUFBLFFBQUFyQixHQUF5QnFCLEdBQUEsU0FBQXJCLEdBQWNhLEVBQUExTCxFQUFJLE1BQU0sY0FBQWtNLEdBQUEsU0FBQXJCLEdBQTZCYSxFQUFBMUwsRUFBSSxNQUFNLFlBQUFzZ0IsR0FBQXpWLEVBQUE3SyxHQUFxQjBMLEVBQUF1VSxHQUFBcFYsRUFBQTdLLEdBQVVrTSxHQUFBLFVBQUFyQixHQUFlc3BCLEdBQUFscEIsRUFBQSxZQUFpQixNQUFNLGFBQUFTLEVBQUFxaUIsR0FBQWxqQixFQUFBN0ssR0FBd0IsTUFBTSxhQUFBNkssRUFBQXVWLGNBQUEsQ0FBK0JpZ0IsY0FBQXJnQyxFQUFBc2dDLFVBQTBCNTBCLEVBQUFySyxFQUFBLEdBQU1yQixFQUFBLENBQUlhLFdBQUEsSUFBZXFMLEdBQUEsVUFBQXJCLEdBQWVzcEIsR0FBQWxwQixFQUFBLFlBQWlCLE1BQU0sZUFBQXFqQixHQUFBempCLEVBQ25mN0ssR0FBRzBMLEVBQUEwaUIsR0FBQXZqQixFQUFBN0ssR0FBVWtNLEdBQUEsVUFBQXJCLEdBQWVzcEIsR0FBQWxwQixFQUFBLFlBQWlCLE1BQU0sUUFBQVMsRUFBQTFMLEVBQVlnMEIsR0FBQW4wQixFQUFBNkwsR0FBUWYsT0FBQSxFQUFTLElBQUFVLEVBQUF4TCxFQUFBaU8sRUFBQWpELEVBQUFFLEVBQUFXLEVBQWdCLElBQUFmLEtBQUFJLEVBQUEsR0FBQUEsRUFBQXRKLGVBQUFrSixHQUFBLENBQW1DLElBQUFqSyxFQUFBcUssRUFBQUosR0FBVyxVQUFBQSxFQUFBaW9CLEdBQUE5a0IsRUFBQXBOLEdBQUEsNEJBQUFpSyxFQUFBLE9BQUFqSyxNQUFBazBCLFlBQUEsSUFBQXZGLEdBQUF2aEIsRUFBQXBOLEdBQUEsYUFBQWlLLEVBQUEsaUJBQUFqSyxHQUFBLGFBQUEySyxHQUFBLEtBQUEzSyxJQUFBa3ZCLEdBQUE5aEIsRUFBQXBOLEdBQUEsaUJBQUFBLEdBQUFrdkIsR0FBQTloQixFQUFBLEdBQUFwTixHQUFBLG1DQUFBaUssR0FBQSw2QkFBQUEsR0FBQSxjQUFBQSxJQUFBZ0ksRUFBQWxSLGVBQUFrSixHQUFBLE1BQUFqSyxHQUFBeXpCLEdBQUFscEIsRUFBQU4sR0FBQSxNQUFBakssR0FBQStlLEdBQUEzUixFQUFBbkQsRUFBQWpLLEVBQUF5SyxJQUFrVixPQUFBdEwsR0FBVSxZQUFBaWQsR0FBQWpTLEdBQzFlK1YsR0FBQS9WLEVBQUE3SyxHQUFBLEdBQVcsTUFBTSxlQUFBOGMsR0FBQWpTLEdBQXNCMmpCLEdBQUEzakIsR0FBUSxNQUFNLG1CQUFBN0ssRUFBQWEsT0FBQWdLLEVBQUErUixhQUFBLFdBQUFvRCxHQUFBaGdCLEVBQUFhLFFBQW9FLE1BQU0sY0FBQTZLLEVBQUFiLEdBQWtCeTFCLFdBQUF0Z0MsRUFBQXNnQyxTQUFrQyxPQUFWejFCLEVBQUE3SyxFQUFBYSxPQUFVb3RCLEdBQUF2aUIsSUFBQTFMLEVBQUFzZ0MsU0FBQXoxQixHQUFBLFNBQUE3SyxFQUFBbWdCLGNBQUE4TixHQUFBdmlCLElBQUExTCxFQUFBc2dDLFNBQUF0Z0MsRUFBQW1nQixjQUFBLEdBQTJGLE1BQU0sMkJBQUF6VSxFQUFBczFCLFVBQUFuMkIsRUFBQXMxQixRQUFBN0wsS0FBc0Q3b0IsRUFBQWdwQixHQUFBeHlCLEVBQUF3SixLQUFBMHpCLEdBQUFwOUIsR0FBbUJBLEVBQUFrUyxVQUFBalMsRUFBYyxPQUFBRCxFQUFBc0wsTUFBQXRMLEVBQUF5akIsV0FBQSxVQUFpQyxPQUFBempCLEVBQUFrUyxXQUFBblQsRUFBQSxPQUF3QyxNQUFNLE9BQUFrQixHQUFBLE1BQUFELEVBQUFrUyxVQUFBc3JCLEdBQUF2OUIsRUFBQUQsRUFBQUMsRUFBQTQwQixjQUFBbnJCLElBQUEsaUJBQzFiQSxJQUFBLE9BQUExSixFQUFBa1MsV0FBQW5ULEVBQUEsUUFBQWtCLEVBQUF5NEIsR0FBQUQsR0FBQXZ0QixTQUFBd3RCLEdBQUFqdEIsR0FBQVAsU0FBQXN3QixHQUFBeDdCLElBQUFFLEdBQUF3SixFQUFBMUosR0FBQWtTLFVBQUFqUyxFQUFBeUosRUFBQW1yQixjQUFBMzBCLEVBQUFzUyxHQUFBOUksS0FBQXhKLEVBQUE2dEIsWUFBQTl0QixJQUFBbTlCLEdBQUFwOUIsS0FBQUUsRUFBQUYsR0FBQTBKLEdBQUEsSUFBQXpKLEVBQUEwYSxTQUFBMWEsSUFBQTZlLGVBQUFraEIsZUFBQXQyQixJQUFBOEksR0FBQXhTLEVBQUFFLEVBQUFnUyxVQUFBeEksSUFBaVAsTUFBTSxjQUFjLFFBQTBCLEdBQTFCQSxFQUFBMUosRUFBQTIwQixjQUEwQixPQUFBMzBCLEVBQUF5akIsV0FBQSxDQUF5QnpqQixFQUFBazFCLGVBQUFoMUIsRUFBbUI4TCxHQUFBaE0sRUFBSSxNQUFBRCxFQUFRMkosRUFBQSxPQUFBQSxFQUFXeEosRUFBQSxPQUFBRCxHQUFBLE9BQUFBLEVBQUEwMEIsY0FBbUMsT0FBQTEwQixJQUFBeUosR0FBQXhKLElBQUEsUUFBQUQsSUFBQTJqQixNQUFBQyxXQUFBLFFBQUFsYSxFQUFBM0osRUFBQSswQixjQUFBLzBCLEVBQUErMEIsWUFBQTkwQixJQUFBKzBCLFdBQUFyckIsSUFBQTNKLEVBQUErMEIsWUFDclkvMEIsRUFBQTgwQixXQUFBNzBCLElBQUErMEIsV0FBQSxNQUFBLzBCLEVBQUF3akIsVUFBQSxLQUFrRC9aLElBQUF4SixHQUFBLE1BQUFGLEVBQUF5akIsWUFBQS9aLEtBQUExSixFQUFBeWpCLFdBQUEsR0FBZ0QsTUFBTSxPQUFhLE9BQWEsY0FBYyxPQUFBcVYsS0FBYXdFLEdBQUF0OUIsR0FBTSxNQUFNLFFBQUFtNEIsR0FBQW40QixHQUFjLE1BQU0sT0FBYSxjQUFjLFFBQUFvTCxHQUFBcEwsRUFBQTZILE9BQUErckIsS0FBeUIsTUFBTSxRQUFBNzBCLEVBQUEsT0FBaUJpTixHQUFBLEtBQVcsR0FBSmhNLEVBQUFELEVBQUksSUFBQXlNLElBQUEsSUFBQXhNLEVBQUFpMUIsb0JBQUEsQ0FBeUMsSUFBSnZyQixFQUFBLEVBQUl4SixFQUFBRixFQUFBNGpCLE1BQWMsT0FBQTFqQixJQUFTRCxFQUFBQyxFQUFBZzFCLGdCQUFBeHJCLE1BQUF6SixJQUFBMEosRUFBQXpKLEVBQUErMEIscUJBQUF2ckIsTUFBQUMsR0FBQXpKLElBQUEyakIsUUFBOEU3akIsRUFBQWkxQixvQkFBQXZyQixFQUF3QixVQUFBc0MsR0FBQSxPQUFBQSxHQUFxQixPQUFBOU4sR0FBQSxTQUFBQSxFQUFBdWxCLGFBQUEsT0FDOWN2bEIsRUFBQTYyQixjQUFBNzJCLEVBQUE2MkIsWUFBQWgxQixFQUFBZzFCLGFBQUEsT0FBQWgxQixFQUFBKzBCLGFBQUEsT0FBQTUyQixFQUFBNDJCLGFBQUE1MkIsRUFBQTQyQixXQUFBRSxXQUFBajFCLEVBQUFnMUIsYUFBQTcyQixFQUFBNDJCLFdBQUEvMEIsRUFBQSswQixZQUFBLEVBQUEvMEIsRUFBQTBqQixZQUFBLE9BQUF2bEIsRUFBQTQyQixXQUFBNTJCLEVBQUE0MkIsV0FBQUUsV0FBQWoxQixFQUFBN0IsRUFBQTYyQixZQUFBaDFCLEVBQUE3QixFQUFBNDJCLFdBQUEvMEIsUUFBMFAsQ0FBZSxXQUFWQSxFQUFBaS9CLEdBQUFqL0IsSUFBVSxPQUFBQSxFQUFBMGpCLFdBQUEsS0FBQTFqQixFQUF1QyxPQUFBN0IsTUFBQTYyQixZQUFBNzJCLEVBQUE0MkIsV0FBQSxLQUFBNTJCLEVBQUF1bEIsV0FBQSxNQUE4RCxVQUFBdGxCLEVBQUEsT0FBQUEsRUFBcUIsVUFBQUQsRUFBZ0IsTUFBaEI2QixFQUFBN0IsRUFBMkIsWUFDOVosU0FBQStoQyxHQUFBbGdDLEdBQWUsSUFBQUMsRUFBQTQ4QixHQUFBNzhCLEVBQUFxakIsVUFBQXJqQixFQUFBeU0sSUFBNkYsT0FBbkV6TSxFQUFBODBCLGNBQUE5MEIsRUFBQTAwQixhQUErQixPQUFBejBCLE1BQUE4L0IsR0FBQS8vQixJQUFvQm8vQixHQUFBajBCLFFBQUEsS0FBZ0JsTCxFQUM1RyxTQUFBa2dDLEdBQUFuZ0MsRUFBQUMsR0FBaUJzL0IsSUFBQXZnQyxFQUFBLE9BQW1CeTZCLEtBQUs4RixJQUFBLEVBQU1ILEdBQUFoMEIsa0JBQUErekIsR0FBd0IsSUFBQWhoQyxFQUFBNkIsRUFBQXUyQiwyQkFBbUNwNEIsSUFBQXNPLElBQUF6TSxJQUFBdU0sSUFBQSxPQUFBTixLQUFBNHpCLEtBQUFwekIsR0FBQXRPLEVBQUE4TixHQUFBb3BCLElBQUE5b0IsR0FBQXZNLEdBQUFtTCxRQUFBLE1BQUFuTCxFQUFBb2dDLDRCQUFBLEdBQXVHLElBQVQsSUFBQWhpQyxHQUFBLElBQVMsQ0FBRyxJQUFJLEdBQUE2QixFQUFBLEtBQVUsT0FBQWdNLEtBQUFvMEIsTUFBZ0JwMEIsR0FBQWkwQixHQUFBajBCLFNBQVMsS0FBVSxPQUFBQSxJQUFTQSxHQUFBaTBCLEdBQUFqMEIsSUFBUyxNQUFBMUMsR0FBUyxHQUFBMnVCLEdBQUFELEdBQUFELEdBQUEsWUFBQS9yQixHQUFBN04sR0FBQSxFQUFBdWdDLEdBQUFwMUIsT0FBcUMsQ0FBSyxPQUFBMEMsSUFBQWpOLEVBQUEsT0FBeUIsSUFBQWtCLEVBQUErTCxHQUFBOUwsRUFBQUQsRUFBQWdULE9BQW1CLFVBQUEvUyxFQUF1QixDQUFLSCxFQUFBLENBQUcsSUFBQTJKLEVBQUEzSixFQUFBNEosRUFBQXpKLEVBQUEwSSxFQUFBM0ksRUFBQW5DLEVBQUF3TCxFQUEwRSxHQUF0RHBKLEVBQUFzTSxHQUFJNUQsRUFBQTZhLFdBQUEsS0FBa0I3YSxFQUFBbXNCLFlBQUFuc0IsRUFBQWtzQixXQUFBLEtBQWdDLE9BQUFoM0IsR0FBQSxpQkFDL2RBLEdBQUEsbUJBQUFBLEVBQUErK0IsS0FBQSxDQUFzQyxJQUFBNStCLEVBQUFILEVBQVFBLEVBQUE2TCxFQUFJLElBQUFiLEdBQUEsRUFBQUksR0FBQSxFQUFjLEdBQUcsUUFBQXBMLEVBQUE4VSxJQUFBLENBQWUsSUFBQXhKLEVBQUF0TCxFQUFBc2xCLFVBQWtCLFVBQUFoYSxHQUFBLFFBQUFBLElBQUF1ckIsZUFBQSxDQUEyQ3pyQixFQUFBLGVBQUFFLEVBQUFzekIsWUFBK0IsTUFBbUMsaUJBQTdCdHpCLEVBQUF0TCxFQUFBMjJCLGFBQUE0TCxlQUE2QixHQUFBajNCLEVBQUFOLEVBQUEsSUFBbUMsSUFBQUEsR0FBQU0sRUFBQU4sT0FBQU0sSUFBd0J0TCxJQUFBbVYsYUFBVyxPQUFBblYsR0FBZ0JBLEVBQUE2TCxFQUFJLEdBQWlGLElBQTlFUCxFQUFBLEtBQUF0TCxFQUFBOFUsT0FBQXhKLE9BQUEsSUFBQXRMLEVBQUErMkIsY0FBQThILFVBQUEsT0FBQTcrQixFQUFBNjJCLGVBQThFdnJCLEVBQUEsQ0FBb0UsR0FBOURPLEVBQUEyMkIsR0FBQWpoQyxLQUFBLEtBQUFxSyxFQUFBNUwsRUFBQThLLEVBQUEsTUFBQTlLLEVBQUFrQixNQUFBLFdBQUFrQixHQUFrRGpDLEVBQUE0K0IsS0FBQWx6QixLQUFZLE1BQUE3TCxFQUFBa0IsTUFBQSxDQUFtQmxCLEVBQUEybEIsV0FBQSxHQUFnQjdhLEVBQUE2YSxZQUFBLEtBQ25lLElBQUE3YSxFQUFBZ0ssS0FBQSxPQUFBaEssRUFBQXdhLFlBQUF4YSxFQUFBZ0ssSUFBQSxJQUEwQ2hLLEVBQUFzc0IsZUFBQWgxQixFQUFtQixNQUFBSCxHQUFRLElBQUErSSxFQUFBWSxFQUFBLGlCQUFBUixNQUFBLGVBQUFtdEIsR0FBQTNzQixFQUFBeEosSUFBQSxLQUFBd0osRUFBQVIsRUFBQUosR0FBb0UsR0FBQVksR0FBQTYxQixHQUFBNzFCLElBQUE2MUIsR0FBQTcxQixHQUFtQjVMLEVBQUEybEIsV0FBQSxLQUFrQjNsQixFQUFBbzNCLGVBQUFoMUIsRUFBbUIsTUFBQUgsRUFBUWpDLElBQUFtVixhQUFXLE9BQUFuVixHQUFnQkEsRUFBQXVDLE9BQUFvYyxHQUFBN1QsRUFBQWYsT0FBQSw2TUFBQTZVLEdBQUE5VCxJQUF5TzQyQixJQUFBLEVBQU0xaEMsRUFBQTg1QixHQUFBOTVCLEVBQUE4SyxHQUFVYyxFQUFBQyxFQUFJLEdBQUcsT0FBQUQsRUFBQWtKLEtBQWMsT0FBQWhLLEVBQ2xmOUssRUFBRTRMLEVBQUErWixXQUFBLEtBQWtCL1osRUFBQXdyQixlQUFBaDFCLEVBQStCbzNCLEdBQUE1dEIsRUFBWnhKLEVBQUF1K0IsR0FBQS8wQixFQUFBZCxFQUFBMUksSUFBb0IsTUFBQUgsRUFBUSxVQUFBNkksRUFBQTlLLEVBQUE2TCxFQUFBRCxFQUFBN0IsS0FBQTVKLEVBQUF5TCxFQUFBd0ksVUFBQSxPQUFBeEksRUFBQStaLGFBQUEsbUJBQUE5WixFQUFBMnlCLDBCQUFBLE9BQUFyK0IsR0FBQSxtQkFBQUEsRUFBQTJnQyxvQkFBQSxPQUFBQyxRQUFBMEIsSUFBQXRpQyxLQUFBLENBQXlMeUwsRUFBQStaLFdBQUEsS0FBa0IvWixFQUFBd3JCLGVBQUFoMUIsRUFBK0JvM0IsR0FBQTV0QixFQUFaeEosRUFBQXkrQixHQUFBajFCLEVBQUFkLEVBQUExSSxJQUFvQixNQUFBSCxHQUFTMkosSUFBQXVKLGFBQVcsT0FBQXZKLEdBQWdCc0MsR0FBQTh6QixHQUFBNy9CLEdBQVEsU0FIcUI5QixHQUFBLEVBQUF1Z0MsR0FBQXAxQixJQUdWLE1BQXdELEdBQXpDZzJCLElBQUEsRUFBTXJILEdBQUFELEdBQUFELEdBQUFvSCxHQUFBaDBCLGtCQUFBLEtBQW1DaE4sRUFBQW1PLEdBQUEsS0FBQXZNLEVBQUF5Z0MsYUFBQSxVQUFnQyxVQUFBeDBCLEdBQUFqTSxFQUFBeWdDLGFBQUEsU0FBcUMsQ0FDemMsR0FBaEMsUUFEOGVyaUMsRUFBQTRCLEVBQUFtTCxRQUFBa1ksWUFDOWVya0IsRUFBQSxPQUF5QnVOLEdBQUEsS0FBT2t6QixHQUFBLENBQTBFLEdBQW5Fdi9CLEVBQUFGLEVBQUFnMkIsa0JBQXNCNzFCLEVBQUFILEVBQUFxMkIsb0JBQXdCMXNCLEVBQUEzSixFQUFBbTJCLGlCQUFxQixJQUFBajJCLEtBQUEvQixHQUFBLElBQUFnQyxLQUFBaEMsR0FBQSxJQUFBd0wsS0FBQXhMLEVBQTZFLE9BQXRDKzNCLEdBQUFsMkIsRUFBQTdCLFFBQVF1aUMsR0FBQTFnQyxFQUFBNUIsRUFBQUQsRUFBQTZCLEVBQUFtMUIsZ0JBQUEsR0FBcUMsSUFBQW4xQixFQUFBODFCLFVBQUE3MUIsRUFBK0csT0FBNUZELEVBQUE4MUIsVUFBQSxFQUFjMzNCLEVBQUE2QixFQUFBdTJCLDJCQUFBcDRCLEVBQWlDOEIsRUFBQUQsRUFBQW0xQixlQUFBLGdCQUE4QnVMLEdBQUExZ0MsRUFBQTVCLEVBQUFELEVBQUE4QixHQUFBLEdBQXVCQSxJQUFBLElBQUF1L0IsSUFBQXRKLEdBQUFsMkIsRUFBQTdCLElBQUE4QixFQUFBLGVBQUFxMkIsR0FBQXQyQixFQUFBN0IsS0FBQXFoQyxRQUFBdi9CLEtBQUEsZUFBQXM1QixNQUFBdDVCLEVBQUF1L0IsR0FBQXYvQixFQUFBeWdDLEdBQUExZ0MsRUFBQTVCLEVBQUFELEVBQUE2QixFQUFBbTFCLGVBQUEsRUFBQWwxQixFQUFBLEVBQUFBLEtBQUFELEVBQUFvZ0MsNEJBQUFqaUMsRUFBQTZCLEVBQUF5Z0MsYUFBQXJpQyxJQUNyVCxTQUFBdy9CLEdBQUE1OUIsRUFBQUMsR0FBaUIsUUFBQTlCLEVBQUE2QixFQUFBa1QsT0FBbUIsT0FBQS9VLEdBQVMsQ0FBRSxPQUFBQSxFQUFBMFUsS0FBYyxXQUFBelUsRUFBQUQsRUFBQWdVLFVBQXlCLHNCQUFBaFUsRUFBQTJKLEtBQUF5MEIsMEJBQUEsbUJBQUFuK0IsRUFBQXlnQyxvQkFBQSxPQUFBQyxRQUFBMEIsSUFBQXBpQyxJQUFrTCxPQUF6Qms1QixHQUFBbjVCLEVBQXJCNkIsRUFBQTQrQixHQUFBemdDLEVBQVY2QixFQUFBNjNCLEdBQUE1M0IsRUFBQUQsR0FBVSxrQkFBNkIwNUIsR0FBQXY3QixFQUFBLFlBQXdCLE1BQU0sT0FBK0QsT0FBekJtNUIsR0FBQW41QixFQUFyQjZCLEVBQUEwK0IsR0FBQXZnQyxFQUFqQjZCLEVBQUE2M0IsR0FBQTUzQixFQUFBRCxHQUFpQixrQkFBNkIwNUIsR0FBQXY3QixFQUFBLFlBQXdCQSxJQUFBK1UsT0FBVyxJQUFBbFQsRUFBQTZTLE1BQUF5a0IsR0FBQXQzQixFQUFBN0IsRUFBQXVnQyxHQUFBMStCLEVBQUE3QixFQUFBMDVCLEdBQUE1M0IsRUFBQUQsR0FBQSxhQUFBMDVCLEdBQUExNUIsRUFBQSxhQUN0VyxTQUFBdzVCLEdBQUF4NUIsRUFBQUMsR0FBc04sT0FBck0sSUFBQXEvQixHQUFBdC9CLEVBQUFzL0IsR0FBQUMsR0FBQXYvQixFQUFBMC9CLEdBQUEsV0FBQWp6QixHQUFBLEVBQUF4TSxFQUFBaEIsTUFBQWUsRUFBQTJnQyxHQUFBLDhCQUFBM2dDLEVBQUEseUNBQUFBLEVBQUEsbUJBQUF1TSxJQUFBdk0sSUFBQXlNLE1BQUF6TSxLQUFBLFdBQTBLMmdDLEtBQUEsSUFBQUMsSUFBQTVnQyxFQUFBNGdDLFNBQUE1Z0MsR0FBMkJBLEVBQ3ROLFNBQUF1Z0MsR0FBQXZnQyxFQUFBQyxFQUFBOUIsRUFBQUMsR0FBcUIsSUFBQThCLEVBQUFGLEVBQUFvMkIsc0JBQThCajJCLEVBQUFILEVBQUFxMkIsb0JBQTRCLE9BQUFuMkIsR0FBQTlCLEdBQUE4QixHQUFBOUIsR0FBQStCLEVBQUEsQ0FBc0JBLEVBQUFELEVBQUE5QixFQUFNNEIsRUFBQTgxQixVQUFBLEVBQWMsSUFBQW5zQixFQUFBM0osRUFBQW0yQixrQkFBeUIsSUFBQXhzQixLQUFBeEosS0FBQUgsRUFBQW0yQixpQkFBQWgyQixHQUFtQzgxQixHQUFBOTFCLEVBQUFILFFBQVE2MUIsR0FBQTcxQixFQUFBRSxFQUFBczVCLEdBQUF0NUIsRUFBQXE1QixLQUFBdDVCLElBQThCLE1BQUFBLEVBQUFoQixPQUFBZSxJQUFBdU0sSUFBQUUsS0FBQXJPLElBQUFtTyxHQUFBLE1BQXVDczBCLEdBQUE1Z0MsRUFBQUMsR0FBUSxNQUFBRCxFQUFBaEIsUUFBQTRoQyxHQUFBMWlDLEVBQUErQixHQUFBLElBQUEvQixFQUFBMFUsS0FBQSxPQUFBMVUsRUFBQWdVLGFBQUFsUyxFQUFBaTNCLEdBQUFoM0IsSUFBQTJTLElBQUEsRUFBQXlrQixHQUFBbjVCLEVBQUE4QixLQUFzRyxLQUFuQjlCLEVBQUE2QixFQUFBbTFCLGlCQUFtQjJMLEdBQUE5Z0MsRUFBQTdCLEdBQ2hYLFNBQUEwaUMsR0FBQTdnQyxFQUFBQyxHQUFpQkQsRUFBQW0xQixlQUFBbDFCLElBQUFELEVBQUFtMUIsZUFBQWwxQixHQUF5QyxJQUFBOUIsRUFBQTZCLEVBQUFxakIsVUFBa0IsT0FBQWxsQixLQUFBZzNCLGVBQUFsMUIsSUFBQTlCLEVBQUFnM0IsZUFBQWwxQixHQUFtRCxJQUFBN0IsRUFBQTRCLEVBQUFrVCxPQUFBaFQsRUFBQSxLQUFzQixVQUFBOUIsR0FBQSxJQUFBNEIsRUFBQTZTLElBQUEzUyxFQUFBRixFQUFBbVMsZUFBcUMsS0FBVSxPQUFBL1QsR0FBUyxDQUFnSSxHQUE5SEQsRUFBQUMsRUFBQWlsQixVQUFjamxCLEVBQUE4MkIsb0JBQUFqMUIsSUFBQTdCLEVBQUE4MkIsb0JBQUFqMUIsR0FBbUQsT0FBQTlCLEtBQUErMkIsb0JBQUFqMUIsSUFBQTlCLEVBQUErMkIsb0JBQUFqMUIsR0FBNkQsT0FBQTdCLEVBQUE4VSxRQUFBLElBQUE5VSxFQUFBeVUsSUFBQSxDQUErQjNTLEVBQUE5QixFQUFBK1QsVUFBYyxNQUFNL1QsSUFBQThVLE9BQVcsT0FBQWhULEVBQzNZLFNBQUF3NUIsR0FBQTE1QixFQUFBQyxHQUEyQixRQUFWRCxFQUFBNmdDLEdBQUE3Z0MsRUFBQUMsT0FBVXMvQixJQUFBLElBQUE5eUIsSUFBQXhNLEVBQUF3TSxJQUFBb3pCLEtBQUFoSyxHQUFBNzFCLEVBQUFDLEdBQUFzL0IsS0FBQUcsSUFBQW56QixLQUFBdk0sR0FBQThnQyxHQUFBOWdDLElBQUFtMUIsZ0JBQUE0TCxHQUFBQyxLQUFBRCxHQUFBLEVBQUEvaEMsRUFBQSxTQUF3RyxTQUFBaWlDLEdBQUFqaEMsRUFBQUMsRUFBQTlCLEVBQUFDLEVBQUE4QixHQUF1QixJQUFBQyxFQUFBbS9CLEdBQVNBLEdBQUEsV0FBYyxJQUFJLE9BQUF0L0IsRUFBQUMsRUFBQTlCLEVBQUFDLEVBQUE4QixHQUFrQixRQUFRby9CLEdBQUFuL0IsR0FBTSxJQUFBK2dDLEdBQUEsS0FBQTEwQixHQUFBLEtBQUEyMEIsR0FBQSxFQUFBQyxRQUFBLEVBQUFsMEIsSUFBQSxFQUFBbTBCLEdBQUEsS0FBQWowQixHQUFBLEVBQUF3ekIsR0FBQSxFQUFBVSxJQUFBLEVBQUFDLEdBQUEsS0FBQTl4QixJQUFBLEVBQUEreEIsSUFBQSxFQUFBYixJQUFBLEVBQUFjLEdBQUEsS0FBQUMsR0FBQXYwQixFQUFBdzBCLGVBQUFDLEdBQUEsWUFBQUYsR0FBQSxNQUFBRyxHQUFBRCxHQUFBWixHQUFBLEdBQUFELEdBQUEsRUFBQWUsR0FBQSxLQUFxSyxTQUFBQyxLQUFjSCxHQUFBLGFBQUF6MEIsRUFBQXcwQixlQUFBRCxJQUFBLE1BQ3hZLFNBQUFNLEdBQUFoaUMsRUFBQUMsR0FBaUIsT0FBQWtoQyxHQUFBLENBQVcsR0FBQWxoQyxFQUFBa2hDLEdBQUEsT0FBZSxPQUFBQyxJQUFBajBCLEVBQUEyeUIsd0JBQUFzQixJQUEwQ0QsR0FBQWxoQyxFQUFLRCxFQUFBbU4sRUFBQXcwQixlQUFBRCxHQUF1Qk4sR0FBQWowQixFQUFBODBCLDBCQUFBQyxHQUFBLENBQW9DQyxRQUFBLGVBQUFsaUMsR0FBQUQsSUFBOEIsU0FBQTBnQyxHQUFBMWdDLEVBQUFDLEVBQUE5QixFQUFBQyxFQUFBOEIsR0FBdUJGLEVBQUFtMUIsZUFBQS8yQixFQUFtQixJQUFBOEIsR0FBQW1nQyxLQUFBLEVBQUFuZ0MsSUFBQUYsRUFBQW9pQyxjQUFBclAsR0FBZ0gsU0FBQS95QixFQUFBQyxFQUFBOUIsR0FBbUI2QixFQUFBb2dDLDRCQUFBamlDLEVBQWdDNkIsRUFBQXlnQyxhQUFBeGdDLEVBQWlCOGhDLEtBQUtGLEdBQUFELEdBQU1TLEdBQUFyaUMsRUFBQTdCLElBQS9MbUIsS0FBQSxLQUFBVSxFQUFBQyxFQUFBOUIsR0FBQStCLEtBQUFGLEVBQUFvZ0MsNEJBQUFqaUMsRUFBQTZCLEVBQUF5Z0MsYUFBQXhnQyxHQUF1TSxTQUFBczVCLEtBQWMsT0FBQXJzQixHQUFBMjBCLElBQWVTLEtBQUssSUFBQWwxQixJQUFBLElBQUFBLEtBQUEyMEIsS0FBQUYsR0FBQUQsSUFBMkJDLElBQ2plLFNBQUFmLEdBQUE5Z0MsRUFBQUMsR0FBaUIsT0FBQUQsRUFBQXVpQyxtQkFBQXZpQyxFQUFBbTFCLGVBQUFsMUIsRUFBQSxPQUFBdU0sSUFBQTAwQixHQUFBMTBCLEdBQUF4TSxJQUFBdWlDLGtCQUFBdmlDLElBQUF3TSxNQUFBKzFCLGtCQUFBdmlDLEdBQUF1aUMsa0JBQUFyQixJQUFBamhDLEVBQUFELEVBQUFtMUIsaUJBQUFuMUIsRUFBQW0xQixlQUFBbDFCLEdBQWtMaU4sS0FBQXVDLEdBQUEreEIsS0FBQUgsR0FBQXJoQyxFQUFBb04sR0FBQSxXQUFBbzFCLEdBQUF4aUMsRUFBQSw2QkFBQUMsRUFBQXdpQyxHQUFBLGVBQUFULEdBQUFoaUMsRUFBQUMsSUFDbk0sU0FBQXFpQyxLQUFjLElBQUF0aUMsRUFBQSxFQUFBQyxFQUFBLEtBQWUsVUFBQXVNLEdBQUEsUUFBQXJPLEVBQUFxTyxHQUFBcE8sRUFBQThpQyxHQUE2QixPQUFBOWlDLEdBQVMsQ0FBRSxJQUFBOEIsRUFBQTlCLEVBQUErMkIsZUFBdUIsT0FBQWoxQixFQUFBLENBQTZDLElBQW5DLE9BQUEvQixHQUFBLE9BQUFxTyxLQUFBeE4sRUFBQSxPQUFtQ1osTUFBQW1rQyxrQkFBQSxDQUE0QnJCLEdBQUExMEIsR0FBQXBPLEVBQUFta0Msa0JBQUEsS0FBOEIsTUFBTSxHQUFBbmtDLElBQUE4aUMsTUFBQWhoQyxFQUFBOUIsRUFBQW1rQyxrQkFBQS8xQixHQUFBKzFCLGtCQUFBcmlDLEVBQUE5QixFQUFBbWtDLGtCQUFBLFNBQXVGLElBQUFua0MsSUFBQW9PLEdBQUEsRUFBZUEsR0FBQXJPLEdBQUlva0Msa0JBQUFyQixHQUF1QjlpQyxFQUFBbWtDLGtCQUFBLEtBQXlCLE1BQU1wa0MsRUFBQW9rQyxrQkFBQW5rQyxFQUFBbWtDLGtCQUFBbmtDLEVBQUFta0Msa0JBQUEsS0FBc0Vua0MsRUFBQUQsRUFBQW9rQyxzQkFBc0IsQ0FBb0IsR0FBZnJpQyxFQUFBRixNQUFBRSxFQUFBRCxFQUFBN0IsR0FBZUEsSUFBQW9PLEdBQUEsTUFBZSxnQkFDeGV4TSxFQUFBLE1BQVE3QixFQUFBQyxFQUFJQSxJQUFBbWtDLG1CQUF1QmxCLEdBQUFwaEMsRUFBS21OLEdBQUFwTixFQUFJLElBQUEwaUMsSUFBQSxFQUFVLFNBQUFyQyxLQUFjLFFBQUFxQyxNQUFBdjFCLEVBQUF3MUIseUJBQUFELElBQUEsR0FBZ0QsU0FBQVIsS0FBYyxJQUFJLElBQUE3QixNQUFBLE9BQUFhLEdBQUEsQ0FBcUJhLEtBQUssSUFBQS9oQyxFQUFBa2hDLEdBQVMsR0FBRyxJQUFBamhDLEVBQUFELEVBQUFtMUIsZUFBdUIsSUFBQWwxQixHQUFBMmhDLElBQUEzaEMsSUFBQUQsRUFBQXUyQiwyQkFBQXFMLElBQWdENWhDLElBQUF1aUMsd0JBQXNCdmlDLElBQUFraEMsSUFBY3VCLEdBQUEsTUFBUyxRQUFRQyxJQUFBLEdBQ3hTLFNBQUFELEdBQUF6aUMsRUFBQUMsR0FBc0IsR0FBTHFpQyxLQUFLcmlDLEVBQUEsSUFBQThoQyxLQUFBRixHQUFBRCxHQUFvQixPQUFBUCxJQUFBLElBQUFqMEIsSUFBQXBOLEdBQUFvTixNQUFBczFCLElBQUFkLEdBQUF4MEIsS0FBb0NvMUIsR0FBQW5CLEdBQUFqMEIsR0FBQXcwQixHQUFBeDBCLElBQUFrMUIsS0FBQVAsS0FBQUYsR0FBQUQsUUFBK0IsS0FBVSxPQUFBUCxJQUFBLElBQUFqMEIsSUFBQXBOLEdBQUFvTixJQUF1Qm8xQixHQUFBbkIsR0FBQWowQixJQUFBLEdBQUFrMUIsS0FBaUUsR0FBL0NyaUMsSUFBQWtoQyxHQUFBLEVBQUFDLEdBQUEsTUFBa0IsSUFBQWgwQixJQUFBNDBCLEdBQUFYLEdBQUFqMEIsSUFBZ0IyekIsR0FBQSxFQUFLZSxHQUFBLEtBQVEsT0FBQUwsR0FBQSxJQUFBemhDLEVBQUF5aEMsTUFBQSxLQUFBeGhDLEVBQUEsRUFBa0NBLEVBQUFELEVBQUFpQyxPQUFXaEMsSUFBQSxDQUFLLElBQUE5QixFQUFBNkIsRUFBQUMsR0FBVyxJQUFJOUIsRUFBQXlrQyxjQUFnQixNQUFBeGtDLEdBQVNrakMsU0FBQSxFQUFBQyxHQUFBbmpDLElBQWtCLEdBQUFrakMsR0FBQSxNQUFBdGhDLEVBQUF1aEMsTUFBQSxLQUFBRCxJQUFBLEVBQUF0aEMsRUFBa0MsU0FBQXFpQyxHQUFBcmlDLEVBQUFDLEdBQWlCaU4sSUFBQWxPLEVBQUEsT0FBa0JxaUMsR0FBQXJoQyxFQUFLb04sR0FBQW5OLEVBQUl1aUMsR0FBQXhpQyxFQUFBQyxHQUFBLEdBQVd3aUMsR0FBQSxlQUNwWixTQUFBRCxHQUFBeGlDLEVBQUFDLEVBQUE5QixHQUEwQyxHQUF2QitPLElBQUFsTyxFQUFBLE9BQWtCa08sSUFBQSxFQUFLL08sRUFBQSxDQUFNLElBQUFDLEVBQUE0QixFQUFBeWdDLGFBQXFCLE9BQUFyaUMsRUFBQXlrQyxHQUFBN2lDLEVBQUE1QixFQUFBNkIsSUFBQUQsRUFBQXlnQyxhQUFBLFdBQUFyaUMsRUFBQTRCLEVBQUFvaUMsaUJBQUFwaUMsRUFBQW9pQyxlQUFBLEVBQUFuUCxHQUFBNzBCLElBQUEraEMsR0FBQW5nQyxFQUFBN0IsR0FBQSxRQUFBQyxFQUFBNEIsRUFBQXlnQyxnQkFBQUosS0FBQXJnQyxFQUFBeWdDLGFBQUFyaUMsRUFBQXlrQyxHQUFBN2lDLEVBQUE1QixFQUFBNkIsVUFBbUssUUFBQTdCLEVBQUE0QixFQUFBeWdDLGNBQUFvQyxHQUFBN2lDLEVBQUE1QixFQUFBNkIsSUFBQUQsRUFBQXlnQyxhQUFBLFdBQUFyaUMsRUFBQTRCLEVBQUFvaUMsaUJBQUFwaUMsRUFBQW9pQyxlQUFBLEVBQUFuUCxHQUFBNzBCLElBQUEraEMsR0FBQW5nQyxFQUFBN0IsR0FBQSxRQUFBQyxFQUFBNEIsRUFBQXlnQyxlQUFBb0MsR0FBQTdpQyxFQUFBNUIsRUFBQTZCLElBQWlLaU4sSUFBQSxFQUN6WSxTQUFBMjFCLEdBQUE3aUMsRUFBQUMsRUFBQTlCLEdBQW1CLElBQUFDLEVBQUE0QixFQUFBOGlDLFdBQW1CLFVBQUExa0MsS0FBQTJrQyxpQkFBQTVrQyxJQUFBLE9BQUFzakMsTUFBQSxDQUFBcmpDLEdBQUFxakMsR0FBQWovQixLQUFBcEUsS0FBQTRrQyxRQUErRyxPQUFwQ2hqQyxFQUFBeWdDLGFBQUF4Z0MsT0FBaUJELEVBQUFtMUIsZUFBQSxHQUEwQm4xQixFQUFBeWdDLGFBQUEsS0FBb0J6Z0MsSUFBQThoQyxHQUFBZixNQUFBZSxHQUFBOWhDLEVBQUErZ0MsR0FBQSxHQUF3QnJCLEdBQUFILElBQUEsRUFBU3YvQixFQUFBbUwsVUFBQWxMLEdBQUFqQixFQUFBLE9BQThELEtBQWhDYixFQUFBNkIsRUFBQW9nQyw4QkFBZ0NwaEMsRUFBQSxPQUFzQmdCLEVBQUFvZ0MsNEJBQUEsRUFBZ0NoaUMsRUFBQTZCLEVBQUFrMUIsZUFBbUIsSUFBQWoxQixFQUFBRCxFQUFBaTFCLG9CQUNzRyxHQUQxRTkyQixFQUFBOEIsRUFBQTlCLEVBQUE4QixFQUFBOUIsRUFBVTRCLEVBQUE4MUIsVUFBQSxFQUFjLElBQUExM0IsR0FBQTRCLEVBQUErMUIsb0JBQUEsRUFBQS8xQixFQUFBZzJCLGtCQUFBLEVBQUFoMkIsRUFBQW8yQixzQkFBQSxFQUFBcDJCLEVBQUFxMkIsb0JBQUEsRUFBQXIyQixFQUFBbTJCLGlCQUM1WSxTQUFBajJCLEVBQUFGLEVBQUFnMkIscUJBQUE5MUIsRUFBQTlCLEVBQUE0QixFQUFBKzFCLG9CQUFBLzFCLEVBQUFnMkIsa0JBQUEsRUFBQWgyQixFQUFBKzFCLG9CQUFBMzNCLElBQUE0QixFQUFBKzFCLG9CQUFBLzFCLEVBQUFnMkIsb0JBQUEsS0FBQTkxQixFQUFBRixFQUFBbzJCLHVCQUFBUCxHQUFBNzFCLEVBQUE1QixLQUFBNEIsRUFBQXEyQixxQkFBQXIyQixFQUFBbzJCLHNCQUFBLEVBQUFwMkIsRUFBQXEyQixvQkFBQSxFQUFBcjJCLEVBQUFtMkIsaUJBQUEsRUFBQU4sR0FBQTcxQixFQUFBNUIsTUFBQThCLEdBQUEyMUIsR0FBQTcxQixFQUFBNUIsSUFBdVQ2M0IsR0FBQSxFQUFBajJCLEdBQVFvL0IsR0FBQWowQixRQUFBLEtBQWdCLEVBQUFsTCxFQUFBeWpCLFVBQUEsT0FBQXpqQixFQUFBODBCLFlBQUE5MEIsRUFBQTgwQixXQUFBRSxXQUFBaDFCLEVBQUE3QixFQUFBNkIsRUFBQSswQixhQUFBNTJCLEVBQUE2QixFQUFBN0IsRUFBQTZCLEVBQUErMEIsWUFBa0d2QyxHQUFBL0ksR0FBYW1CLEdBQVAzcUIsRUFBQXdxQixNQUFPLENBQVUsc0JBQUF4cUIsRUFBQSxJQUFBQyxFQUFBLENBQStCb3JCLE1BQUFyckIsRUFBQXNyQixlQUN2ZTltQixJQUFBeEUsRUFBQXVyQixtQkFBb0J6ckIsRUFBQSxDQUFxRCxJQUFBMkosR0FBN0N4SixLQUFBRCxFQUFBNmUsZ0JBQUE1ZSxFQUFBZ2pCLGFBQUF4UCxRQUE2Q2dZLGNBQUF4ckIsRUFBQXdyQixlQUF1QyxHQUFBaGlCLEdBQUEsSUFBQUEsRUFBQXM1QixXQUFBLENBQXdCOWlDLEVBQUF3SixFQUFBK2hCLFdBQWUsSUFBQTloQixFQUFBRCxFQUFBaWlCLGFBQUEvaUIsRUFBQWMsRUFBQWtpQixVQUFtQ2xpQixJQUFBbWlCLFlBQWdCLElBQUkzckIsRUFBQXlhLFNBQUEvUixFQUFBK1IsU0FBc0IsTUFBQXNvQixHQUFVL2lDLEVBQUEsS0FBTyxNQUFBSCxFQUFRLElBQUFqQyxFQUFBLEVBQUFHLEdBQUEsRUFBQTZLLEdBQUEsRUFBQUksRUFBQSxFQUFBRSxFQUFBLEVBQUFFLEVBQUFySixFQUFBOEwsRUFBQSxLQUFxQy9MLEVBQUEsT0FBUSxDQUFFLFFBQUFnSixFQUFhTSxJQUFBcEosR0FBQSxJQUFBeUosR0FBQSxJQUFBTCxFQUFBcVIsV0FBQTFjLEVBQUFILEVBQUE2TCxHQUFzQ0wsSUFBQVYsR0FBQSxJQUFBYyxHQUFBLElBQUFKLEVBQUFxUixXQUFBN1IsRUFBQWhMLEVBQUE0TCxHQUFzQyxJQUFBSixFQUFBcVIsV0FBQTdjLEdBQUF3TCxFQUFBeWtCLFVBQUEvckIsUUFBd0MsUUFBQWdILEVBQUFNLEVBQUErZ0IsYUFBaUN0ZSxFQUFBekMsRUFBSUEsRUFBQU4sRUFBSSxPQUFNLENBQUUsR0FBQU0sSUFBQXJKLEVBQUEsTUFBQUQsRUFDemIsR0FEMGMrTCxJQUFBN0wsS0FDL2VnSixJQUFBUyxJQUFBMUwsRUFBQUgsR0FBZWlPLElBQUFuRCxLQUFBUSxJQUFBTSxJQUFBWixFQUFBaEwsR0FBc0IsUUFBQWtMLEVBQUFNLEVBQUFraEIsYUFBQSxNQUFzQ3plLEdBQUp6QyxFQUFBeUMsR0FBSTRHLFdBQWVySixFQUFBTixFQUFJOUksR0FBQSxJQUFBakMsSUFBQSxJQUFBNkssRUFBQSxNQUF1QndpQixNQUFBcnRCLEVBQUF3RyxJQUFBcUUsUUFBZTVJLEVBQUEsS0FBWUEsS0FBQSxDQUFNb3JCLE1BQUEsRUFBQTdtQixJQUFBLFFBQWV2RSxFQUFBLEtBQXNELElBQTFDdXlCLEdBQUEsQ0FBSXlRLFlBQUFqakMsRUFBQWtqQyxlQUFBampDLEdBQWdDdXBCLElBQUEsRUFBTWhkLEdBQUF0TyxFQUFRLE9BQUFzTyxJQUFTLENBQUV4TSxHQUFBLEVBQUtDLE9BQUEsRUFBUyxJQUFJLEtBQUssT0FBQXVNLElBQVMsQ0FBRSxPQUFBQSxHQUFBZ1gsVUFBQTFqQixFQUFBLENBQXNCLElBQUFwQixFQUFBOE4sR0FBQTJXLFVBQXNCLFFBQUp6WixFQUFBOEMsSUFBSW1HLEtBQWMsNkJBQUE3UyxFQUErQixjQUFBNEosRUFBQThaLFdBQUEsT0FBQTlrQixFQUFBLENBQXFDLElBQUFvSyxFQUFBcEssRUFBQWsyQixjQUFBMXJCLEVBQUF4SyxFQUFBZzJCLGNBQUFybEIsRUFBQTNGLEVBQUF1SSxVQUFBa3hCLEVBQUE5ekIsRUFBQThxQix3QkFBQXp3QixFQUFBNnFCLGNBQUE3cUIsRUFBQTlCLEtBQzlZa0IsRUFBQThDLEdBQUFsQyxFQUFBOUIsS0FBQWtCLEdBQUFJLEdBQWlCbUcsRUFBQSt6QixvQ0FBQUQsRUFBeUMsTUFBQXJqQyxFQUFRLDBDQUFBQSxFQUE0QyxRQUFBaEIsRUFBQSxRQUFrQjBOLE1BQUF1b0IsWUFBZ0IsTUFBQWlPLEdBQVVoakMsR0FBQSxFQUFBQyxFQUFBK2lDLEVBQVVoakMsSUFBQSxPQUFBd00sSUFBQTFOLEVBQUEsT0FBQTQrQixHQUFBbHhCLEdBQUF2TSxHQUFBLE9BQUF1TSxXQUFBdW9CLGFBQWlFLElBQUF2b0IsR0FBQXRPLEVBQVEsT0FBQXNPLElBQVMsQ0FBRTlOLEdBQUEsRUFBS29LLE9BQUEsRUFBUyxJQUFJLEtBQUssT0FBQTBELElBQVMsQ0FBRSxJQUFBeEQsRUFBQXdELEdBQUFnWCxVQUEyQyxHQUF6QixHQUFBeGEsR0FBQTRrQixHQUFBcGhCLEdBQUF5RixVQUFBLElBQXlCLElBQUFqSixFQUFBLENBQVUsSUFBQU0sRUFBQWtELEdBQUEyVyxVQUFrQixVQUFBN1osRUFBQSxDQUFhLElBQUE1SixFQUFBNEosRUFBQStCLElBQVksT0FBQTNMLElBQUEsbUJBQUFBLElBQUEsTUFBQUEsRUFBQXVMLFFBQUEsT0FBMEQsVUFBQWpDLEdBQWEsT0FBQWcxQixHQUFBeHhCLElBQWFBLEdBQUFnWCxZQUFBLEVBQWdCLE1BQU0sT0FBQXdhLEdBQUF4eEIsSUFBYUEsR0FBQWdYLFlBQ2pmLEVBQUc0YSxHQUFBNXhCLEdBQUEyVyxVQUFBM1csSUFBa0IsTUFBTSxPQUFBNHhCLEdBQUE1eEIsR0FBQTJXLFVBQUEzVyxJQUF5QixNQUFNLE9BQUFzeEIsR0FBQTUwQixFQUFBc0QsSUFBQXRELEVBQUE4SixPQUFBLEtBQUE5SixFQUFBeWEsTUFBQSxLQUFBemEsRUFBQWlhLFlBQUFqYSxFQUFBaWEsVUFBQVEsTUFBQSxLQUFBemEsRUFBQWlhLFVBQUFuUSxPQUFBLE1BQTBHeEcsTUFBQXVvQixZQUFnQixNQUFBaU8sR0FBVXRrQyxHQUFBLEVBQUFvSyxFQUFBazZCLEVBQVV0a0MsSUFBQSxPQUFBOE4sSUFBQTFOLEVBQUEsT0FBQTQrQixHQUFBbHhCLEdBQUExRCxHQUFBLE9BQUEwRCxXQUFBdW9CLGFBQWdILEdBQS9DcjFCLEVBQUE4eUIsR0FBS2xwQixFQUFBa2hCLEtBQU94aEIsRUFBQXRKLEVBQUF1akMsWUFBZ0JuNkIsRUFBQXBKLEVBQUF3akMsZUFBbUI1NUIsSUFBQU4sUUFBQTZWLGVBMUkxRixTQUFBd2tCLEVBQUF2akMsRUFBQUMsR0FBaUIsU0FBQUQsSUFBQUMsS0FBQUQsSUFBQUMsS0FBQUQsR0FBQSxJQUFBQSxFQUFBNGEsWUFBQTNhLEdBQUEsSUFBQUEsRUFBQTJhLFNBQUEyb0IsRUFBQXZqQyxFQUFBQyxFQUFBMlMsWUFBQSxhQUFBNVMsSUFBQXdqQyxTQUFBdmpDLEtBQUFELEVBQUF5akMsNEJBQUEsR0FBQXpqQyxFQUFBeWpDLHdCQUFBeGpDLE1BMEl5RXNqQyxDQUFBcjZCLEVBQUE2VixjQUFBOFosZ0JBQUEzdkIsR0FBQSxDQUFxRSxPQUFBRixHQUFBNmhCLEdBQUEzaEIsS0FBQU0sRUFBQVIsRUFBQXVpQixXQUFBLEtBQUEzckIsRUFBQW9KLEVBQUF0RSxPQUFBOUUsRUFBQTRKLEdBQUEsbUJBQUFOLEtBQUFzaUIsZUFBQWhpQixFQUFBTixFQUFBdWlCLGFBQUFsWixLQUFBbXhCLElBQUE5akMsRUFDN1hzSixFQUFBbkssTUFBQWtELFVBQUFyQyxHQUFBNEosRUFBQU4sRUFBQTZWLGVBQUFuTCxXQUFBcEssRUFBQTJaLGFBQUF4UCxRQUFBZ1ksZUFBQS9yQixJQUFBK3JCLGVBQUF2aUIsRUFBQUYsRUFBQWlNLFlBQUFsVCxPQUFBckQsRUFBQTJULEtBQUFteEIsSUFBQTE2QixFQUFBdWlCLE1BQUFuaUIsR0FBQUosT0FBQSxJQUFBQSxFQUFBdEUsSUFBQTlGLEVBQUEyVCxLQUFBbXhCLElBQUExNkIsRUFBQXRFLElBQUEwRSxJQUFBeEosRUFBQWdYLFFBQUFoWSxFQUFBb0ssSUFBQUksRUFBQUosSUFBQXBLLElBQUF3SyxLQUFBbWhCLEdBQUFyaEIsRUFBQXRLLEdBQUEyUSxFQUFBZ2IsR0FBQXJoQixFQUFBRixHQUFBSSxHQUFBbUcsSUFBQSxJQUFBM1AsRUFBQXFqQyxZQUFBcmpDLEVBQUE4ckIsYUFBQXRpQixFQUFBb2hCLE1BQUE1cUIsRUFBQWdzQixlQUFBeGlCLEVBQUFySCxRQUFBbkMsRUFBQWlzQixZQUFBdGMsRUFBQWliLE1BQUE1cUIsRUFBQWtzQixjQUFBdmMsRUFBQXhOLFdBQUF5SCxJQUFBbTZCLGVBQUFDLFNBQUF4NkIsRUFBQW9oQixLQUFBcGhCLEVBQUFySCxRQUFBbkMsRUFBQWlrQyxrQkFBQWpsQyxFQUFBb0ssR0FBQXBKLEVBQUFra0MsU0FBQXQ2QixHQUFBNUosRUFBQWdYLE9BQUFySCxFQUFBaWIsS0FBQWpiLEVBQUF4TixVQUFBeUgsRUFBQXU2QixPQUFBeDBCLEVBQUFpYixLQUFBamIsRUFBQXhOLFFBQ0FuQyxFQUFBa2tDLFNBQUF0NkIsT0FBbUJBLEVBQUEsR0FBSyxJQUFBNUosRUFBQXNKLEVBQVF0SixJQUFBZ1QsWUFBZSxJQUFBaFQsRUFBQWdiLFVBQUFwUixFQUFBaEgsS0FBQSxDQUF5Qnk2QixRQUFBcjlCLEVBQUFva0MsS0FBQXBrQyxFQUFBcWtDLFdBQUFDLElBQUF0a0MsRUFBQXVrQyxZQUFxRixJQUF2QyxtQkFBQWo3QixFQUFBcXBCLE9BQUFycEIsRUFBQXFwQixRQUF1Q3JwQixFQUFBLEVBQVFBLEVBQUFNLEVBQUF2SCxPQUFXaUgsS0FBQXRKLEVBQUE0SixFQUFBTixJQUFBK3pCLFFBQUFnSCxXQUFBcmtDLEVBQUFva0MsS0FBQXBrQyxFQUFBcTlCLFFBQUFrSCxVQUFBdmtDLEVBQUFza0MsSUFBcUcsSUFBcEN4UixHQUFBLEtBQVFoSixLQUFBK0ksR0FBUUEsR0FBQSxLQUFRenlCLEVBQUFtTCxRQUFBbEwsRUFBWXlNLEdBQUF0TyxFQUFRLE9BQUFzTyxJQUFTLENBQUV0TyxHQUFBLEVBQUs4SyxPQUFBLEVBQVMsSUFBSSxJQUFBTSxFQUFBckwsRUFBUSxPQUFBdU8sSUFBUyxDQUFFLElBQUEwM0IsRUFBQTEzQixHQUFBZ1gsVUFBbUIsTUFBQTBnQixFQUFBLENBQVUsSUFBQUMsRUFBQTMzQixHQUFBMlcsVUFBMkIsT0FBSnprQixFQUFBNEssR0FBSjVKLEVBQUE4TSxJQUFRbUcsS0FBYyw2QkFBNkIsV0FBQXl4QixFQUFBMWtDLEVBQUF1UyxVQUEwQixLQUFBdlMsRUFBQThqQixVQUFBLFVBQUEyZ0IsRUFBQUMsRUFBQTlKLHdCQUMxYyxDQUFLLElBQUErSixFQUFBM2tDLEVBQUE2MEIsY0FBQTcwQixFQUFBa0ksS0FBQXU4QixFQUFBdlAsY0FBQWhwQixHQUFBbE0sRUFBQWtJLEtBQUF1OEIsRUFBQXZQLGVBQTBFd1AsRUFBQWpJLG1CQUFBa0ksRUFBQUYsRUFBQXpQLGNBQUEwUCxFQUFBaEIscUNBQWtGLElBQUFrQixFQUFBNWtDLEVBQUFpMUIsWUFBcUIsT0FBQTJQLEdBQUE3TSxHQUFBLzNCLEVBQUE0a0MsRUFBQUYsR0FBeUIsTUFBTSxXQUFBRyxFQUFBN2tDLEVBQUFpMUIsWUFBNEIsVUFBQTRQLEVBQUEsQ0FBcUIsR0FBUHo3QixFQUFBLEtBQU8sT0FBQXBKLEVBQUFpa0IsTUFBQSxPQUFBamtCLEVBQUFpa0IsTUFBQWhSLEtBQXNDLE9BQUE3SixFQUFBcEosRUFBQWlrQixNQUFBMVIsVUFBMkIsTUFBTSxPQUFBbkosRUFBQXBKLEVBQUFpa0IsTUFBQTFSLFVBQTJCd2xCLEdBQUEvM0IsRUFBQTZrQyxFQUFBejdCLEdBQWEsTUFBTSxXQUFBMDdCLEVBQUE5a0MsRUFBQXVTLFVBQTBCLE9BQUFreUIsR0FBQSxFQUFBemtDLEVBQUE4akIsV0FBQWlQLEdBQUEveUIsRUFBQWtJLEtBQUFsSSxFQUFBazFCLGdCQUFBNFAsRUFBQW5TLFFBQWlFLE1BQU0sT0FBYSxPQUN6ZSxRQUFjLFFBQWMsY0FBYyxRQUFBdnpCLEVBQUEsUUFBa0IsT0FBQW9sQyxFQUFBLENBQVcsSUFBQU8sRUFBQWo0QixHQUFBbkIsSUFBYSxVQUFBbzVCLEVBQUEsQ0FBYyxJQUFBQyxFQUFBbDRCLEdBQUF5RixVQUFtQixPQUFBekYsR0FBQW1HLEtBQWMsV0FBQWd5QixFQUFBRCxFQUFpQixNQUFNLFFBQUFDLEVBQUFELEVBQWMsbUJBQUFELElBQUFFLEdBQUFGLEVBQUF4NUIsUUFBQTA1QixHQUE2Q240QixNQUFBdW9CLFlBQWdCLE1BQUFpTyxHQUFVOWtDLEdBQUEsRUFBQThLLEVBQUFnNkIsRUFBVTlrQyxJQUFBLE9BQUFzTyxJQUFBMU4sRUFBQSxPQUFBNCtCLEdBQUFseEIsR0FBQXhELEdBQUEsT0FBQXdELFdBQUF1b0IsYUFBaUVzSyxHQUFBRyxJQUFBLEVBQVMsbUJBQUFyTCxPQUFBcDBCLEVBQUFrUyxXQUF3Q2l5QixFQUFBbmtDLEVBQUFrMUIsZUFBd0QsS0FBWmwxQixHQUF4QkEsSUFBQWkxQixxQkFBd0JrUCxFQUFBbmtDLEVBQUFta0MsS0FBWXRGLEdBQUEsTUFBaUI5K0IsRUFBQW0xQixlQUFBbDFCLEVBQW1CRCxFQUFBeWdDLGFBQUEsS0FDdmMsU0FBQTlCLEdBQUEzK0IsR0FBZSxPQUFBcWhDLElBQUFyaUMsRUFBQSxPQUEwQnFpQyxHQUFBbE0sZUFBQSxFQUFvQm1NLFNBQUEsRUFBQUMsR0FBQXZoQyxHQUFpQixTQUFBOGtDLEdBQUE5a0MsRUFBQUMsR0FBaUIsSUFBQTlCLEVBQUFzUixHQUFRQSxJQUFBLEVBQUssSUFBSSxPQUFBelAsRUFBQUMsR0FBWSxTQUFRd1AsR0FBQXRSLElBQUErTyxJQUFBdTFCLEdBQUEsZ0JBQTZCLFNBQUFzQyxHQUFBL2tDLEVBQUFDLEdBQWlCLEdBQUF3UCxLQUFBK3hCLEdBQUEsQ0FBV0EsSUFBQSxFQUFNLElBQUksT0FBQXhoQyxFQUFBQyxHQUFZLFFBQVF1aEMsSUFBQSxHQUFPLE9BQUF4aEMsRUFBQUMsR0FBWSxTQUFBK2tDLEdBQUFobEMsRUFBQUMsRUFBQTlCLEdBQW1CLEdBQUF3aUMsR0FBQSxPQUFBM2dDLEVBQUFDLEVBQUE5QixHQUFvQnNSLElBQUF2QyxJQUFBLElBQUEwekIsS0FBQTZCLEdBQUE3QixJQUFBLEdBQUFBLEdBQUEsR0FBK0IsSUFBQXhpQyxFQUFBdWlDLEdBQUF6Z0MsRUFBQXVQLEdBQWFBLEdBQUFreEIsSUFBQSxFQUFRLElBQUksT0FBQTNnQyxFQUFBQyxFQUFBOUIsR0FBYyxRQUFRd2lDLEdBQUF2aUMsR0FBQXFSLEdBQUF2UCxJQUFBZ04sSUFBQXUxQixHQUFBLGdCQUNuVyxTQUFBd0MsR0FBQWpsQyxFQUFBQyxFQUFBOUIsRUFBQUMsRUFBQThCLEdBQXVCLElBQUFDLEVBQUFGLEVBQUFrTCxRQUFnQm5MLEVBQUEsR0FBQTdCLEVBQUEsQ0FBZ0M4QixFQUFBLENBQUcsSUFBQXdqQixHQUEzQnRsQixJQUFBbTdCLHNCQUEyQixJQUFBbjdCLEVBQUEwVSxLQUFBN1QsRUFBQSxPQUFxQyxJQUFBMkssRUFBQXhMLEVBQVEsR0FBRyxPQUFBd0wsRUFBQWtKLEtBQWMsT0FBQWxKLElBQUF3SSxVQUFBNUgsUUFBNkIsTUFBQXRLLEVBQVEsVUFBQW9MLEdBQUExQixFQUFBN0IsTUFBQSxDQUFxQjZCLElBQUF3SSxVQUFBZ2lCLDBDQUF3RCxNQUFBbDBCLEdBQVMwSixJQUFBdUosYUFBVyxPQUFBdkosR0FBZ0IzSyxFQUFBLE9BQVMySyxPQUFBLEVBQVMsT0FBQXhMLEVBQUEwVSxJQUFBLENBQWMsSUFBQWpKLEVBQUF6TCxFQUFBMkosS0FBYSxHQUFBdUQsR0FBQXpCLEdBQUEsQ0FBU3pMLEVBQUE2MUIsR0FBQTcxQixFQUFBeUwsRUFBQUQsR0FBWSxNQUFBM0osR0FBUzdCLEVBQUF3TCxPQUFJeEwsRUFBQXExQixHQUN4VixPQURrVyxPQUFBdnpCLEVBQUFzSyxRQUFBdEssRUFBQXNLLFFBQUFwTSxFQUFBOEIsRUFBQXc4QixlQUFBdCtCLEVBQWdEOEIsRUFBQUMsR0FBSUEsRUFBQWczQixHQUFBOTRCLElBQVErNEIsUUFBQSxDQUFXOEYsUUFBQWo5QixHQUErQixRQUFwQkMsT0FBQSxJQUFBQSxFQUFBLEtBQUFBLEtBQW9CQyxFQUFBazNCLFNBQUFuM0IsR0FDN2R3NUIsS0FBS25DLEdBQUFuM0IsRUFBQUQsR0FBUXc1QixHQUFBdjVCLEVBQUEvQixHQUFRQSxFQUFTLFNBQUE4bUMsR0FBQWxsQyxFQUFBQyxFQUFBOUIsRUFBQUMsR0FBcUIsSUFBQThCLEVBQUFELEVBQUFrTCxRQUFpQyxPQUFBODVCLEdBQUFqbEMsRUFBQUMsRUFBQTlCLEVBQVYrQixFQUFBczVCLEdBQXZCRCxLQUF1QnI1QixHQUFVOUIsR0FBcUIsU0FBQSttQyxHQUFBbmxDLEdBQTJCLEtBQVpBLElBQUFtTCxTQUFZMFksTUFBQSxZQUF3QixPQUFBN2pCLEVBQUE2akIsTUFBQWhSLEtBQW9CLE9BQWdDLGVBQUE3UyxFQUFBNmpCLE1BQUExUixXQUVoTixTQUFBaXpCLEdBQUFwbEMsR0FBZSxJQUFBQyxFQUFBLDhCQUFBczVCLEtBQUEsWUFBcUR0NUIsR0FBQW8vQixLQUFBcC9CLEVBQUFvL0IsR0FBQSxHQUFnQmgxQixLQUFBMDRCLGdCQUFBMUQsR0FBQXAvQixFQUEwQm9LLEtBQUFnN0IsTUFBQXJsQyxFQUFhcUssS0FBQWk3QixXQUFBajdCLEtBQUFrN0IsTUFBQSxLQUFnQ2w3QixLQUFBbTdCLGFBQUFuN0IsS0FBQW83QixjQUFBLEVBQXVDcDdCLEtBQUFxN0IsVUFBQSxLQUFvQnI3QixLQUFBMjRCLFFBQUEsRUFHdkMsU0FBQTJDLEtBQWN0N0IsS0FBQWk3QixXQUFBLEtBQXFCajdCLEtBQUF1N0IsWUFBQSxFQUFtQnY3QixLQUFBdzdCLFVBQUF4N0IsS0FBQXc3QixVQUFBdm1DLEtBQUErSyxNQUVyTyxTQUFBeTdCLEdBQUE5bEMsRUFBQUMsRUFBQTlCLEdBQTBDNkIsRUFBQSxDQUFHbUwsUUFBMUJsTCxFQUFBcUwsR0FBQSxZQUFBckwsRUFBQSxLQUEwQnVwQixjQUFBeHBCLEVBQUEyMUIsZ0JBQUEsS0FBQUksb0JBQUEsRUFBQUMsa0JBQUEsRUFBQUksc0JBQUEsRUFBQUMsb0JBQUEsRUFBQUYsaUJBQUEsRUFBQUwsVUFBQSxFQUFBc0ssNEJBQUEsRUFBQUssYUFBQSxLQUFBMkIsZUFBQSxFQUFBNzNCLFFBQUEsS0FBQWt5QixlQUFBLEtBQUFTLFFBQUEvK0IsRUFBQW80QiwyQkFBQSxFQUFBcEIsZUFBQSxFQUFBMk4sV0FBQSxLQUFBUCxrQkFBQSxNQUF3V2w0QixLQUFBMDdCLGNBQUE5bEMsRUFBQWtTLFVBQUFuUyxFQUV0SixTQUFBZ21DLEdBQUFobUMsR0FBZSxTQUFBQSxHQUFBLElBQUFBLEVBQUE0YSxVQUFBLElBQUE1YSxFQUFBNGEsVUFBQSxLQUFBNWEsRUFBQTRhLFdBQUEsSUFBQTVhLEVBQUE0YSxVQUFBLGlDQUFBNWEsRUFBQWd1QixZQUU5USxTQUFBaVksR0FBQWptQyxFQUFBQyxFQUFBOUIsRUFBQUMsRUFBQThCLEdBQXVCOGxDLEdBQUE3bkMsSUFBQWEsRUFBQSxPQUFzQixJQUFBbUIsRUFBQWhDLEVBQUFpZ0Msb0JBQTRCLEdBQUFqK0IsRUFBQSxDQUFNLHNCQUFBRCxFQUFBLENBQTBCLElBQUF5SixFQUFBekosRUFBUUEsRUFBQSxXQUFhLElBQUFGLEVBQUFtbEMsR0FBQWhsQyxFQUFBNGxDLGVBQTBCcDhCLEVBQUExTCxLQUFBK0IsSUFBVyxNQUFBQSxFQUFBRyxFQUFBK2xDLGtDQUFBbG1DLEVBQUFDLEVBQUFDLEdBQUFDLEVBQUFpTyxPQUFBbk8sRUFBQUMsT0FBaUUsQ0FBcUMsR0FBaENDLEVBQUFoQyxFQUFBaWdDLG9CQUR6TyxTQUFBcCtCLEVBQUFDLEdBQXdJLEdBQXZIQSxZQUFBRCxFQUFBLElBQUFBLEVBQUE0YSxTQUFBNWEsRUFBQTY0QixnQkFBQTc0QixFQUFBc3FCLFdBQUEsV0FBQXJxQixFQUFBMmEsV0FBQTNhLEVBQUFrbUMsYUFBQSxxQkFBdUhsbUMsRUFBQSxRQUFBOUIsRUFBZ0JBLEVBQUE2QixFQUFBK3RCLFdBQWMvdEIsRUFBQTB0QixZQUFBdnZCLEdBQWtCLFdBQUEybkMsR0FBQTlsQyxHQUFBLEVBQUFDLEdBQ2lEbW1DLENBQUFqb0MsRUFBQUMsR0FBZ0MsbUJBQUE4QixFQUFBLENBQTBCLElBQUEwSixFQUFBMUosRUFBUUEsRUFBQSxXQUFhLElBQUFGLEVBQUFtbEMsR0FBQWhsQyxFQUFBNGxDLGVBQTBCbjhCLEVBQUEzTCxLQUFBK0IsSUFBVytrQyxHQUFBLFdBQWMsTUFBQS9rQyxFQUFBRyxFQUFBK2xDLGtDQUFBbG1DLEVBQUFDLEVBQUFDLEdBQUFDLEVBQUFpTyxPQUFBbk8sRUFBQUMsS0FBbUUsT0FBQWlsQyxHQUFBaGxDLEVBQUE0bEMsZUFDOWEsU0FBQU0sR0FBQXJtQyxFQUFBQyxHQUFpQixJQUFBOUIsRUFBQSxFQUFBd0ksVUFBQTFFLGFBQUEsSUFBQTBFLFVBQUEsR0FBQUEsVUFBQSxRQUF3RixPQUF0QnEvQixHQUFBL2xDLElBQUFqQixFQUFBLE9BWitKLFNBQUFnQixFQUFBQyxFQUFBOUIsR0FBbUIsSUFBQUMsRUFBQSxFQUFBdUksVUFBQTFFLGFBQUEsSUFBQTBFLFVBQUEsR0FBQUEsVUFBQSxRQUFrRSxPQUFPaUYsU0FBQWlRLEdBQUF4YyxJQUFBLE1BQUFqQixFQUFBLFFBQUFBLEVBQUF1TixTQUFBM0wsRUFBQXdwQixjQUFBdnBCLEVBQUEyMUIsZUFBQXozQixHQVlyT21vQyxDQUFBdG1DLEVBQUFDLEVBQUEsS0FBQTlCLEdBWHpHeWEsR0FBQSxTQUFBNVksRUFBQUMsRUFBQTlCLEdBQW1CLE9BQUE4QixHQUFVLFlBQThCLEdBQTlCMmUsR0FBQTVlLEVBQUE3QixHQUFxQjhCLEVBQUE5QixFQUFBRSxLQUFTLFVBQUFGLEVBQUEySixNQUFBLE1BQUE3SCxFQUFBLENBQThCLElBQUE5QixFQUFBNkIsRUFBUTdCLEVBQUF5VSxZQUFhelUsSUFBQXlVLFdBQTJGLElBQTNFelUsSUFBQW9vQyxpQkFBQSxjQUFBdmlDLEtBQUFDLFVBQUEsR0FBQWhFLEdBQUEsbUJBQTJFQSxFQUFBLEVBQVFBLEVBQUE5QixFQUFBOEQsT0FBV2hDLElBQUEsQ0FBSyxJQUFBN0IsRUFBQUQsRUFBQThCLEdBQVcsR0FBQTdCLElBQUE0QixHQUFBNUIsRUFBQW9vQyxPQUFBeG1DLEVBQUF3bUMsS0FBQSxDQUEyQixJQUFBdG1DLEVBQUE4UyxFQUFBNVUsR0FBWThCLEdBQUFsQixFQUFBLE1BQWlCd2MsR0FBQXBkLEdBQU13Z0IsR0FBQXhnQixFQUFBOEIsS0FBVSxNQUFNLGVBQUF1c0IsR0FBQXpzQixFQUFBN0IsR0FBd0IsTUFBTSxvQkFBQThCLEVBQUE5QixFQUFBWSxRQUFBb3RCLEdBQUFuc0IsSUFBQTdCLEVBQUFxZ0MsU0FBQXYrQixHQUFBLEtBQ25IbWxDLEdBQUExbEMsVUFBQTBPLE9BQUEsU0FBQXBPLEdBQWdDcUssS0FBQTI0QixRQUFBaGtDLEVBQUEsT0FBNEJxTCxLQUFBbTdCLGNBQUEsRUFBcUJuN0IsS0FBQXE3QixVQUFBMWxDLEVBQWlCLElBQUFDLEVBQUFvSyxLQUFBZzdCLE1BQUFVLGNBQUE1bkMsRUFBQWtNLEtBQUEwNEIsZ0JBQUEza0MsRUFBQSxJQUFBdW5DLEdBQTBGLE9BQTNCVixHQUFBamxDLEVBQUFDLEVBQUEsS0FBQTlCLEVBQUFDLEVBQUF5bkMsV0FBMkJ6bkMsR0FDamFnbkMsR0FBQTFsQyxVQUFBbzlCLEtBQUEsU0FBQTk4QixHQUE4QixHQUFBcUssS0FBQW83QixhQUFBemxDLFFBQXlCLENBQUssSUFBQUMsRUFBQW9LLEtBQUFpN0IsV0FBc0IsT0FBQXJsQyxNQUFBb0ssS0FBQWk3QixXQUFBLElBQWlDcmxDLEVBQUF1QyxLQUFBeEMsS0FDbkhvbEMsR0FBQTFsQyxVQUFBK21DLE9BQUEsV0FBK0IsSUFBQXptQyxFQUFBcUssS0FBQWc3QixNQUFBVSxjQUFBOWxDLEVBQUFELEVBQUE4aUMsV0FBb0YsR0FBdEN6NEIsS0FBQTI0QixRQUFBLE9BQUEvaUMsR0FBQWpCLEVBQUEsT0FBc0NxTCxLQUFBbTdCLGFBQUEsQ0FBc0IsSUFBQXJuQyxFQUFBa00sS0FBQTA0QixnQkFBMkIsR0FBQTlpQyxJQUFBb0ssS0FBQSxDQUFhQSxLQUFBbTdCLGVBQUFybkMsRUFBQWtNLEtBQUEwNEIsZ0JBQUE5aUMsRUFBQThpQyxnQkFBQTE0QixLQUFBK0QsT0FBQS9ELEtBQUFxN0IsWUFBMEYsUUFBQXRuQyxFQUFBLEtBQUE4QixFQUFBRCxFQUFtQkMsSUFBQW1LLE1BQVNqTSxFQUFBOEIsTUFBQXFsQyxNQUFlLE9BQUFubkMsR0FBQVksRUFBQSxPQUF5QlosRUFBQW1uQyxNQUFBcmxDLEVBQUFxbEMsTUFBZ0JsN0IsS0FBQWs3QixNQUFBdGxDLEVBQWFELEVBQUE4aUMsV0FBQXo0QixLQUFrQkEsS0FBQTI0QixRQUFBLEVBQWVYLEdBQUFyaUMsRUFBQTdCLEdBQVE4QixFQUFBb0ssS0FBQWs3QixNQUFhbDdCLEtBQUFrN0IsTUFBQSxLQUFpQyxRQUFqQnRsQyxFQUFBRCxFQUFBOGlDLFdBQUE3aUMsSUFBaUJBLEVBQUF1bEMsY0FBQXZsQyxFQUFBbU8sT0FBQW5PLEVBQUF5bEMsZ0JBQWdEcjdCLEtBQUFrN0IsTUFDbmYsS0FBQWw3QixLQUFBMjRCLFFBQUEsR0FBcUJvQyxHQUFBMWxDLFVBQUFrakMsWUFBQSxXQUFvQyxJQUFBdjRCLEtBQUFvN0IsYUFBQSxDQUF1QnA3QixLQUFBbzdCLGNBQUEsRUFBcUIsSUFBQXpsQyxFQUFBcUssS0FBQWk3QixXQUFzQixVQUFBdGxDLEVBQUEsUUFBQUMsRUFBQSxFQUF3QkEsRUFBQUQsRUFBQWlDLE9BQVdoQyxLQUFBLEVBQUFELEVBQUFDLFFBQWdIMGxDLEdBQUFqbUMsVUFBQW85QixLQUFBLFNBQUE5OEIsR0FBOEIsR0FBQXFLLEtBQUF1N0IsV0FBQTVsQyxRQUF1QixDQUFLLElBQUFDLEVBQUFvSyxLQUFBaTdCLFdBQXNCLE9BQUFybEMsTUFBQW9LLEtBQUFpN0IsV0FBQSxJQUFpQ3JsQyxFQUFBdUMsS0FBQXhDLEtBQy9YMmxDLEdBQUFqbUMsVUFBQW1tQyxVQUFBLFdBQWtDLElBQUF4N0IsS0FBQXU3QixXQUFBLENBQXFCdjdCLEtBQUF1N0IsWUFBQSxFQUFtQixJQUFBNWxDLEVBQUFxSyxLQUFBaTdCLFdBQXNCLFVBQUF0bEMsRUFBQSxRQUFBQyxFQUFBLEVBQXdCQSxFQUFBRCxFQUFBaUMsT0FBV2hDLElBQUEsQ0FBSyxJQUFBOUIsRUFBQTZCLEVBQUFDLEdBQVcsbUJBQUE5QixHQUFBYSxFQUFBLE1BQUFiLEdBQXdDQSxPQUUzTDJuQyxHQUFBcG1DLFVBQUEwTyxPQUFBLFNBQUFwTyxFQUFBQyxHQUFrQyxJQUFBOUIsRUFBQWtNLEtBQUEwN0IsY0FBQTNuQyxFQUFBLElBQUF1bkMsR0FBbUcsT0FBN0MsUUFBcEIxbEMsT0FBQSxJQUFBQSxFQUFBLEtBQUFBLElBQW9CN0IsRUFBQTArQixLQUFBNzhCLEdBQW9CaWxDLEdBQUFsbEMsRUFBQTdCLEVBQUEsS0FBQUMsRUFBQXluQyxXQUF5QnpuQyxHQUFVMG5DLEdBQUFwbUMsVUFBQWduQyxRQUFBLFNBQUExbUMsR0FBaUMsSUFBQUMsRUFBQW9LLEtBQUEwN0IsY0FBQTVuQyxFQUFBLElBQUF3bkMsR0FBc0csT0FBaEQsUUFBcEIzbEMsT0FBQSxJQUFBQSxFQUFBLEtBQUFBLElBQW9CN0IsRUFBQTIrQixLQUFBOThCLEdBQW9Ca2xDLEdBQUEsS0FBQWpsQyxFQUFBLEtBQUE5QixFQUFBMG5DLFdBQTRCMW5DLEdBQVUybkMsR0FBQXBtQyxVQUFBd21DLGtDQUFBLFNBQUFsbUMsRUFBQUMsRUFBQTlCLEdBQStELElBQUFDLEVBQUFpTSxLQUFBMDdCLGNBQUE3bEMsRUFBQSxJQUFBeWxDLEdBQWdHLE9BQTFDLFFBQXBCeG5DLE9BQUEsSUFBQUEsRUFBQSxLQUFBQSxJQUFvQitCLEVBQUE0OEIsS0FBQTMrQixHQUFvQittQyxHQUFBamxDLEVBQUE3QixFQUFBNEIsRUFBQUUsRUFBQTJsQyxXQUFzQjNsQyxHQUMvYjRsQyxHQUFBcG1DLFVBQUFpbkMsWUFBQSxXQUFvQyxJQUFBM21DLEVBQUEsSUFBQW9sQyxHQUFBLzZCLE1BQUFwSyxFQUFBRCxFQUFBK2lDLGdCQUFBNWtDLEVBQUFrTSxLQUFBMDdCLGNBQUEzbkMsRUFBQUQsRUFBQTJrQyxXQUEyRSxVQUFBMWtDLEVBQUFELEVBQUEya0MsV0FBQTlpQyxJQUFBdWxDLE1BQUEsU0FBd0MsQ0FBSyxJQUFBcG5DLEVBQUEsS0FBVyxPQUFBQyxLQUFBMmtDLGlCQUFBOWlDLEdBQStCOUIsRUFBQUMsTUFBQW1uQyxNQUFldmxDLEVBQUF1bEMsTUFBQW5uQyxFQUFVLE9BQUFELE1BQUFvbkMsTUFBQXZsQyxHQUFzQixPQUFBQSxHQUFzSmtaLEdBQUE0ckIsR0FBTTNyQixHQUFBNnJCLEdBQU01ckIsR0FBQSxXQUFjbE0sSUFBQSxJQUFBMHpCLEtBQUE2QixHQUFBN0IsSUFBQSxHQUFBQSxHQUFBLElBSXJhLElBQUFnRyxHQUFBLENBQVFDLGFBQUFSLEdBQUFTLFlBQUEsU0FBQTltQyxHQUF3QyxTQUFBQSxFQUFBLFlBQXVCLE9BQUFBLEVBQUE0YSxTQUFBLE9BQUE1YSxFQUEyQixJQUFBQyxFQUFBRCxFQUFBczVCLG9CQUE0SSxZQUFoSCxJQUFBcjVCLElBQUEsbUJBQUFELEVBQUFvTyxPQUFBcFAsRUFBQSxPQUFBQSxFQUFBLE1BQUFSLE9BQUE4RixLQUFBdEUsS0FBb0ZBLEVBQUEsUUFBUkEsRUFBQTRqQixHQUFBM2pCLElBQVEsS0FBQUQsRUFBQW1TLFdBQXFDK3FCLFFBQUEsU0FBQWw5QixFQUFBQyxFQUFBOUIsR0FBeUIsT0FBQThuQyxHQUFBLEtBQUFqbUMsRUFBQUMsR0FBQSxFQUFBOUIsSUFBeUJpUSxPQUFBLFNBQUFwTyxFQUFBQyxFQUFBOUIsR0FBd0IsT0FBQThuQyxHQUFBLEtBQUFqbUMsRUFBQUMsR0FBQSxFQUFBOUIsSUFBeUI0b0Msb0NBQUEsU0FBQS9tQyxFQUFBQyxFQUFBOUIsRUFBQUMsR0FBOEcsT0FBdkQsTUFBQTRCLFFBQUEsSUFBQUEsRUFBQXM1QixzQkFBQXQ2QixFQUFBLE1BQXVEaW5DLEdBQUFqbUMsRUFBQUMsRUFBQTlCLEdBQUEsRUFBQUMsSUFBc0I0b0MsdUJBQUEsU0FBQWhuQyxHQUMvYyxPQURtZmdtQyxHQUFBaG1DLElBQ2xnQmhCLEVBQUEsUUFBZWdCLEVBQUFvK0Isc0JBQUEyRyxHQUFBLFdBQTRDa0IsR0FBQSxVQUFBam1DLEdBQUEsYUFBNkJBLEVBQUFvK0Isb0JBQUEsVUFBNkIsSUFBUzZJLHNCQUFBLFdBQWtDLE9BQUFaLEdBQUFwMkIsV0FBQSxFQUFBdEosWUFBa0N1Z0Msd0JBQUFwQyxHQUFBcUMsNEJBQUFuQyxHQUFBb0MsVUFBQSxTQUFBcG5DLEVBQUFDLEdBQW1GaU4sSUFBQWxPLEVBQUEsT0FBa0IsSUFBQWIsRUFBQXNSLEdBQVFBLElBQUEsRUFBSyxJQUFJLE9BQUF3eEIsR0FBQWpoQyxFQUFBQyxHQUFlLFFBQVF3UCxHQUFBdFIsRUFBQXNrQyxHQUFBLGlCQUF1QjRFLHlCQUFBLFNBQUFybkMsR0FBc0MsSUFBQUMsRUFBQXdQLEdBQVFBLElBQUEsRUFBSyxJQUFJd3hCLEdBQUFqaEMsR0FBTSxTQUFReVAsR0FBQXhQLElBQUFpTixJQUFBdTFCLEdBQUEsaUJBQTZCdHpCLG1EQUFBLENBQXFEbTRCLE9BQUEsQ0FBQXgwQixFQUM3ZkMsRUFBQUMsRUFBQWpCLEVBQUFFLHlCQUFBeEIsRUFBQWdELEVBQUEsU0FBQXpULEdBQW9EdVIsRUFBQXZSLEVBQUF3VCxJQUFTd0YsR0FBQUMsR0FBQTJRLEdBQUF2WCxJQUFjazFCLG9CQUFBLFNBQUF2bkMsRUFBQUMsR0FBK0UsT0FBNUMrbEMsR0FBQWhtQyxJQUFBaEIsRUFBQSw2QkFBNEMsSUFBQThtQyxHQUFBOWxDLEdBQUEsUUFBQUMsSUFBQSxJQUFBQSxFQUFBaTlCLFlBQThDLFNBQUFsOUIsR0FBYSxJQUFBQyxFQUFBRCxFQUFBd25DLHlCQXpJck4sU0FBQXhuQyxHQUFlLHVCQUFBNkcsK0JBQUEsU0FBZ0UsSUFBQTVHLEVBQUE0RywrQkFBcUMsR0FBQTVHLEVBQUF3bkMsYUFBQXhuQyxFQUFBeW5DLGNBQUEsU0FBMkMsSUFBSSxJQUFBdnBDLEVBQUE4QixFQUFBMG5DLE9BQUEzbkMsR0FBa0JxMEIsR0FBQUUsR0FBQSxTQUFBdjBCLEdBQWtCLE9BQUFDLEVBQUEybkMsa0JBQUF6cEMsRUFBQTZCLEtBQWtDczBCLEdBQUFDLEdBQUEsU0FBQXYwQixHQUFrQixPQUFBQyxFQUFBNG5DLHFCQUFBMXBDLEVBQUE2QixLQUFxQyxNQUFBNUIsTUF5STNDMHBDLENBQUF2b0MsRUFBQSxHQUFjUyxFQUFBLENBQUkrbkMsd0JBQUEsU0FBQS9uQyxHQUE0QyxlQUFSQSxFQUFBNGpCLEdBQUE1akIsSUFBUSxLQUFBQSxFQUFBbVMsV0FBaUNxMUIsd0JBQUEsU0FBQXhuQyxHQUFxQyxPQUFBQyxJQUFBRCxHQUFBLFNBQWpMLENBQXdNLENBQUd3bkMsd0JBQUE3MEIsRUFBQXExQixXQUFBLEVBQUE5NEIsUUFBQSxTQUFBKzRCLG9CQUFBLGNBQ25aLElBQUFDLEdBQUEsQ0FBUTE0QixRQUFBbzNCLElBQVd1QixHQUFBRCxJQUFBdEIsSUFBQXNCLEdBQWVycUMsRUFBQUQsUUFBQXVxQyxHQUFBMzRCLFNBQUEyNEIsaUNDclBsQ3RxQyxFQUFBRCxRQUFtQkYsRUFBUTs7Ozs7Ozs7R0NNZGMsT0FBQUMsZUFBQWIsRUFBQSxjQUE0Q21CLE9BQUEsSUFBVyxJQUFBWCxFQUFBLEtBQUErQixHQUFBLEVBQUF5SixFQUFBLEVBQUFmLEdBQUEsRUFBQTlLLEdBQUEsRUFBQUcsR0FBQSxFQUFBcUIsR0FBQSxFQUF3QyxTQUFBSyxJQUFhLElBQUExQixFQUFBLENBQU8sSUFBQThCLEVBQUE1QixFQUFBKzJCLGVBQXVCNTFCLEVBQUF3SixJQUFBeEosR0FBQSxFQUFXWCxFQUFBSSxFQUFBZ0IsSUFDbEssU0FBQWdKLElBQWEsSUFBQWhKLEVBQUE1QixFQUFBNkIsRUFBQTdCLEVBQUE4RCxLQUFpQixHQUFBOUQsSUFBQTZCLEVBQUE3QixFQUFBLFNBQWdCLENBQUssSUFBQUQsRUFBQUMsRUFBQWdxQyxTQUFpQmhxQyxFQUFBRCxFQUFBK0QsS0FBQWpDLEVBQVdBLEVBQUFtb0MsU0FBQWpxQyxFQUFhNkIsRUFBQWtDLEtBQUFsQyxFQUFBb29DLFNBQUEsS0FBdUJqcUMsRUFBQTZCLEVBQUFvM0IsU0FBYW4zQixFQUFBRCxFQUFBbTFCLGVBQW1CbjFCLElBQUFxb0MsY0FBa0IsSUFBQW5vQyxFQUFBMEosRUFBQW9DLEVBQUFqTyxFQUFZNkwsRUFBQTVKLEVBQUlqQyxFQUFBa0MsRUFBSSxJQUFJLElBQUEwSixFQUFBeEwsSUFBVSxRQUFReUwsRUFBQTFKLEVBQUFuQyxFQUFBaU8sRUFBUSxzQkFBQXJDLEVBQUEsR0FBQUEsRUFBQSxDQUErQnl0QixTQUFBenRCLEVBQUEwK0IsY0FBQXJvQyxFQUFBbTFCLGVBQUFsMUIsRUFBQWlDLEtBQUEsS0FBQWttQyxTQUFBLE1BQW9FLE9BQUFocUMsSUFBQXVMLEVBQUF6SCxLQUFBeUgsRUFBQXkrQixTQUFBeitCLE1BQWdDLENBQUt4TCxFQUFBLEtBQU82QixFQUFBNUIsRUFBSSxHQUFHLEdBQUE0QixFQUFBbTFCLGdCQUFBbDFCLEVBQUEsQ0FBd0I5QixFQUFBNkIsRUFBSSxNQUFNQSxJQUFBa0MsV0FBU2xDLElBQUE1QixHQUFhLE9BQUFELElBQUFDLEVBQUFELElBQUFDLE1BQUF1TCxFQUFBL0osTUFBOEJLLEVBQUE5QixFQUFBaXFDLFVBQWFsbUMsS0FBQS9ELEVBQUFpcUMsU0FBQXorQixFQUFvQkEsRUFBQXpILEtBQUEvRCxFQUFTd0wsRUFBQXkrQixTQUM3ZW5vQyxHQUFHLFNBQUFnSixJQUFhLFFBQUFKLEdBQUEsT0FBQXpLLEdBQUEsSUFBQUEsRUFBQWlxQyxjQUFBLENBQTBDbnFDLEdBQUEsRUFBSyxJQUFJLEdBQUE4SyxVQUFPLE9BQUE1SyxHQUFBLElBQUFBLEVBQUFpcUMsZUFBcUMsUUFBUW5xQyxHQUFBLFNBQUFFLEVBQUF3QixJQUFBTCxHQUFBLElBQXlCLFNBQUFQLEVBQUFnQixHQUFjOUIsR0FBQSxFQUFLLElBQUErQixFQUFBRSxFQUFRQSxFQUFBSCxFQUFJLElBQUksR0FBQUEsRUFBQSxLQUFVLE9BQUE1QixHQUFTLENBQUUsSUFBQUQsRUFBQVAsRUFBQStqQyxlQUE2QixLQUFBdmpDLEVBQUErMkIsZ0JBQUFoM0IsR0FBb0UsTUFBNUMsR0FBQTZLLFVBQU8sT0FBQTVLLEtBQUErMkIsZ0JBQUFoM0IsUUFBZ0QsVUFBQUMsRUFBa0IsR0FBQTRLLFVBQU8sT0FBQTVLLElBQUE4SyxLQUF1QixRQUFRaEwsR0FBQSxFQUFBaUMsRUFBQUYsRUFBQSxPQUFBN0IsRUFBQXdCLElBQUFMLEdBQUEsRUFBQTBKLEtBQzVXLElBQUFPLEVBQUFFLEVBQzhMOUssRUFBQW1LLEVBQUFHLEVBRDlMQyxFQUFBc04sS0FBQXJOLEVBQUEsbUJBQUE0cEIsMkJBQUEsRUFBQTNwQixFQUFBLG1CQUFBNnBCLCtCQUFBLEVBQUE1cEIsRUFBQSxtQkFBQWcvQixpREFBQSxFQUFBLytCLEVBQUEsbUJBQUFnL0IsK0NBQUEsRUFBeVEsU0FBQXorQixFQUFBOUosR0FBY3dKLEVBQUFGLEVBQUEsU0FBQXJKLEdBQWdCb0osRUFBQUssR0FBSzFKLEVBQUFDLEtBQU95SixFQUFBTixFQUFBLFdBQWVHLEVBQUFDLEdBQUt4SixFQUFBcEMsRUFBQStqQyxpQkFBMEIsS0FDalcsb0JBQUE2RyxhQUFBLG1CQUFBQSxZQUFBOXhCLElBQUEsQ0FBdUUsSUFBQXZNLEVBQUFxK0IsWUFBa0I1cUMsRUFBQStqQyxhQUFBLFdBQWdDLE9BQUF4M0IsRUFBQXVNLFlBQWdCOVksRUFBQStqQyxhQUFBLFdBQXFDLE9BQUF4NEIsRUFBQXVOLE9BQzlLLHVCQUFBL0MsZUFBQTgwQixXQUFBLENBQW1ELElBQUFyK0IsRUFBQXVKLE9BQUE4MEIsV0FBd0I3cEMsRUFBQXdMLEVBQUEsR0FBT3JCLEVBQUFxQixFQUFBLEdBQU9sQixFQUFBa0IsRUFBQSxRQUFPLHVCQUFBdUosUUFBQSxtQkFBQUEsT0FBQWtXLGlCQUFBLENBQWtGLElBQUFuZixFQUFBLEtBQUFDLEdBQUEsRUFBQUksRUFBQSxTQUFBL0ssRUFBQUMsR0FBZ0MsVUFBQXlLLEVBQUEsQ0FBYSxJQUFBdk0sRUFBQXVNLEVBQVFBLEVBQUEsS0FBTyxJQUFJQyxFQUFBMUssRUFBQTlCLEVBQUE2QixHQUFTLFFBQVEySyxHQUFBLEtBQVEvTCxFQUFBLFNBQUFvQixFQUFBQyxJQUFnQixJQUFBMEssRUFBQXFvQixXQUFBcDBCLEVBQUEsRUFBQW9CLEVBQUFDLElBQUF5SyxFQUFBMUssRUFBQWd6QixXQUFBam9CLEVBQUE5SyxHQUFBLEVBQUFBLEdBQUEreUIsV0FBQWpvQixFQUFBLDRCQUE4RmhDLEVBQUEsV0FBYTJCLEVBQUEsTUFBUXhCLEVBQUEsV0FBYSxVQUFVdEwsRUFBQStqQyxhQUFBLFdBQWdDLFdBQUFoM0IsRUFBQSxFQUFBQSxPQUFrQixDQUFLLG9CQUFBN0QsVUFDNWQsbUJBQUF3QyxHQUFBeEMsUUFBQTFHLE1BQUEsOEpBQUFtSixHQUFBekMsUUFBQTFHLE1BQUEsMklBQWlXLElBQUE4SyxFQUFBLEtBQUFHLEdBQUEsRUFBQUMsR0FBQSxFQUFBSSxHQUFBLEVBQUFJLEdBQUEsRUFBQUMsRUFBQSxFQUFBRSxFQUFBLEdBQUFNLEVBQUEsR0FBNkNyRCxFQUFBLFdBQWEsT0FBQTZDLEdBQUFuTyxFQUFBK2pDLGdCQUFrQyxJQUFBbDFCLEVBQUEsdUJBQUE4RixLQUFBQyxTQUFBclAsU0FBQSxJQUFBbkIsTUFBQSxHQUM3YjJSLE9BQUFrVyxpQkFBQSxtQkFBQTdwQixHQUE4QyxHQUFBQSxFQUFBOEUsU0FBQTZPLFFBQUEzVCxFQUFBeUQsT0FBQWdKLEVBQUEsQ0FBa0NwQixHQUFBLEVBQUtyTCxFQUFBa0wsRUFBSSxJQUFBakwsRUFBQXFMLEVBQVFKLEVBQUEsS0FBT0ksR0FBQSxFQUFLLElBQUFuTixFQUFBUCxFQUFBK2pDLGVBQUF6aEMsR0FBQSxFQUFrQyxNQUFBNkwsRUFBQTVOLEVBQUEsV0FBQThCLE1BQUE5QixHQUEyRCxPQUF2QnVOLE9BQUEsRUFBQTVCLEVBQUE0QyxJQUFleEIsRUFBQWxMLE9BQUlzTCxFQUFBckwsR0FBdkRDLEdBQUEsRUFBa0UsVUFBQUYsRUFBQSxDQUFhOEwsR0FBQSxFQUFLLElBQUk5TCxFQUFBRSxHQUFLLFFBQVE0TCxHQUFBLE9BQVEsR0FBSyxJQUFBWSxFQUFBLFNBQUExTSxHQUFrQixVQUFBa0wsRUFBQSxDQUFhcEIsRUFBQTRDLEdBQUssSUFBQXpNLEVBQUFELEVBQUErTCxFQUFBUSxFQUFZdE0sRUFBQXNNLEdBQUFOLEVBQUFNLEdBQUEsRUFBQXRNLE1BQUEsR0FBQXNNLEVBQUF0TSxFQUFBZ00sSUFBQWhNLEdBQUFnTSxFQUFBaE0sRUFBb0M4TCxFQUFBL0wsRUFBQXVNLEVBQU1sQixPQUFBLEVBQUFzSSxPQUFBKzBCLFlBQUFqOEIsRUFBQSxXQUFvQ2YsR0FBQSxHQUFXOU0sRUFBQSxTQUFBb0IsRUFBQUMsR0FBZ0JpTCxFQUFBbEwsRUFBSXNMLEVBQUFyTCxFQUFJNkwsR0FBQSxFQUFBN0wsRUFBQTBULE9BQUErMEIsWUFBQWo4QixFQUFBLEtBQUFmLE9BQUEsRUFBQTVCLEVBQUE0QyxLQUFpRDNELEVBQUEsV0FBYW1DLEVBQUEsS0FBT0csR0FBQSxFQUFLQyxHQUFBLEdBQzVlMU4sRUFBQStxQywyQkFBQSxFQUFxQy9xQyxFQUFBZ3JDLDhCQUFBLEVBQXdDaHJDLEVBQUFpckMsd0JBQUEsRUFBa0NqckMsRUFBQWtyQyxzQkFBQSxFQUFnQ2xyQyxFQUFBbXJDLHFCQUFBLEVBQStCbnJDLEVBQUFvckMseUJBQUEsU0FBQWhwQyxFQUFBQyxHQUErQyxPQUFBRCxHQUFVLHlDQUF5QyxRQUFBQSxFQUFBLEVBQVksSUFBQTdCLEVBQUF5TCxFQUFBMUosRUFBQTJJLEVBQVllLEVBQUE1SixFQUFJNkksRUFBQWpMLEVBQUErakMsZUFBeUIsSUFBSSxPQUFBMWhDLElBQVcsUUFBUTJKLEVBQUF6TCxFQUFBMEssRUFBQTNJLEVBQUErSSxNQUM1VnJMLEVBQUFxa0MsMEJBQUEsU0FBQWppQyxFQUFBQyxHQUFnRCxJQUFBOUIsR0FBQSxJQUFBMEssSUFBQWpMLEVBQUErakMsZUFBc0Msb0JBQUExaEMsR0FBQSxPQUFBQSxHQUFBLGlCQUFBQSxFQUFBa2lDLFFBQUFsaUMsRUFBQTlCLEVBQUE4QixFQUFBa2lDLGFBQTRFLE9BQUF2NEIsR0FBZSxPQUFBM0osRUFBQTlCLEdBQUEsRUFBYyxNQUFNLE9BQUE4QixFQUFBOUIsRUFBQSxJQUFlLE1BQU0sT0FBQThCLEVBQUE5QixFQUFBLFdBQXNCLE1BQU0sT0FBQThCLEVBQUE5QixFQUFBLElBQWUsTUFBTSxRQUFBOEIsRUFBQTlCLEVBQUEsSUFBd0YsR0FBeEU2QixFQUFBLENBQUdvM0IsU0FBQXAzQixFQUFBcW9DLGNBQUF6K0IsRUFBQXVyQixlQUFBbDFCLEVBQUFpQyxLQUFBLEtBQUFrbUMsU0FBQSxNQUFxRSxPQUFBaHFDLElBQUE0QixFQUFBa0MsS0FBQWxDLEVBQUFvb0MsU0FBQXBvQyxFQUFBSixRQUFzQyxDQUFLekIsRUFBQSxLQUFPLElBQUErQixFQUFBOUIsRUFBUSxHQUFHLEdBQUE4QixFQUFBaTFCLGVBQUFsMUIsRUFBQSxDQUF1QjlCLEVBQUErQixFQUFJLE1BQU1BLElBQUFnQyxXQUFTaEMsSUFBQTlCLEdBQWEsT0FBQUQsSUFBQUMsRUFBQUQsSUFBQUMsTUFBQTRCLEVBQUFKLE1BQ3ZkSyxFQUFBOUIsRUFBQWlxQyxVQUFhbG1DLEtBQUEvRCxFQUFBaXFDLFNBQUFwb0MsRUFBb0JBLEVBQUFrQyxLQUFBL0QsRUFBUzZCLEVBQUFvb0MsU0FBQW5vQyxFQUFhLE9BQUFELEdBQVVwQyxFQUFBa2lDLHdCQUFBLFNBQUE5L0IsR0FBNEMsSUFBQUMsRUFBQUQsRUFBQWtDLEtBQWEsVUFBQWpDLEVBQUEsQ0FBYSxHQUFBQSxJQUFBRCxFQUFBNUIsRUFBQSxTQUFnQixDQUFLNEIsSUFBQTVCLE1BQUE2QixHQUFhLElBQUE5QixFQUFBNkIsRUFBQW9vQyxTQUFpQmpxQyxFQUFBK0QsS0FBQWpDLEVBQVNBLEVBQUFtb0MsU0FBQWpxQyxFQUFhNkIsRUFBQWtDLEtBQUFsQyxFQUFBb29DLFNBQUEsT0FBeUJ4cUMsRUFBQXFyQyxzQkFBQSxTQUFBanBDLEdBQTBDLElBQUFDLEVBQUEySixFQUFRLGtCQUFrQixJQUFBekwsRUFBQXlMLEVBQUExSixFQUFBMkksRUFBWWUsRUFBQTNKLEVBQUk0SSxFQUFBakwsRUFBQStqQyxlQUF5QixJQUFJLE9BQUEzaEMsRUFBQWlRLE1BQUE1RixLQUFBMUQsV0FBK0IsUUFBUWlELEVBQUF6TCxFQUFBMEssRUFBQTNJLEVBQUErSSxPQUFlckwsRUFBQXNyQyxpQ0FBQSxXQUFvRCxPQUFBdC9CLEdBQ3BjaE0sRUFBQStrQyxxQkFBQSxXQUF3QyxPQUFBeGlDLElBQUEsT0FBQS9CLEtBQUErMkIsZUFBQXAzQixHQUFBbUwsb0NDWHhDLElBQUFpZ0MsRUFBMkJ6ckMsRUFBUSxJQUVuQyxTQUFBMHJDLEtBRUF2ckMsRUFBQUQsUUFBQSxXQUNBLFNBQUF5ckMsRUFBQS8rQixFQUFBZy9CLEVBQUFDLEVBQUEzaEIsRUFBQTRoQixFQUFBQyxHQUNBLEdBQUFBLElBQUFOLEVBQUEsQ0FJQSxJQUFBaGpDLEVBQUEsSUFBQTdGLE1BQ0EsbUxBS0EsTUFEQTZGLEVBQUE5SCxLQUFBLHNCQUNBOEgsR0FHQSxTQUFBdWpDLElBQ0EsT0FBQUwsRUFGQUEsRUFBQU0sV0FBQU4sRUFNQSxJQUFBTyxFQUFBLENBQ0FDLE1BQUFSLEVBQ0FTLEtBQUFULEVBQ0FoOUIsS0FBQWc5QixFQUNBdnZCLE9BQUF1dkIsRUFDQTdwQyxPQUFBNnBDLEVBQ0FVLE9BQUFWLEVBQ0FXLE9BQUFYLEVBRUFZLElBQUFaLEVBQ0FhLFFBQUFSLEVBQ0F6TSxRQUFBb00sRUFDQWMsV0FBQVQsRUFDQWxmLEtBQUE2ZSxFQUNBZSxTQUFBVixFQUNBVyxNQUFBWCxFQUNBWSxVQUFBWixFQUNBYSxNQUFBYixFQUNBYyxNQUFBZCxHQU1BLE9BSEFFLEVBQUFhLGVBQUFyQixFQUNBUSxFQUFBYyxVQUFBZCxFQUVBQSxpQ0M5Q0EvckMsRUFBQUQsUUFGQSw2RUNpQkEsU0FBQStCLEVBQUE0RCxFQUFBb25DLEdBQ0EsT0FBQW5zQyxPQUFBa0IsVUFBQUMsZUFBQTFCLEtBQUFzRixFQUFBb25DLEdBR0E5c0MsRUFBQUQsUUFBQSxTQUFBZ3RDLEVBQUFDLEVBQUFDLEVBQUE3cEMsR0FDQTRwQyxLQUFBLElBQ0FDLEtBQUEsSUFDQSxJQUFBdm5DLEVBQUEsR0FFQSxvQkFBQXFuQyxHQUFBLElBQUFBLEVBQUEzb0MsT0FDQSxPQUFBc0IsRUFHQSxJQUFBd25DLEVBQUEsTUFDQUgsSUFBQTVrQyxNQUFBNmtDLEdBRUEsSUFBQUcsRUFBQSxJQUNBL3BDLEdBQUEsaUJBQUFBLEVBQUErcEMsVUFDQUEsRUFBQS9wQyxFQUFBK3BDLFNBR0EsSUFBQUMsRUFBQUwsRUFBQTNvQyxPQUVBK29DLEVBQUEsR0FBQUMsRUFBQUQsSUFDQUMsRUFBQUQsR0FHQSxRQUFBbHRDLEVBQUEsRUFBaUJBLEVBQUFtdEMsSUFBU250QyxFQUFBLENBQzFCLElBRUFvdEMsRUFBQUMsRUFBQXRpQyxFQUFBSSxFQUZBRSxFQUFBeWhDLEVBQUE5c0MsR0FBQTJDLFFBQUFzcUMsRUFBQSxPQUNBSyxFQUFBamlDLEVBQUFrSCxRQUFBeTZCLEdBR0FNLEdBQUEsR0FDQUYsRUFBQS9oQyxFQUFBcEcsT0FBQSxFQUFBcW9DLEdBQ0FELEVBQUFoaUMsRUFBQXBHLE9BQUFxb0MsRUFBQSxLQUVBRixFQUFBL2hDLEVBQ0FnaUMsRUFBQSxJQUdBdGlDLEVBQUF3aUMsbUJBQUFILEdBQ0FqaUMsRUFBQW9pQyxtQkFBQUYsR0FFQXhyQyxFQUFBNEQsRUFBQXNGLEdBRUs4RCxFQUFBcEosRUFBQXNGLElBQ0x0RixFQUFBc0YsR0FBQXJHLEtBQUF5RyxHQUVBMUYsRUFBQXNGLEdBQUEsQ0FBQXRGLEVBQUFzRixHQUFBSSxHQUpBMUYsRUFBQXNGLEdBQUFJLEVBUUEsT0FBQTFGLEdBR0EsSUFBQW9KLEVBQUFySixNQUFBcUosU0FBQSxTQUFBMitCLEdBQ0EseUJBQUE5c0MsT0FBQWtCLFVBQUF5RCxTQUFBbEYsS0FBQXF0QyxrQ0MzREEsSUFBQUMsRUFBQSxTQUFBdGlDLEdBQ0EsY0FBQUEsR0FDQSxhQUNBLE9BQUFBLEVBRUEsY0FDQSxPQUFBQSxFQUFBLGVBRUEsYUFDQSxPQUFBdWlDLFNBQUF2aUMsS0FBQSxHQUVBLFFBQ0EsV0FJQXBMLEVBQUFELFFBQUEsU0FBQTJGLEVBQUFzbkMsRUFBQUMsRUFBQXpzQyxHQU9BLE9BTkF3c0MsS0FBQSxJQUNBQyxLQUFBLElBQ0EsT0FBQXZuQyxJQUNBQSxPQUFBbEQsR0FHQSxpQkFBQWtELEVBQ0F1QyxFQUFBMmxDLEVBQUFsb0MsR0FBQSxTQUFBc0YsR0FDQSxJQUFBNmlDLEVBQUE5bkMsbUJBQUEybkMsRUFBQTFpQyxJQUFBaWlDLEVBQ0EsT0FBQW4rQixFQUFBcEosRUFBQXNGLElBQ0EvQyxFQUFBdkMsRUFBQXNGLEdBQUEsU0FBQUksR0FDQSxPQUFBeWlDLEVBQUE5bkMsbUJBQUEybkMsRUFBQXRpQyxNQUNTM0gsS0FBQXVwQyxHQUVUYSxFQUFBOW5DLG1CQUFBMm5DLEVBQUFob0MsRUFBQXNGLE9BRUt2SCxLQUFBdXBDLEdBSUx4c0MsRUFDQXVGLG1CQUFBMm5DLEVBQUFsdEMsSUFBQXlzQyxFQUNBbG5DLG1CQUFBMm5DLEVBQUFob0MsSUFGQSxJQUtBLElBQUFvSixFQUFBckosTUFBQXFKLFNBQUEsU0FBQTIrQixHQUNBLHlCQUFBOXNDLE9BQUFrQixVQUFBeUQsU0FBQWxGLEtBQUFxdEMsSUFHQSxTQUFBeGxDLEVBQUF3bEMsRUFBQW5yQyxHQUNBLEdBQUFtckMsRUFBQXhsQyxJQUFBLE9BQUF3bEMsRUFBQXhsQyxJQUFBM0YsR0FFQSxJQURBLElBQUFvQixFQUFBLEdBQ0F6RCxFQUFBLEVBQWlCQSxFQUFBd3RDLEVBQUFycEMsT0FBZW5FLElBQ2hDeUQsRUFBQWlCLEtBQUFyQyxFQUFBbXJDLEVBQUF4dEMsT0FFQSxPQUFBeUQsRUFHQSxJQUFBa3FDLEVBQUFqdEMsT0FBQThGLE1BQUEsU0FBQWYsR0FDQSxJQUFBaEMsRUFBQSxHQUNBLFFBQUFsQyxLQUFBa0UsRUFDQS9FLE9BQUFrQixVQUFBQyxlQUFBMUIsS0FBQXNGLEVBQUFsRSxJQUFBa0MsRUFBQWlCLEtBQUFuRCxHQUVBLE9BQUFrQyxxQkNuRkEzRCxFQUFBQyxFQUFBRCxRQUEyQkYsRUFBUSxHQUFSQSxFQUEwRCxJQUtyRjhFLEtBQUEsQ0FBYzNFLEVBQUFDLEVBQVMsOFBBQTRQLElBQVVvUixRQUFBLEVBQUF5OEIsUUFBQSwwRkFBQUMsTUFBQSxHQUFBQyxTQUFBLGdIQUFnUEMsS0FBQSxhQUFBQyxlQUFBLHNOQUE0UEMsV0FBQSxNQUd6d0JwdUMsRUFBQXdKLE9BQUEsQ0FDQTZrQyxPQUFBLDBDQ0pBcHVDLEVBQUFELFFBQUEsU0FBQXN1QyxHQUNBLElBQUFDLEVBQUEsR0F3Q0EsT0FyQ0FBLEVBQUFocEMsU0FBQSxXQUNBLE9BQUFrSCxLQUFBdkUsSUFBQSxTQUFBc21DLEdBQ0EsSUFBQXJsQyxFQXNDQSxTQUFBcWxDLEVBQUFGLEdBQ0EsSUFBQW5sQyxFQUFBcWxDLEVBQUEsT0FDQUMsRUFBQUQsRUFBQSxHQUNBLElBQUFDLEVBQ0EsT0FBQXRsQyxFQUdBLEdBQUFtbEMsR0FBQSxtQkFBQUksS0FBQSxDQUNBLElBQUFDLEdBWUF2bEMsRUFaQXFsQyxFQWlCQSxtRUFIQUMsS0FBQUUsU0FBQTVvQyxtQkFBQUksS0FBQUMsVUFBQStDLE1BR0EsT0FoQkF5bEMsRUFBQUosRUFBQVYsUUFBQTdsQyxJQUFBLFNBQUFoQixHQUNBLHVCQUFBdW5DLEVBQUFMLFdBQUFsbkMsRUFBQSxRQUdBLE9BQUFpQyxHQUFBNEIsT0FBQThqQyxHQUFBOWpDLE9BQUEsQ0FBQTRqQyxJQUFBanJDLEtBQUEsTUFPQSxJQUFBMEYsRUFKQSxPQUFBRCxHQUFBekYsS0FBQSxNQXREQW9yQyxDQUFBTixFQUFBRixHQUNBLE9BQUFFLEVBQUEsR0FDQSxVQUFBQSxFQUFBLE9BQW1DcmxDLEVBQUEsSUFFbkNBLElBRUd6RixLQUFBLEtBSUg2cUMsRUFBQXJ1QyxFQUFBLFNBQUFFLEVBQUEydUMsR0FDQSxpQkFBQTN1QyxJQUNBQSxFQUFBLE9BQUFBLEVBQUEsTUFFQSxJQURBLElBQUE0dUMsRUFBQSxHQUNBOXVDLEVBQUEsRUFBZ0JBLEVBQUF1TSxLQUFBcEksT0FBaUJuRSxJQUFBLENBQ2pDLElBQUF5bEIsRUFBQWxaLEtBQUF2TSxHQUFBLEdBQ0EsaUJBQUF5bEIsSUFDQXFwQixFQUFBcnBCLElBQUEsR0FFQSxJQUFBemxCLEVBQUEsRUFBWUEsRUFBQUUsRUFBQWlFLE9BQW9CbkUsSUFBQSxDQUNoQyxJQUFBc3VDLEVBQUFwdUMsRUFBQUYsR0FLQSxpQkFBQXN1QyxFQUFBLElBQUFRLEVBQUFSLEVBQUEsTUFDQU8sSUFBQVAsRUFBQSxHQUNBQSxFQUFBLEdBQUFPLEVBQ0tBLElBQ0xQLEVBQUEsT0FBQUEsRUFBQSxhQUFBTyxFQUFBLEtBRUFSLEVBQUEzcEMsS0FBQTRwQyxNQUlBRCxvQkN6Q0EsSUFFQVUsRUFDQXArQixFQUhBcStCLEVBQUEsR0FXQUMsR0FUQUYsRUFTQSxXQU1BLE9BQUFsNUIsUUFBQUMsbUJBQUFvNUIsTUFBQXI1QixPQUFBczVCLE1BWkEsV0FFQSxZQURBLElBQUF4K0IsTUFBQW8rQixFQUFBNThCLE1BQUE1RixLQUFBMUQsWUFDQThILElBb0JBeStCLEVBQUEsU0FBQUwsR0FDQSxJQUFBcCtCLEVBQUEsR0FFQSxnQkFBQXBJLEVBQUE4bUMsR0FNQSxzQkFBQTltQyxFQUNBLE9BQUFBLElBRUEsWUFBQW9JLEVBQUFwSSxHQUFBLENBQ0EsSUFBQSttQyxFQXBCQSxTQUFBL21DLEVBQUE4bUMsR0FDQSxPQUFBQSxFQUNBQSxFQUFBRSxjQUFBaG5DLEdBRUF1TixTQUFBeTVCLGNBQUFobkMsSUFnQkFwSSxLQUFBb00sS0FBQWhFLEVBQUE4bUMsR0FFQSxHQUFBeDVCLE9BQUFnWCxtQkFBQXlpQixhQUFBejVCLE9BQUFnWCxrQkFDQSxJQUdBeWlCLElBQUF4aUIsZ0JBQUEwaUIsS0FDSyxNQUFBcHRDLEdBQ0xrdEMsRUFBQSxLQUdBMytCLEVBQUFwSSxHQUFBK21DLEVBRUEsT0FBQTMrQixFQUFBcEksSUExQkEsR0E4QkFrbkMsRUFBQSxLQUNBQyxFQUFBLEVBQ0FDLEVBQUEsR0FFQUMsRUFBY2h3QyxFQUFRLElBcUR0QixTQUFBaXdDLEVBQUFDLEVBQUEzc0MsR0FDQSxRQUFBbkQsRUFBQSxFQUFnQkEsRUFBQTh2QyxFQUFBM3JDLE9BQW1CbkUsSUFBQSxDQUNuQyxJQUFBc3VDLEVBQUF3QixFQUFBOXZDLEdBQ0ErdkMsRUFBQWYsRUFBQVYsRUFBQTdvQixJQUVBLEdBQUFzcUIsRUFBQSxDQUNBQSxFQUFBcmpDLE9BRUEsUUFBQXRHLEVBQUEsRUFBaUJBLEVBQUEycEMsRUFBQTVvQyxNQUFBaEQsT0FBMkJpQyxJQUM1QzJwQyxFQUFBNW9DLE1BQUFmLEdBQUFrb0MsRUFBQW5uQyxNQUFBZixJQUdBLEtBQVFBLEVBQUFrb0MsRUFBQW5uQyxNQUFBaEQsT0FBdUJpQyxJQUMvQjJwQyxFQUFBNW9DLE1BQUF6QyxLQUFBc3JDLEVBQUExQixFQUFBbm5DLE1BQUFmLEdBQUFqRCxRQUVHLENBQ0gsSUFBQWdFLEVBQUEsR0FFQSxJQUFBZixFQUFBLEVBQWlCQSxFQUFBa29DLEVBQUFubkMsTUFBQWhELE9BQXVCaUMsSUFDeENlLEVBQUF6QyxLQUFBc3JDLEVBQUExQixFQUFBbm5DLE1BQUFmLEdBQUFqRCxJQUdBNnJDLEVBQUFWLEVBQUE3b0IsSUFBQSxDQUEyQkEsR0FBQTZvQixFQUFBN29CLEdBQUEvWSxLQUFBLEVBQUF2RixXQUszQixTQUFBOG9DLEVBQUE1QixFQUFBbHJDLEdBSUEsSUFIQSxJQUFBMnNDLEVBQUEsR0FDQUksRUFBQSxHQUVBbHdDLEVBQUEsRUFBZ0JBLEVBQUFxdUMsRUFBQWxxQyxPQUFpQm5FLElBQUEsQ0FDakMsSUFBQXN1QyxFQUFBRCxFQUFBcnVDLEdBQ0F5bEIsRUFBQXRpQixFQUFBb3dCLEtBQUErYSxFQUFBLEdBQUFuckMsRUFBQW93QixLQUFBK2EsRUFBQSxHQUlBNkIsRUFBQSxDQUFjQyxJQUhkOUIsRUFBQSxHQUdjK0IsTUFGZC9CLEVBQUEsR0FFY3BsQyxVQURkb2xDLEVBQUEsSUFHQTRCLEVBQUF6cUIsR0FDQXlxQixFQUFBenFCLEdBQUF0ZSxNQUFBekMsS0FBQXlyQyxHQURBTCxFQUFBcHJDLEtBQUF3ckMsRUFBQXpxQixHQUFBLENBQWtEQSxLQUFBdGUsTUFBQSxDQUFBZ3BDLEtBSWxELE9BQUFMLEVBR0EsU0FBQVEsRUFBQW50QyxFQUFBc1QsR0FDQSxJQUFBbE8sRUFBQTZtQyxFQUFBanNDLEVBQUFrRyxZQUVBLElBQUFkLEVBQ0EsVUFBQS9GLE1BQUEsK0dBR0EsSUFBQSt0QyxFQUFBWixJQUFBeHJDLE9BQUEsR0FFQSxXQUFBaEIsRUFBQXF0QyxTQUNBRCxFQUVHQSxFQUFBNWpCLFlBQ0hwa0IsRUFBQTgzQixhQUFBNXBCLEVBQUE4NUIsRUFBQTVqQixhQUVBcGtCLEVBQUFzbkIsWUFBQXBaLEdBSkFsTyxFQUFBODNCLGFBQUE1cEIsRUFBQWxPLEVBQUFpa0IsWUFNQW1qQixFQUFBanJDLEtBQUErUixRQUNFLGNBQUF0VCxFQUFBcXRDLFNBQ0Zqb0MsRUFBQXNuQixZQUFBcFosT0FDRSxxQkFBQXRULEVBQUFxdEMsV0FBQXJ0QyxFQUFBcXRDLFNBQUFDLE9BSUYsVUFBQWp1QyxNQUFBLDhMQUhBLElBQUFtcUIsRUFBQXlpQixFQUFBanNDLEVBQUFxdEMsU0FBQUMsT0FBQWxvQyxHQUNBQSxFQUFBODNCLGFBQUE1cEIsRUFBQWtXLElBTUEsU0FBQStqQixFQUFBajZCLEdBQ0EsVUFBQUEsRUFBQTNCLFdBQUEsU0FDQTJCLEVBQUEzQixXQUFBOGEsWUFBQW5aLEdBRUEsSUFBQTYyQixFQUFBcUMsRUFBQXA5QixRQUFBa0UsR0FDQTYyQixHQUFBLEdBQ0FxQyxFQUFBZ0IsT0FBQXJELEVBQUEsR0FJQSxTQUFBc0QsRUFBQXp0QyxHQUNBLElBQUFzVCxFQUFBWCxTQUFBOUUsY0FBQSxTQU1BLFFBSkF6TyxJQUFBWSxFQUFBMHRDLE1BQUE3bUMsT0FDQTdHLEVBQUEwdEMsTUFBQTdtQyxLQUFBLGlCQUdBekgsSUFBQVksRUFBQTB0QyxNQUFBQyxNQUFBLENBQ0EsSUFBQUEsRUFnQ0EsV0FDSyxFQUlMLE9BQVFseEMsRUFBQWlmLEdBckNSa3lCLEdBQ0FELElBQ0EzdEMsRUFBQTB0QyxNQUFBQyxTQU9BLE9BSEFFLEVBQUF2NkIsRUFBQXRULEVBQUEwdEMsT0FDQVAsRUFBQW50QyxFQUFBc1QsR0FFQUEsRUFpQkEsU0FBQXU2QixFQUFBQyxFQUFBSixHQUNBbndDLE9BQUE4RixLQUFBcXFDLEdBQUExb0MsUUFBQSxTQUFBNUcsR0FDQTB2QyxFQUFBajBCLGFBQUF6YixFQUFBc3ZDLEVBQUF0dkMsTUFZQSxTQUFBeXVDLEVBQUF2cUMsRUFBQXRDLEdBQ0EsSUFBQXNULEVBQUF5NkIsRUFBQUMsRUFBQTlpQyxFQUdBLEdBQUFsTCxFQUFBaUcsV0FBQTNELEVBQUEycUMsSUFBQSxDQUtBLEtBSkEvaEMsRUFBQSxtQkFBQWxMLEVBQUFpRyxVQUNBakcsRUFBQWlHLFVBQUEzRCxFQUFBMnFDLEtBQ0FqdEMsRUFBQWlHLFVBQUFzSSxRQUFBak0sRUFBQTJxQyxNQVNBLG9CQUpBM3FDLEVBQUEycUMsSUFBQS9oQyxFQVVBLEdBQUFsTCxFQUFBc3NDLFVBQUEsQ0FDQSxJQUFBMkIsRUFBQTFCLElBRUFqNUIsRUFBQWc1QixNQUFBbUIsRUFBQXp0QyxJQUVBK3RDLEVBQUFHLEVBQUE3dkMsS0FBQSxLQUFBaVYsRUFBQTI2QixHQUFBLEdBQ0FELEVBQUFFLEVBQUE3dkMsS0FBQSxLQUFBaVYsRUFBQTI2QixHQUFBLFFBR0EzckMsRUFBQXlELFdBQ0EsbUJBQUFvb0MsS0FDQSxtQkFBQUEsSUFBQUMsaUJBQ0EsbUJBQUFELElBQUFFLGlCQUNBLG1CQUFBQyxNQUNBLG1CQUFBakQsTUFFQS8zQixFQWxFQSxTQUFBdFQsR0FDQSxJQUFBNHdCLEVBQUFqZSxTQUFBOUUsY0FBQSxRQVVBLFlBUkF6TyxJQUFBWSxFQUFBMHRDLE1BQUE3bUMsT0FDQTdHLEVBQUEwdEMsTUFBQTdtQyxLQUFBLFlBRUE3RyxFQUFBMHRDLE1BQUFhLElBQUEsYUFFQVYsRUFBQWpkLEVBQUE1d0IsRUFBQTB0QyxPQUNBUCxFQUFBbnRDLEVBQUE0d0IsR0FFQUEsRUF1REE0ZCxDQUFBeHVDLEdBQ0ErdEMsRUFpRkEsU0FBQW5kLEVBQUE1d0IsRUFBQXNDLEdBQ0EsSUFBQTJxQyxFQUFBM3FDLEVBQUEycUMsSUFDQWxuQyxFQUFBekQsRUFBQXlELFVBUUEwb0MsT0FBQXJ2QyxJQUFBWSxFQUFBMHVDLHVCQUFBM29DLEdBRUEvRixFQUFBMHVDLHVCQUFBRCxLQUNBeEIsRUFBQVIsRUFBQVEsSUFHQWxuQyxJQUVBa25DLEdBQUEsdURBQXVENUIsS0FBQUUsU0FBQTVvQyxtQkFBQUksS0FBQUMsVUFBQStDLE1BQUEsT0FHdkQsSUFBQTRvQyxFQUFBLElBQUFMLEtBQUEsQ0FBQXJCLEdBQUEsQ0FBNkJwbUMsS0FBQSxhQUU3QituQyxFQUFBaGUsRUFBQWllLEtBRUFqZSxFQUFBaWUsS0FBQVYsSUFBQUMsZ0JBQUFPLEdBRUFDLEdBQUFULElBQUFFLGdCQUFBTyxJQTVHQXZ3QyxLQUFBLEtBQUFpVixFQUFBdFQsR0FDQWd1QyxFQUFBLFdBQ0FULEVBQUFqNkIsR0FFQUEsRUFBQXU3QixNQUFBVixJQUFBRSxnQkFBQS82QixFQUFBdTdCLFNBR0F2N0IsRUFBQW02QixFQUFBenRDLEdBQ0ErdEMsRUFzREEsU0FBQXo2QixFQUFBaFIsR0FDQSxJQUFBMnFDLEVBQUEzcUMsRUFBQTJxQyxJQUNBQyxFQUFBNXFDLEVBQUE0cUMsTUFFQUEsR0FDQTU1QixFQUFBdUcsYUFBQSxRQUFBcXpCLEdBR0EsR0FBQTU1QixFQUFBdzdCLFdBQ0F4N0IsRUFBQXc3QixXQUFBQyxRQUFBOUIsTUFDRSxDQUNGLEtBQUEzNUIsRUFBQStWLFlBQ0EvVixFQUFBbVosWUFBQW5aLEVBQUErVixZQUdBL1YsRUFBQW9aLFlBQUEvWixTQUFBcXNCLGVBQUFpTyxNQXJFQTV1QyxLQUFBLEtBQUFpVixHQUNBMDZCLEVBQUEsV0FDQVQsRUFBQWo2QixLQU1BLE9BRkF5NkIsRUFBQXpyQyxHQUVBLFNBQUEwc0MsR0FDQSxHQUFBQSxFQUFBLENBQ0EsR0FDQUEsRUFBQS9CLE1BQUEzcUMsRUFBQTJxQyxLQUNBK0IsRUFBQTlCLFFBQUE1cUMsRUFBQTRxQyxPQUNBOEIsRUFBQWpwQyxZQUFBekQsRUFBQXlELFVBRUEsT0FHQWdvQyxFQUFBenJDLEVBQUEwc0MsUUFFQWhCLEtBMVBBcHhDLEVBQUFELFFBQUEsU0FBQXV1QyxFQUFBbHJDLEdBQ0EsdUJBQUFpdkMsY0FDQSxpQkFBQXQ4QixTQUFBLFVBQUF0VCxNQUFBLGlFQUdBVyxLQUFBLElBRUEwdEMsTUFBQSxpQkFBQTF0QyxFQUFBMHRDLE1BQUExdEMsRUFBQTB0QyxNQUFBLEdBSUExdEMsRUFBQXNzQyxXQUFBLGtCQUFBdHNDLEVBQUFzc0MsWUFBQXRzQyxFQUFBc3NDLFVBQUFSLEtBR0E5ckMsRUFBQWtHLGFBQUFsRyxFQUFBa0csV0FBQSxRQUdBbEcsRUFBQXF0QyxXQUFBcnRDLEVBQUFxdEMsU0FBQSxVQUVBLElBQUFWLEVBQUFHLEVBQUE1QixFQUFBbHJDLEdBSUEsT0FGQTBzQyxFQUFBQyxFQUFBM3NDLEdBRUEsU0FBQWt2QyxHQUdBLElBRkEsSUFBQUMsRUFBQSxHQUVBdHlDLEVBQUEsRUFBaUJBLEVBQUE4dkMsRUFBQTNyQyxPQUFtQm5FLElBQUEsQ0FDcEMsSUFBQXN1QyxFQUFBd0IsRUFBQTl2QyxJQUNBK3ZDLEVBQUFmLEVBQUFWLEVBQUE3b0IsS0FFQS9ZLE9BQ0E0bEMsRUFBQTV0QyxLQUFBcXJDLEdBR0FzQyxHQUVBeEMsRUFEQUksRUFBQW9DLEVBQUFsdkMsR0FDQUEsR0FHQSxJQUFBbkQsRUFBQSxFQUFpQkEsRUFBQXN5QyxFQUFBbnVDLE9BQXNCbkUsSUFBQSxDQUN2QyxJQUFBK3ZDLEVBRUEsUUFGQUEsRUFBQXVDLEVBQUF0eUMsSUFFQTBNLEtBQUEsQ0FDQSxRQUFBdEcsRUFBQSxFQUFtQkEsRUFBQTJwQyxFQUFBNW9DLE1BQUFoRCxPQUEyQmlDLElBQUEycEMsRUFBQTVvQyxNQUFBZixZQUU5QzRvQyxFQUFBZSxFQUFBdHFCLFFBa05BLElBQ0E4c0IsRUFEQUMsR0FDQUQsRUFBQSxHQUVBLFNBQUE1dUMsRUFBQTh1QyxHQUdBLE9BRkFGLEVBQUE1dUMsR0FBQTh1QyxFQUVBRixFQUFBRyxPQUFBQyxTQUFBbnZDLEtBQUEsUUFJQSxTQUFBNnRDLEVBQUE1NkIsRUFBQTlTLEVBQUF3dEMsRUFBQTFyQyxHQUNBLElBQUEycUMsRUFBQWUsRUFBQSxHQUFBMXJDLEVBQUEycUMsSUFFQSxHQUFBMzVCLEVBQUF3N0IsV0FDQXg3QixFQUFBdzdCLFdBQUFDLFFBQUFNLEVBQUE3dUMsRUFBQXlzQyxPQUNFLENBQ0YsSUFBQXdDLEVBQUE5OEIsU0FBQXFzQixlQUFBaU8sR0FDQXlDLEVBQUFwOEIsRUFBQW84QixXQUVBQSxFQUFBbHZDLElBQUE4UyxFQUFBbVosWUFBQWlqQixFQUFBbHZDLElBRUFrdkMsRUFBQTF1QyxPQUNBc1MsRUFBQTRwQixhQUFBdVMsRUFBQUMsRUFBQWx2QyxJQUVBOFMsRUFBQW9aLFlBQUEraUIsb0JDN1VBN3lDLEVBQUFELFFBQUEsU0FBQXN3QyxHQUVBLElBQUF0bUIsRUFBQSxvQkFBQWpVLGVBQUFpVSxTQUVBLElBQUFBLEVBQ0EsVUFBQXRuQixNQUFBLG9DQUlBLElBQUE0dEMsR0FBQSxpQkFBQUEsRUFDQSxPQUFBQSxFQUdBLElBQUEwQyxFQUFBaHBCLEVBQUFpcEIsU0FBQSxLQUFBanBCLEVBQUFrcEIsS0FDQUMsRUFBQUgsRUFBQWhwQixFQUFBb3BCLFNBQUF2d0MsUUFBQSxpQkEyREEsT0EvQkF5dEMsRUFBQXp0QyxRQUFBLCtEQUFBd3dDLEVBQUFDLEdBRUEsSUFXQUMsRUFYQUMsRUFBQUYsRUFDQXJnQixPQUNBcHdCLFFBQUEsb0JBQUFsQyxFQUFBOHlDLEdBQXdDLE9BQUFBLElBQ3hDNXdDLFFBQUEsb0JBQUFsQyxFQUFBOHlDLEdBQXdDLE9BQUFBLElBR3hDLDBEQUFBbHRDLEtBQUFpdEMsR0FDQUgsR0FRQUUsRUFGQSxJQUFBQyxFQUFBL2dDLFFBQUEsTUFFQStnQyxFQUNHLElBQUFBLEVBQUEvZ0MsUUFBQSxLQUVIdWdDLEVBQUFRLEVBR0FMLEVBQUFLLEVBQUEzd0MsUUFBQSxZQUlBLE9BQUF1RCxLQUFBQyxVQUFBa3RDLEdBQUEsdUJDbkZBdHpDLEVBQUFELFFBQUEwRixNQUFBcUosU0FBQSxTQUFBMmtDLEdBQ0Esd0JBQUE5eUMsT0FBQWtCLFVBQUF5RCxTQUFBbEYsS0FBQXF6Qyw2SUNEQSxTQUFBQyxFQUFBUCxHQUNBLFlBQUFBLEVBQUFoZ0IsT0FBQSxHQUlBLFNBQUF3Z0IsRUFBQXJGLEVBQUExcUMsR0FDQSxRQUFBM0QsRUFBQTJELEVBQUFvSCxFQUFBL0ssRUFBQSxFQUFBeUIsRUFBQTRzQyxFQUFBbHFDLE9BQWlENEcsRUFBQXRKLEVBQU96QixHQUFBLEVBQUErSyxHQUFBLEVBQ3hEc2pDLEVBQUFydUMsR0FBQXF1QyxFQUFBdGpDLEdBR0FzakMsRUFBQWpnQyxNQTJEZSxJQUFBdWxDLEVBdkRmLFNBQUFqckMsR0FDQSxJQUFBRixFQUFBSyxVQUFBMUUsT0FBQSxRQUFBNUIsSUFBQXNHLFVBQUEsR0FBQUEsVUFBQSxNQUVBK3FDLEVBQUFsckMsS0FBQVIsTUFBQSxTQUNBMnJDLEVBQUFyckMsS0FBQU4sTUFBQSxTQUVBNHJDLEVBQUFwckMsR0FBQStxQyxFQUFBL3FDLEdBQ0FxckMsRUFBQXZyQyxHQUFBaXJDLEVBQUFqckMsR0FDQXdyQyxFQUFBRixHQUFBQyxFQVdBLEdBVEFyckMsR0FBQStxQyxFQUFBL3FDLEdBRUFtckMsRUFBQUQsRUFDR0EsRUFBQXp2QyxTQUVIMHZDLEVBQUF6bEMsTUFDQXlsQyxJQUFBaHBDLE9BQUErb0MsS0FHQUMsRUFBQTF2QyxPQUFBLFVBRUEsSUFBQTh2QyxPQUFBLEVBQ0EsR0FBQUosRUFBQTF2QyxPQUFBLENBQ0EsSUFBQSt2QyxFQUFBTCxJQUFBMXZDLE9BQUEsR0FDQTh2QyxFQUFBLE1BQUFDLEdBQUEsT0FBQUEsR0FBQSxLQUFBQSxPQUVBRCxHQUFBLEVBSUEsSUFEQSxJQUFBRSxFQUFBLEVBQ0FuMEMsRUFBQTZ6QyxFQUFBMXZDLE9BQWdDbkUsR0FBQSxFQUFRQSxJQUFBLENBQ3hDLElBQUFtd0MsRUFBQTBELEVBQUE3ekMsR0FFQSxNQUFBbXdDLEVBQ0F1RCxFQUFBRyxFQUFBN3pDLEdBQ0ssT0FBQW13QyxHQUNMdUQsRUFBQUcsRUFBQTd6QyxHQUNBbTBDLEtBQ0tBLElBQ0xULEVBQUFHLEVBQUE3ekMsR0FDQW0wQyxLQUlBLElBQUFILEVBQUEsS0FBeUJHLElBQU1BLEVBQy9CTixFQUFBTyxRQUFBLE9BQ0dKLEdBQUEsS0FBQUgsRUFBQSxJQUFBQSxFQUFBLElBQUFKLEVBQUFJLEVBQUEsS0FBQUEsRUFBQU8sUUFBQSxJQUVILElBQUEvbEMsRUFBQXdsQyxFQUFBcndDLEtBQUEsS0FJQSxPQUZBeXdDLEdBQUEsTUFBQTVsQyxFQUFBcEosUUFBQSxLQUFBb0osR0FBQSxLQUVBQSxHQ2xFQWdtQyxFQUFBLG1CQUFBdHpDLFFBQUEsaUJBQUFBLE9BQUE0SyxTQUFBLFNBQUFsRyxHQUFvRyxjQUFBQSxHQUFxQixTQUFBQSxHQUFtQixPQUFBQSxHQUFBLG1CQUFBMUUsUUFBQTBFLEVBQUF5SCxjQUFBbk0sUUFBQTBFLElBQUExRSxPQUFBYSxVQUFBLGdCQUFBNkQsR0FxQzdILElBQUE2dUMsRUFuQ2YsU0FBQUMsRUFBQXJ5QyxFQUFBQyxHQUNBLEdBQUFELElBQUFDLEVBQUEsU0FFQSxTQUFBRCxHQUFBLE1BQUFDLEVBQUEsU0FFQSxHQUFBcUQsTUFBQXFKLFFBQUEzTSxHQUNBLE9BQUFzRCxNQUFBcUosUUFBQTFNLElBQUFELEVBQUFpQyxTQUFBaEMsRUFBQWdDLFFBQUFqQyxFQUFBc3lDLE1BQUEsU0FBQWxHLEVBQUEzcUMsR0FDQSxPQUFBNHdDLEVBQUFqRyxFQUFBbnNDLEVBQUF3QixNQUlBLElBQUE4d0MsT0FBQSxJQUFBdnlDLEVBQUEsWUFBQW15QyxFQUFBbnlDLEdBR0EsR0FBQXV5QyxVQUZBLElBQUF0eUMsRUFBQSxZQUFBa3lDLEVBQUFseUMsSUFFQSxTQUVBLGNBQUFzeUMsRUFBQSxDQUNBLElBQUFDLEVBQUF4eUMsRUFBQXl5QyxVQUNBQyxFQUFBenlDLEVBQUF3eUMsVUFFQSxHQUFBRCxJQUFBeHlDLEdBQUEweUMsSUFBQXp5QyxFQUFBLE9BQUFveUMsRUFBQUcsRUFBQUUsR0FFQSxJQUFBQyxFQUFBbjBDLE9BQUE4RixLQUFBdEUsR0FDQTR5QyxFQUFBcDBDLE9BQUE4RixLQUFBckUsR0FFQSxPQUFBMHlDLEVBQUExd0MsU0FBQTJ3QyxFQUFBM3dDLFFBRUEwd0MsRUFBQUwsTUFBQSxTQUFBanpDLEdBQ0EsT0FBQWd6QyxFQUFBcnlDLEVBQUFYLEdBQUFZLEVBQUFaLE1BSUEsVUNsQ093ekMsRUFBQSxTQUFBbnhDLEdBQ1AsWUFBQUEsRUFBQXN2QixPQUFBLEdBQUF0dkIsRUFBQSxJQUFBQSxHQU9Pb3hDLEVBQUEsU0FBQXB4QyxFQUFBUyxHQUNQLFdBQUFkLE9BQUEsSUFBQWMsRUFBQSxxQkFBQWdDLEtBQUF6QyxJQUdPcXhDLEVBQUEsU0FBQXJ4QyxFQUFBUyxHQUNQLE9BQUEyd0MsRUFBQXB4QyxFQUFBUyxHQUFBVCxFQUFBcUIsT0FBQVosRUFBQUYsUUFBQVAsR0FHT3N4QyxFQUFBLFNBQUF0eEMsR0FDUCxZQUFBQSxFQUFBc3ZCLE9BQUF0dkIsRUFBQU8sT0FBQSxHQUFBUCxFQUFBTSxNQUFBLE1BQUFOLEdBMkJPdXhDLEVBQUEsU0FBQXJyQixHQUNQLElBQUFvcEIsRUFBQXBwQixFQUFBb3BCLFNBQ0EvMkIsRUFBQTJOLEVBQUEzTixPQUNBaTVCLEVBQUF0ckIsRUFBQXNyQixLQUdBeHhDLEVBQUFzdkMsR0FBQSxJQU1BLE9BSkEvMkIsR0FBQSxNQUFBQSxJQUFBdlksR0FBQSxNQUFBdVksRUFBQStXLE9BQUEsR0FBQS9XLEVBQUEsSUFBQUEsR0FFQWk1QixHQUFBLE1BQUFBLElBQUF4eEMsR0FBQSxNQUFBd3hDLEVBQUFsaUIsT0FBQSxHQUFBa2lCLEVBQUEsSUFBQUEsR0FFQXh4QyxHQ3hEQXl4QyxFQUFBMzBDLE9BQUFnSCxRQUFBLFNBQUFhLEdBQW1ELFFBQUF2SSxFQUFBLEVBQWdCQSxFQUFBNkksVUFBQTFFLE9BQXNCbkUsSUFBQSxDQUFPLElBQUFnSCxFQUFBNkIsVUFBQTdJLEdBQTJCLFFBQUF1QixLQUFBeUYsRUFBMEJ0RyxPQUFBa0IsVUFBQUMsZUFBQTFCLEtBQUE2RyxFQUFBekYsS0FBeURnSCxFQUFBaEgsR0FBQXlGLEVBQUF6RixJQUFpQyxPQUFBZ0gsR0FNcE8rc0MsRUFBYyxTQUFBMXhDLEVBQUFzNEIsRUFBQTM2QixFQUFBZzBDLEdBQ3pCLElBQUF6ckIsT0FBQSxFQUNBLGlCQUFBbG1CLEdBRUFrbUIsRURVTyxTQUFBbG1CLEdBQ1AsSUFBQXN2QyxFQUFBdHZDLEdBQUEsSUFDQXVZLEVBQUEsR0FDQWk1QixFQUFBLEdBRUFJLEVBQUF0QyxFQUFBM2dDLFFBQUEsTUFDQSxJQUFBaWpDLElBQ0FKLEVBQUFsQyxFQUFBanVDLE9BQUF1d0MsR0FDQXRDLElBQUFqdUMsT0FBQSxFQUFBdXdDLElBR0EsSUFBQUMsRUFBQXZDLEVBQUEzZ0MsUUFBQSxLQU1BLE9BTEEsSUFBQWtqQyxJQUNBdDVCLEVBQUErMkIsRUFBQWp1QyxPQUFBd3dDLEdBQ0F2QyxJQUFBanVDLE9BQUEsRUFBQXd3QyxJQUdBLENBQ0F2QyxXQUNBLzJCLE9BQUEsTUFBQUEsRUFBQSxHQUFBQSxFQUNBaTVCLEtBQUEsTUFBQUEsRUFBQSxHQUFBQSxHQzlCZU0sQ0FBUzl4QyxJQUN4QnM0QixjQUtBMzVCLEtBRkF1bkIsRUFBQXVyQixFQUFBLEdBQTBCenhDLElBRTFCc3ZDLFdBQUFwcEIsRUFBQW9wQixTQUFBLElBRUFwcEIsRUFBQTNOLE9BQ0EsTUFBQTJOLEVBQUEzTixPQUFBK1csT0FBQSxLQUFBcEosRUFBQTNOLE9BQUEsSUFBQTJOLEVBQUEzTixRQUVBMk4sRUFBQTNOLE9BQUEsR0FHQTJOLEVBQUFzckIsS0FDQSxNQUFBdHJCLEVBQUFzckIsS0FBQWxpQixPQUFBLEtBQUFwSixFQUFBc3JCLEtBQUEsSUFBQXRyQixFQUFBc3JCLE1BRUF0ckIsRUFBQXNyQixLQUFBLFFBR0E3eUMsSUFBQTI1QixRQUFBMzVCLElBQUF1bkIsRUFBQW9TLFFBQUFwUyxFQUFBb1MsVUFHQSxJQUNBcFMsRUFBQW9wQixTQUFBeUMsVUFBQTdyQixFQUFBb3BCLFVBQ0csTUFBQTl3QyxHQUNILE1BQUFBLGFBQUF3ekMsU0FDQSxJQUFBQSxTQUFBLGFBQUE5ckIsRUFBQW9wQixTQUFBLGlGQUVBOXdDLEVBb0JBLE9BaEJBYixJQUFBdW9CLEVBQUF2b0IsT0FFQWcwQyxFQUVBenJCLEVBQUFvcEIsU0FFSyxNQUFBcHBCLEVBQUFvcEIsU0FBQWhnQixPQUFBLEtBQ0xwSixFQUFBb3BCLFNBQTBCUyxFQUFlN3BCLEVBQUFvcEIsU0FBQXFDLEVBQUFyQyxXQUZ6Q3BwQixFQUFBb3BCLFNBQUFxQyxFQUFBckMsU0FNQXBwQixFQUFBb3BCLFdBQ0FwcEIsRUFBQW9wQixTQUFBLEtBSUFwcEIsR0FHVytyQixFQUFpQixTQUFBM3pDLEVBQUFDLEdBQzVCLE9BQUFELEVBQUFneEMsV0FBQS93QyxFQUFBK3dDLFVBQUFoeEMsRUFBQWlhLFNBQUFoYSxFQUFBZ2EsUUFBQWphLEVBQUFrekMsT0FBQWp6QyxFQUFBaXpDLE1BQUFsekMsRUFBQVgsTUFBQVksRUFBQVosS0FBdUcreUMsRUFBVXB5QyxFQUFBZzZCLE1BQUEvNUIsRUFBQSs1QixRQ2FsRzRaLEVBMUVZLFdBQzNCLElBQUFDLEVBQUEsS0FvQ0FDLEVBQUEsR0E2QkEsT0FDQUMsVUFoRUEsU0FBQUMsR0FLQSxPQUpJQyxJQUFPLE1BQUFKLEVBQUEsZ0RBRVhBLEVBQUFHLEVBRUEsV0FDQUgsSUFBQUcsSUFBQUgsRUFBQSxRQTJEQUssb0JBdkRBLFNBQUF0c0IsRUFBQXVzQixFQUFBQyxFQUFBaGQsR0FJQSxTQUFBeWMsRUFBQSxDQUNBLElBQUExbkMsRUFBQSxtQkFBQTBuQyxJQUFBanNCLEVBQUF1c0IsR0FBQU4sRUFFQSxpQkFBQTFuQyxFQUNBLG1CQUFBaW9DLEVBQ0FBLEVBQUFqb0MsRUFBQWlyQixJQUVVNmMsS0FBTyxxRkFFakI3YyxHQUFBLElBSUFBLEdBQUEsSUFBQWpyQixRQUdBaXJCLEdBQUEsSUFvQ0FpZCxlQTlCQSxTQUFBeEgsR0FDQSxJQUFBeUgsR0FBQSxFQUVBQyxFQUFBLFdBQ0FELEdBQUF6SCxFQUFBNThCLFdBQUE1UCxFQUFBc0csWUFLQSxPQUZBbXRDLEVBQUF0eEMsS0FBQSt4QyxHQUVBLFdBQ0FELEdBQUEsRUFDQVIsSUFBQXRELE9BQUEsU0FBQXBFLEdBQ0EsT0FBQUEsSUFBQW1JLE1BbUJBQyxnQkFkQSxXQUNBLFFBQUFDLEVBQUE5dEMsVUFBQTFFLE9BQUExQixFQUFBK0MsTUFBQW14QyxHQUFBQyxFQUFBLEVBQW1FQSxFQUFBRCxFQUFhQyxJQUNoRm4wQyxFQUFBbTBDLEdBQUEvdEMsVUFBQSt0QyxHQUdBWixFQUFBN3RDLFFBQUEsU0FBQXN1QyxHQUNBLE9BQUFBLEVBQUF0a0MsV0FBQTVQLEVBQUFFLFFDaEVPbzBDLElBQUEsb0JBQUFoaEMsZ0JBQUFDLFdBQUFELE9BQUFDLFNBQUE5RSxlQUVBK2EsRUFBQSxTQUFBVyxFQUFBb3FCLEVBQUFMLEdBQ1AsT0FBQS9wQixFQUFBWCxpQkFBQVcsRUFBQVgsaUJBQUErcUIsRUFBQUwsR0FBQSxHQUFBL3BCLEVBQUF6SyxZQUFBLEtBQUE2MEIsRUFBQUwsSUFHT00sRUFBQSxTQUFBcnFCLEVBQUFvcUIsRUFBQUwsR0FDUCxPQUFBL3BCLEVBQUFxcUIsb0JBQUFycUIsRUFBQXFxQixvQkFBQUQsRUFBQUwsR0FBQSxHQUFBL3BCLEVBQUE1SyxZQUFBLEtBQUFnMUIsRUFBQUwsSUFHT08sRUFBQSxTQUFBQyxFQUFBM2QsR0FDUCxPQUFBQSxFQUFBempCLE9BQUFxaEMsUUFBQUQsS0NYSUUsRUFBTyxtQkFBQXAyQyxRQUFBLGlCQUFBQSxPQUFBNEssU0FBQSxTQUFBbEcsR0FBeUYsY0FBQUEsR0FBcUIsU0FBQUEsR0FBbUIsT0FBQUEsR0FBQSxtQkFBQTFFLFFBQUEwRSxFQUFBeUgsY0FBQW5NLFFBQUEwRSxJQUFBMUUsT0FBQWEsVUFBQSxnQkFBQTZELEdBRXhJMnhDLEVBQVExMkMsT0FBQWdILFFBQUEsU0FBQWEsR0FBdUMsUUFBQXZJLEVBQUEsRUFBZ0JBLEVBQUE2SSxVQUFBMUUsT0FBc0JuRSxJQUFBLENBQU8sSUFBQWdILEVBQUE2QixVQUFBN0ksR0FBMkIsUUFBQXVCLEtBQUF5RixFQUEwQnRHLE9BQUFrQixVQUFBQyxlQUFBMUIsS0FBQTZHLEVBQUF6RixLQUF5RGdILEVBQUFoSCxHQUFBeUYsRUFBQXpGLElBQWlDLE9BQUFnSCxHQVkvTzh1QyxFQUFBLFdBQ0EsSUFDQSxPQUFBeGhDLE9BQUF5aEMsUUFBQXBiLE9BQUEsR0FDRyxNQUFBOTVCLEdBR0gsV0E2UWVtMUMsRUFyUVMsV0FDeEIsSUFBQS9xQyxFQUFBM0QsVUFBQTFFLE9BQUEsUUFBQTVCLElBQUFzRyxVQUFBLEdBQUFBLFVBQUEsTUFFRTJ1QyxJQUFVWCxFQUFTLCtCQUVyQixJRFhBM2pDLEVDV0F1a0MsRUFBQTVoQyxPQUFBeWhDLFFBQ0FJLElEVkEsS0FGQXhrQyxFQUFBMkMsT0FBQThoQyxVQUFBQyxXQUVBcmxDLFFBQUEsb0JBQUFXLEVBQUFYLFFBQUEscUJBQUFXLEVBQUFYLFFBQUEsdUJBQUFXLEVBQUFYLFFBQUEsZ0JBQUFXLEVBQUFYLFFBQUEsbUJBRUFzRCxPQUFBeWhDLFNBQUEsY0FBQXpoQyxPQUFBeWhDLFFDU0FPLEtEREEsSUFBQWhpQyxPQUFBOGhDLFVBQUFDLFVBQUFybEMsUUFBQSxZQ0dBdWxDLEVBQUF0ckMsRUFBQXVyQyxhQUNBQSxPQUFBeDFDLElBQUF1MUMsS0FDQUUsRUFBQXhyQyxFQUFBOHBDLG9CQUNBQSxPQUFBL3pDLElBQUF5MUMsRUFBa0VoQixFQUFlZ0IsRUFDakZDLEVBQUF6ckMsRUFBQTByQyxVQUNBQSxPQUFBMzFDLElBQUEwMUMsRUFBQSxFQUFBQSxFQUVBRSxFQUFBM3JDLEVBQUEyckMsU0FBa0NqRCxFQUFtQkgsRUFBZXZvQyxFQUFBMnJDLFdBQUEsR0FFcEVDLEVBQUEsU0FBQUMsR0FDQSxJQUFBQyxFQUFBRCxHQUFBLEdBQ0E5MkMsRUFBQSsyQyxFQUFBLzJDLElBQ0EyNkIsRUFBQW9jLEVBQUFwYyxNQUVBcWMsRUFBQTFpQyxPQUFBaVUsU0FNQWxtQixFQUxBMjBDLEVBQUFyRixTQUNBcUYsRUFBQXA4QixPQUNBbzhCLEVBQUFuRCxLQVNBLE9BSkllLEtBQU9nQyxHQUFjbkQsRUFBV3B4QyxFQUFBdTBDLEdBQUEsa0hBQUF2MEMsRUFBQSxvQkFBQXUwQyxFQUFBLE1BRXBDQSxJQUFBdjBDLEVBQXlCcXhDLEVBQWFyeEMsRUFBQXUwQyxJQUUzQjdDLEVBQWMxeEMsRUFBQXM0QixFQUFBMzZCLElBR3pCaTNDLEVBQUEsV0FDQSxPQUFBL2pDLEtBQUFDLFNBQUFyUCxTQUFBLElBQUFKLE9BQUEsRUFBQWl6QyxJQUdBTyxFQUEwQjNDLElBRTFCL29DLEVBQUEsU0FBQTJyQyxHQUNJdEIsRUFBUUUsRUFBQW9CLEdBRVpwQixFQUFBbnpDLE9BQUFzekMsRUFBQXR6QyxPQUVBczBDLEVBQUEvQixnQkFBQVksRUFBQXh0QixTQUFBd3RCLEVBQUFqQixTQUdBc0MsRUFBQSxTQUFBN0IsSUQvQk8sU0FBQUEsR0FDUCxZQUFBdjBDLElBQUF1MEMsRUFBQTVhLFFBQUEsSUFBQXliLFVBQUFDLFVBQUFybEMsUUFBQSxVQ2dDUXFtQyxDQUF5QjlCLElBRWpDK0IsRUFBQVQsRUFBQXRCLEVBQUE1YSxTQUdBNGMsRUFBQSxXQUNBRCxFQUFBVCxFQUFBZixPQUdBMEIsR0FBQSxFQUVBRixFQUFBLFNBQUEvdUIsR0FDQWl2QixHQUNBQSxHQUFBLEVBQ0Foc0MsS0FJQTByQyxFQUFBckMsb0JBQUF0c0IsRUFGQSxNQUVBd3NCLEVBQUEsU0FBQTBDLEdBQ0FBLEVBQ0Fqc0MsRUFBQSxDQUFvQnNwQyxPQUpwQixNQUlvQnZzQixhQUVwQm12QixFQUFBbnZCLE1BTUFtdkIsRUFBQSxTQUFBQyxHQUNBLElBQUFDLEVBQUE3QixFQUFBeHRCLFNBTUFzdkIsRUFBQUMsRUFBQTltQyxRQUFBNG1DLEVBQUE1M0MsTUFFQSxJQUFBNjNDLE1BQUEsR0FFQSxJQUFBRSxFQUFBRCxFQUFBOW1DLFFBQUEybUMsRUFBQTMzQyxNQUVBLElBQUErM0MsTUFBQSxHQUVBLElBQUFDLEVBQUFILEVBQUFFLEVBRUFDLElBQ0FSLEdBQUEsRUFDQVMsRUFBQUQsS0FJQUUsRUFBQXJCLEVBQUFmLEtBQ0FnQyxFQUFBLENBQUFJLEVBQUFsNEMsS0FJQW00QyxFQUFBLFNBQUE1dkIsR0FDQSxPQUFBcXVCLEVBQXNCaEQsRUFBVXJyQixJQXlFaEMwdkIsRUFBQSxTQUFBLzNDLEdBQ0FnMkMsRUFBQStCLEdBQUEvM0MsSUFXQWs0QyxFQUFBLEVBRUFDLEVBQUEsU0FBQUwsR0FHQSxLQUZBSSxHQUFBSixJQUdNeHRCLEVBQWdCbFcsT0EzTnRCLFdBMk5zQjhpQyxHQUV0QmQsR0FBbUM5ckIsRUFBZ0JsVyxPQTVObkQsYUE0Tm1EaWpDLElBQzlDLElBQUFhLElBQ0M1QyxFQUFtQmxoQyxPQS9OekIsV0ErTnlCOGlDLEdBRXpCZCxHQUFtQ2QsRUFBbUJsaEMsT0FoT3RELGFBZ09zRGlqQyxLQUl0RGUsR0FBQSxFQWdDQXZDLEVBQUEsQ0FDQW56QyxPQUFBc3pDLEVBQUF0ekMsT0FDQWt5QyxPQUFBLE1BQ0F2c0IsU0FBQTJ2QixFQUNBQyxhQUNBaDFDLEtBdklBLFNBQUFkLEVBQUFzNEIsR0FDSWlhLE1BQThELGlCQUF2RCxJQUFBdnlDLEVBQUEsWUFBZ0R1ekMsRUFBT3Z6QyxVQUFBckIsSUFBQXFCLEVBQUFzNEIsWUFBQTM1QixJQUFBMjVCLEdBQUEsaUpBRWxFLElBQ0FwUyxFQUFtQndyQixFQUFjMXhDLEVBQUFzNEIsRUFBQXNjLElBQUFsQixFQUFBeHRCLFVBRWpDMnVCLEVBQUFyQyxvQkFBQXRzQixFQUhBLE9BR0F3c0IsRUFBQSxTQUFBMEMsR0FDQSxHQUFBQSxFQUFBLENBRUEsSUFBQWhILEVBQUEwSCxFQUFBNXZCLEdBQ0F2b0IsRUFBQXVvQixFQUFBdm9CLElBQ0EyNkIsRUFBQXBTLEVBQUFvUyxNQUdBLEdBQUF3YixFQUdBLEdBRkFELEVBQUFxQyxVQUFBLENBQWlDdjRDLE1BQUEyNkIsU0FBeUIsS0FBQThWLEdBRTFEK0YsRUFDQWxpQyxPQUFBaVUsU0FBQWtvQixXQUNTLENBQ1QsSUFBQStILEVBQUFWLEVBQUE5bUMsUUFBQStrQyxFQUFBeHRCLFNBQUF2b0IsS0FDQXk0QyxFQUFBWCxFQUFBbjFDLE1BQUEsT0FBQTYxQyxFQUFBLEVBQUFBLEVBQUEsR0FFQUMsRUFBQXQxQyxLQUFBb2xCLEVBQUF2b0IsS0FDQTgzQyxFQUFBVyxFQUVBanRDLEVBQUEsQ0FBb0JzcEMsT0F2QnBCLE9BdUJvQnZzQixrQkFHWnFzQixTQUFPNXpDLElBQUEyNUIsRUFBQSxtRkFFZnJtQixPQUFBaVUsU0FBQWtvQixXQXlHQXJ2QyxRQXBHQSxTQUFBaUIsRUFBQXM0QixHQUNJaWEsTUFBOEQsaUJBQXZELElBQUF2eUMsRUFBQSxZQUFnRHV6QyxFQUFPdnpDLFVBQUFyQixJQUFBcUIsRUFBQXM0QixZQUFBMzVCLElBQUEyNUIsR0FBQSxvSkFFbEUsSUFDQXBTLEVBQW1Cd3JCLEVBQWMxeEMsRUFBQXM0QixFQUFBc2MsSUFBQWxCLEVBQUF4dEIsVUFFakMydUIsRUFBQXJDLG9CQUFBdHNCLEVBSEEsVUFHQXdzQixFQUFBLFNBQUEwQyxHQUNBLEdBQUFBLEVBQUEsQ0FFQSxJQUFBaEgsRUFBQTBILEVBQUE1dkIsR0FDQXZvQixFQUFBdW9CLEVBQUF2b0IsSUFDQTI2QixFQUFBcFMsRUFBQW9TLE1BR0EsR0FBQXdiLEVBR0EsR0FGQUQsRUFBQXdDLGFBQUEsQ0FBb0MxNEMsTUFBQTI2QixTQUF5QixLQUFBOFYsR0FFN0QrRixFQUNBbGlDLE9BQUFpVSxTQUFBbm5CLFFBQUFxdkMsT0FDUyxDQUNULElBQUErSCxFQUFBVixFQUFBOW1DLFFBQUEra0MsRUFBQXh0QixTQUFBdm9CLE1BRUEsSUFBQXc0QyxJQUFBVixFQUFBVSxHQUFBandCLEVBQUF2b0IsS0FFQXdMLEVBQUEsQ0FBb0JzcEMsT0FyQnBCLFVBcUJvQnZzQixrQkFHWnFzQixTQUFPNXpDLElBQUEyNUIsRUFBQSxzRkFFZnJtQixPQUFBaVUsU0FBQW5uQixRQUFBcXZDLE9Bd0VBd0gsS0FDQVUsT0FoRUEsV0FDQSxPQUFBVixHQUFBLElBZ0VBVyxVQTdEQSxXQUNBLE9BQUFYLEVBQUEsSUE2REFZLE1BeENBLFdBQ0EsSUFBQXJFLEVBQUFsdEMsVUFBQTFFLE9BQUEsUUFBQTVCLElBQUFzRyxVQUFBLElBQUFBLFVBQUEsR0FFQXd4QyxFQUFBNUIsRUFBQXhDLFVBQUFGLEdBT0EsT0FMQThELElBQ0FELEVBQUEsR0FDQUMsR0FBQSxHQUdBLFdBTUEsT0FMQUEsSUFDQUEsR0FBQSxFQUNBRCxHQUFBLElBR0FTLE1BeUJBQyxPQXJCQSxTQUFBN0QsR0FDQSxJQUFBOEQsRUFBQTlCLEVBQUFsQyxlQUFBRSxHQUdBLE9BRkFtRCxFQUFBLEdBRUEsV0FDQUEsR0FBQSxHQUNBVyxPQWtCQSxPQUFBakQsR0M5UklrRCxHQ0FROTVDLE9BQUFnSCxPQ0FELG1CQUFBM0csZUFBQTRLLFNBRUNqTCxPQUFBZ0gsT0ZGQWhILE9BQUFnSCxRQUFBLFNBQUFhLEdBQXVDLFFBQUF2SSxFQUFBLEVBQWdCQSxFQUFBNkksVUFBQTFFLE9BQXNCbkUsSUFBQSxDQUFPLElBQUFnSCxFQUFBNkIsVUFBQTdJLEdBQTJCLFFBQUF1QixLQUFBeUYsRUFBMEJ0RyxPQUFBa0IsVUFBQUMsZUFBQTFCLEtBQUE2RyxFQUFBekYsS0FBeURnSCxFQUFBaEgsR0FBQXlGLEVBQUF6RixJQUFpQyxPQUFBZ0gsSUFJL08sU0FBQWt5QyxFQUFBQyxFQUFBdjZDLEdBQWlELElBQUF1NkMsRUFBYSxVQUFBQyxlQUFBLDZEQUF5RixPQUFBeDZDLEdBQUEsaUJBQUFBLEdBQUEsbUJBQUFBLEVBQUF1NkMsRUFBQXY2QyxFQWF2SixJQUFJeTZDLEVBQU0sU0FBQUMsR0FHVixTQUFBQyxJQUNBLElBQUFDLEVBQUFDLEdBbkJBLFNBQUFDLEVBQUFDLEdBQWlELEtBQUFELGFBQUFDLEdBQTBDLFVBQUFqMUMsVUFBQSxxQ0FxQjNGazFDLENBQUE1dUMsS0FBQXV1QyxHQUVBLFFBQUFuRSxFQUFBOXRDLFVBQUExRSxPQUFBMUIsRUFBQStDLE1BQUFteEMsR0FBQUMsRUFBQSxFQUFtRUEsRUFBQUQsRUFBYUMsSUFDaEZuMEMsRUFBQW0wQyxHQUFBL3RDLFVBQUErdEMsR0FHQSxPQUFBbUUsRUFBQUMsRUFBQVAsRUFBQWx1QyxLQUFBc3VDLEVBQUExNkMsS0FBQWdTLE1BQUEwb0MsRUFBQSxDQUFBdHVDLE1BQUExQixPQUFBcEksS0FBQXU0QyxFQUFBOWUsTUFBQSxDQUNBajFCLE1BQUErekMsRUFBQUksYUFBQUosRUFBQXh1QyxNQUFBOHFDLFFBQUF4dEIsU0FBQW9wQixXQUNLdUgsRUFBQU8sRUFBQUQsR0EwREwsT0FuRkEsU0FBQU0sRUFBQUMsR0FBMEMsc0JBQUFBLEdBQUEsT0FBQUEsRUFBK0QsVUFBQXIxQyxVQUFBLGtFQUFBcTFDLEdBQXVHRCxFQUFBejVDLFVBQUFsQixPQUFBWSxPQUFBZzZDLEtBQUExNUMsVUFBQSxDQUF5RXNMLFlBQUEsQ0FBZWpNLE1BQUFvNkMsRUFBQXo2QyxZQUFBLEVBQUEyNkMsVUFBQSxFQUFBbCtCLGNBQUEsS0FBNkVpK0IsSUFBQTU2QyxPQUFBODZDLGVBQUE5NkMsT0FBQTg2QyxlQUFBSCxFQUFBQyxHQUFBRCxFQUFBSSxVQUFBSCxHQVlyWEksQ0FBQVosRUFBQUQsR0FnQkFDLEVBQUFsNUMsVUFBQXUwQixnQkFBQSxXQUNBLE9BQ0F3bEIsT0FBY25CLEVBQVEsR0FBR2p1QyxLQUFBRSxRQUFBa3ZDLE9BQUEsQ0FDekJyRSxRQUFBL3FDLEtBQUFDLE1BQUE4cUMsUUFDQXp3QyxNQUFBLENBQ0FpakIsU0FBQXZkLEtBQUFDLE1BQUE4cUMsUUFBQXh0QixTQUNBN2lCLE1BQUFzRixLQUFBMnZCLE1BQUFqMUIsV0FNQTZ6QyxFQUFBbDVDLFVBQUF3NUMsYUFBQSxTQUFBbEksR0FDQSxPQUNBdHZDLEtBQUEsSUFDQTJZLElBQUEsSUFDQXEvQixPQUFBLEdBQ0FDLFFBQUEsTUFBQTNJLElBSUE0SCxFQUFBbDVDLFVBQUE2NkIsbUJBQUEsV0FDQSxJQUFBcWYsRUFBQXZ2QyxLQUVBd3ZDLEVBQUF4dkMsS0FBQUMsTUFDQXFCLEVBQUFrdUMsRUFBQWx1QyxTQUNBeXBDLEVBQUF5RSxFQUFBekUsUUFHSUUsSUFBUyxNQUFBM3BDLEdBQTBCLElBQUxtdUMsRUFBQTk1QyxFQUFLcU4sU0FBQWYsTUFBQVgsR0FBQSw4Q0FLdkN0QixLQUFBZ3VDLFNBQUFqRCxFQUFBZ0QsT0FBQSxXQUNBd0IsRUFBQS91QyxTQUFBLENBQ0E5RixNQUFBNjBDLEVBQUFWLGFBQUE5RCxFQUFBeHRCLFNBQUFvcEIsZUFLQTRILEVBQUFsNUMsVUFBQXc2QiwwQkFBQSxTQUFBNmYsR0FDSUMsSUFBTzN2QyxLQUFBQyxNQUFBOHFDLFVBQUEyRSxFQUFBM0UsUUFBQSx1Q0FHWHdELEVBQUFsNUMsVUFBQXErQixxQkFBQSxXQUNBMXpCLEtBQUFndUMsWUFHQU8sRUFBQWw1QyxVQUFBME8sT0FBQSxXQUNBLElBQUF6QyxFQUFBdEIsS0FBQUMsTUFBQXFCLFNBRUEsT0FBQUEsRUFBc0JtdUMsRUFBQTk1QyxFQUFLcU4sU0FBQUUsS0FBQTVCLEdBQUEsTUFHM0JpdEMsRUF4RVUsQ0F5RVJrQixFQUFBOTVDLEVBQUt5TixXQUVQaXJDLEVBQU03d0MsVUFBQSxDQUNOdXRDLFFBQVc2RSxFQUFBajZDLEVBQVNSLE9BQUFtcUMsV0FDcEJoK0IsU0FBWXN1QyxFQUFBajZDLEVBQVN3cUIsTUFFckJrdUIsRUFBTW54QyxhQUFBLENBQ05reUMsT0FBVVEsRUFBQWo2QyxFQUFTUixRQUVuQms1QyxFQUFNcHhDLGtCQUFBLENBQ05teUMsT0FBVVEsRUFBQWo2QyxFQUFTUixPQUFBbXFDLFlBSUosSUdyR0F1USxFSHFHQSxFSXRHZixTQUFTQyxFQUEwQjNCLEVBQUF2NkMsR0FBYyxJQUFBdTZDLEVBQWEsVUFBQUMsZUFBQSw2REFBeUYsT0FBQXg2QyxHQUFBLGlCQUFBQSxHQUFBLG1CQUFBQSxFQUFBdTZDLEVBQUF2NkMsRUFjdkosSUFBSW04QyxFQUFhLFNBQUF6QixHQUdqQixTQUFBMEIsSUFDQSxJQUFBeEIsRUFBQUMsR0FwQkEsU0FBd0JDLEVBQUFDLEdBQXlCLEtBQUFELGFBQUFDLEdBQTBDLFVBQUFqMUMsVUFBQSxxQ0FzQnZGdTJDLENBQWVqd0MsS0FBQWd3QyxHQUVuQixRQUFBNUYsRUFBQTl0QyxVQUFBMUUsT0FBQTFCLEVBQUErQyxNQUFBbXhDLEdBQUFDLEVBQUEsRUFBbUVBLEVBQUFELEVBQWFDLElBQ2hGbjBDLEVBQUFtMEMsR0FBQS90QyxVQUFBK3RDLEdBR0EsT0FBQW1FLEVBQUFDLEVBQW9DcUIsRUFBMEI5dkMsS0FBQXN1QyxFQUFBMTZDLEtBQUFnUyxNQUFBMG9DLEVBQUEsQ0FBQXR1QyxNQUFBMUIsT0FBQXBJLEtBQUF1NEMsRUFBQTFELFFBQW9HQyxFQUFheUQsRUFBQXh1QyxPQUF1QjZ2QyxFQUEwQnJCLEVBQWpERCxHQVcvSyxPQW5DQSxTQUFrQk0sRUFBQUMsR0FBd0Isc0JBQUFBLEdBQUEsT0FBQUEsRUFBK0QsVUFBQXIxQyxVQUFBLGtFQUFBcTFDLEdBQXVHRCxFQUFBejVDLFVBQUFsQixPQUFBWSxPQUFBZzZDLEtBQUExNUMsVUFBQSxDQUF5RXNMLFlBQUEsQ0FBZWpNLE1BQUFvNkMsRUFBQXo2QyxZQUFBLEVBQUEyNkMsVUFBQSxFQUFBbCtCLGNBQUEsS0FBNkVpK0IsSUFBQTU2QyxPQUFBODZDLGVBQUE5NkMsT0FBQTg2QyxlQUFBSCxFQUFBQyxHQUFBRCxFQUFBSSxVQUFBSCxHQWFuWG1CLENBQVNGLEVBQUExQixHQWNYMEIsRUFBQTM2QyxVQUFBNjZCLG1CQUFBLFdBQ0l5ZixLQUFPM3ZDLEtBQUFDLE1BQUE4cUMsUUFBQSxnSkFHWGlGLEVBQUEzNkMsVUFBQTBPLE9BQUEsV0FDQSxPQUFXMHJDLEVBQUE5NUMsRUFBSzhPLGNBQWVvckMsRUFBTSxDQUFHOUUsUUFBQS9xQyxLQUFBK3FDLFFBQUF6cEMsU0FBQXRCLEtBQUFDLE1BQUFxQixZQUd4QzB1QyxFQXZCaUIsQ0F3QmZQLEVBQUE5NUMsRUFBS3lOLFdBRVAyc0MsRUFBYXZ5QyxVQUFBLENBQ2JvdUMsU0FBWWdFLEVBQUFqNkMsRUFBUytwQyxPQUNyQjhMLGFBQWdCb0UsRUFBQWo2QyxFQUFTOHBDLEtBQ3pCc0ssb0JBQXVCNkYsRUFBQWo2QyxFQUFTcU0sS0FDaEMycEMsVUFBYWlFLEVBQUFqNkMsRUFBUzhaLE9BQ3RCbk8sU0FBWXN1QyxFQUFBajZDLEVBQVN3cUIsTUFJTixJQUFBZ3dCLEVBQUEsa0JDakRmQyxFQUFBLEdBRUFDLEVBQUEsRUFtRWVDLEVBNUNmLFNBQUEzSixHQUNBLElBQUEvdkMsRUFBQTBGLFVBQUExRSxPQUFBLFFBQUE1QixJQUFBc0csVUFBQSxHQUFBQSxVQUFBLE1BQ0F3bUMsRUFBQXhtQyxVQUFBLEdBRUEsaUJBQUExRixNQUFBLENBQThDUyxLQUFBVCxJQUU5QyxJQUFBMjVDLEVBQUEzNUMsRUFDQVMsRUFBQWs1QyxFQUFBbDVDLEtBQ0FtNUMsRUFBQUQsRUFBQXBRLE1BQ0FBLE9BQUFucUMsSUFBQXc2QyxLQUNBQyxFQUFBRixFQUFBbjJDLE9BQ0FBLE9BQUFwRSxJQUFBeTZDLEtBQ0FDLEVBQUFILEVBQUFwMkMsVUFJQSxTQUFBOUMsRUFBQSxPQUFBeXJDLEVBRUEsSUFBQTZOLEVBdkNlLFNBQUFwNEMsRUFBQTNCLEdBQ2YsSUFBQWc2QyxFQUFBLEdBQUFoNkMsRUFBQXlELElBQUF6RCxFQUFBd0QsT0FBQXhELEVBQUF1RCxVQUNBMDJDLEVBQUFULEVBQUFRLEtBQUFSLEVBQUFRLEdBQUEsSUFFQSxHQUFBQyxFQUFBdDRDLEdBQUEsT0FBQXM0QyxFQUFBdDRDLEdBRUEsSUFBQTBCLEVBQUEsR0FFQTYyQyxFQUFBLENBQXlCOTJDLEdBRGQrMkMsSUFBWXg0QyxFQUFBMEIsRUFBQXJELEdBQ0VxRCxRQU96QixPQUxBbzJDLEVBYkEsTUFjQVEsRUFBQXQ0QyxHQUFBdTRDLEVBQ0FULEtBR0FTLEVBd0JxQkUsQ0FBVzM1QyxFQUFBLENBQVFnRCxJQUFBOGxDLEVBQUEvbEMsU0FBQUQsZUFMeENuRSxJQUFBMDZDLE9BTUExMkMsRUFBQTIyQyxFQUFBMzJDLEdBQ0FDLEVBQUEwMkMsRUFBQTEyQyxLQUVBUyxFQUFBVixFQUFBeEMsS0FBQW12QyxHQUVBLElBQUFqc0MsRUFBQSxZQUVBLElBQUFzVixFQUFBdFYsRUFBQSxHQUNBdTJDLEVBQUF2MkMsRUFBQS9DLE1BQUEsR0FFQTIzQyxFQUFBM0ksSUFBQTMyQixFQUVBLE9BQUFtd0IsSUFBQW1QLEVBQUEsS0FFQSxDQUNBajRDLE9BQ0EyWSxJQUFBLE1BQUEzWSxHQUFBLEtBQUEyWSxFQUFBLElBQUFBLEVBQ0FzL0IsVUFDQUQsT0FBQXAxQyxFQUFBaTNDLE9BQUEsU0FBQTlzQyxFQUFBcFAsRUFBQW9DLEdBRUEsT0FEQWdOLEVBQUFwUCxFQUFBaEIsTUFBQWk5QyxFQUFBNzVDLEdBQ0FnTixHQUNLLE1DbkRMLElBQUkrc0MsRUFBTSxTQUFBN0MsR0FHVixTQUFBOEMsSUFHQSxPQXRCQSxTQUF3QjFDLEVBQUFDLEdBQXlCLEtBQUFELGFBQUFDLEdBQTBDLFVBQUFqMUMsVUFBQSxxQ0FvQnZGMjNDLENBQWVyeEMsS0FBQW94QyxHQWxCbkIsU0FBbUNqRCxFQUFBdjZDLEdBQWMsSUFBQXU2QyxFQUFhLFVBQUFDLGVBQUEsNkRBQXlGLE9BQUF4NkMsR0FBQSxpQkFBQUEsR0FBQSxtQkFBQUEsRUFBQXU2QyxFQUFBdjZDLEVBb0I1STA5QyxDQUEwQnR4QyxLQUFBc3VDLEVBQUExb0MsTUFBQTVGLEtBQUExRCxZQXdDckMsT0ExREEsU0FBa0J3eUMsRUFBQUMsR0FBd0Isc0JBQUFBLEdBQUEsT0FBQUEsRUFBK0QsVUFBQXIxQyxVQUFBLGtFQUFBcTFDLEdBQXVHRCxFQUFBejVDLFVBQUFsQixPQUFBWSxPQUFBZzZDLEtBQUExNUMsVUFBQSxDQUF5RXNMLFlBQUEsQ0FBZWpNLE1BQUFvNkMsRUFBQXo2QyxZQUFBLEVBQUEyNkMsVUFBQSxFQUFBbCtCLGNBQUEsS0FBNkVpK0IsSUFBQTU2QyxPQUFBODZDLGVBQUE5NkMsT0FBQTg2QyxlQUFBSCxFQUFBQyxHQUFBRCxFQUFBSSxVQUFBSCxHQWFuWHdDLENBQVNILEVBQUE5QyxHQVFYOEMsRUFBQS83QyxVQUFBNjZCLG1CQUFBLFdBQ0krYSxJQUFTanJDLEtBQUFFLFFBQUFrdkMsT0FBQSxtREFHYmdDLEVBQUEvN0MsVUFBQXc2QiwwQkFBQSxTQUFBNmYsR0FDSUMsTUFBT0QsRUFBQW55QixXQUFBdmQsS0FBQUMsTUFBQXNkLFVBQUEsNEtBRVBveUIsT0FBT0QsRUFBQW55QixVQUFBdmQsS0FBQUMsTUFBQXNkLFVBQUEseUtBR1g2ekIsRUFBQS83QyxVQUFBME8sT0FBQSxXQUNBLElBQUF6SixFQUFBMEYsS0FBQUUsUUFBQWt2QyxPQUFBOTBDLE1BQ0FnSCxFQUFBdEIsS0FBQUMsTUFBQXFCLFNBRUFpYyxFQUFBdmQsS0FBQUMsTUFBQXNkLFVBQUFqakIsRUFBQWlqQixTQUVBN2lCLE9BQUEsRUFDQThlLE9BQUEsRUFpQkEsT0FoQklpMkIsRUFBQTk1QyxFQUFLcU4sU0FBQXBILFFBQUEwRixFQUFBLFNBQUFzeEIsR0FDVCxTQUFBbDRCLEdBQTJCKzBDLEVBQUE5NUMsRUFBS2lQLGVBQUFndUIsR0FBQSxDQUNoQyxJQUFBNGUsRUFBQTVlLEVBQUEzeUIsTUFDQXd4QyxFQUFBRCxFQUFBbjZDLEtBQ0E4b0MsRUFBQXFSLEVBQUFyUixNQUNBL2xDLEVBQUFvM0MsRUFBQXAzQyxPQUNBRCxFQUFBcTNDLEVBQUFyM0MsVUFDQThCLEVBQUF1MUMsRUFBQXYxQyxLQUVBNUUsRUFBQW82QyxHQUFBeDFDLEVBRUF1ZCxFQUFBb1osRUFDQWw0QixFQUFnQjQxQyxFQUFTL3lCLEVBQUFvcEIsU0FBQSxDQUFxQnR2QyxPQUFBOG9DLFFBQUEvbEMsU0FBQUQsYUFBaUVHLEVBQUFJLFVBSS9HQSxFQUFtQiswQyxFQUFBOTVDLEVBQUsrTyxhQUFBOFUsRUFBQSxDQUFzQitELFdBQUFtMEIsY0FBQWgzQyxJQUEyQyxNQUd6RjAyQyxFQTlDVSxDQStDUjNCLEVBQUE5NUMsRUFBS3lOLFdBRVArdEMsRUFBTWowQyxhQUFBLENBQ05reUMsT0FBVVEsRUFBQWo2QyxFQUFTdXFDLE1BQUEsQ0FDbkI1bEMsTUFBV3MxQyxFQUFBajZDLEVBQVNSLE9BQUFtcUMsYUFDakJBLFlBRUg2UixFQUFNM3pDLFVBQUEsQ0FDTjhELFNBQVlzdUMsRUFBQWo2QyxFQUFTd3FCLEtBQ3JCNUMsU0FBWXF5QixFQUFBajZDLEVBQVNSLFFBSU4sSUN6RUF3OEMsRUR5RUEsRUU1RVhDLEVBQVF6OUMsT0FBQWdILFFBQUEsU0FBQWEsR0FBdUMsUUFBQXZJLEVBQUEsRUFBZ0JBLEVBQUE2SSxVQUFBMUUsT0FBc0JuRSxJQUFBLENBQU8sSUFBQWdILEVBQUE2QixVQUFBN0ksR0FBMkIsUUFBQXVCLEtBQUF5RixFQUEwQnRHLE9BQUFrQixVQUFBQyxlQUFBMUIsS0FBQTZHLEVBQUF6RixLQUF5RGdILEVBQUFoSCxHQUFBeUYsRUFBQXpGLElBQWlDLE9BQUFnSCxHQUkvTyxTQUFTNjFDLEVBQTBCMUQsRUFBQXY2QyxHQUFjLElBQUF1NkMsRUFBYSxVQUFBQyxlQUFBLDZEQUF5RixPQUFBeDZDLEdBQUEsaUJBQUFBLEdBQUEsbUJBQUFBLEVBQUF1NkMsRUFBQXY2QyxFQVV2SixJQUFJaytDLEVBQWUsU0FBQXh3QyxHQUNuQixPQUFjLElBQUxtdUMsRUFBQTk1QyxFQUFLcU4sU0FBQWYsTUFBQVgsSUFPVnl3QyxHQUFLLFNBQUF6RCxHQUdULFNBQUEwRCxJQUNBLElBQUF4RCxFQUFBQyxHQXhCQSxTQUF3QkMsRUFBQUMsR0FBeUIsS0FBQUQsYUFBQUMsR0FBMEMsVUFBQWoxQyxVQUFBLHFDQTBCdkZ1NEMsQ0FBZWp5QyxLQUFBZ3lDLEdBRW5CLFFBQUE1SCxFQUFBOXRDLFVBQUExRSxPQUFBMUIsRUFBQStDLE1BQUFteEMsR0FBQUMsRUFBQSxFQUFtRUEsRUFBQUQsRUFBYUMsSUFDaEZuMEMsRUFBQW0wQyxHQUFBL3RDLFVBQUErdEMsR0FHQSxPQUFBbUUsRUFBQUMsRUFBb0NvRCxFQUEwQjd4QyxLQUFBc3VDLEVBQUExNkMsS0FBQWdTLE1BQUEwb0MsRUFBQSxDQUFBdHVDLE1BQUExQixPQUFBcEksS0FBQXU0QyxFQUFBOWUsTUFBQSxDQUM5RGoxQixNQUFBK3pDLEVBQUFJLGFBQUFKLEVBQUF4dUMsTUFBQXd1QyxFQUFBdnVDLFFBQUFrdkMsU0FDZXlDLEVBQTBCcEQsRUFBcENELEdBNEVMLE9BMUdBLFNBQWtCTSxFQUFBQyxHQUF3QixzQkFBQUEsR0FBQSxPQUFBQSxFQUErRCxVQUFBcjFDLFVBQUEsa0VBQUFxMUMsR0FBdUdELEVBQUF6NUMsVUFBQWxCLE9BQUFZLE9BQUFnNkMsS0FBQTE1QyxVQUFBLENBQXlFc0wsWUFBQSxDQUFlak0sTUFBQW82QyxFQUFBejZDLFlBQUEsRUFBQTI2QyxVQUFBLEVBQUFsK0IsY0FBQSxLQUE2RWkrQixJQUFBNTZDLE9BQUE4NkMsZUFBQTk2QyxPQUFBODZDLGVBQUFILEVBQUFDLEdBQUFELEVBQUFJLFVBQUFILEdBaUJuWG1ELENBQVNGLEVBQUExRCxHQWdCWDBELEVBQUEzOEMsVUFBQXUwQixnQkFBQSxXQUNBLE9BQ0F3bEIsT0FBY3dDLEVBQVEsR0FBRzV4QyxLQUFBRSxRQUFBa3ZDLE9BQUEsQ0FDekI5MEMsTUFBQSxDQUNBaWpCLFNBQUF2ZCxLQUFBQyxNQUFBc2QsVUFBQXZkLEtBQUFFLFFBQUFrdkMsT0FBQTkwQyxNQUFBaWpCLFNBQ0E3aUIsTUFBQXNGLEtBQUEydkIsTUFBQWoxQixXQU1BczNDLEVBQUEzOEMsVUFBQXc1QyxhQUFBLFNBQUE5QyxFQUFBcUQsR0FDQSxJQUFBc0MsRUFBQTNGLEVBQUEyRixjQUNBbjBCLEVBQUF3dUIsRUFBQXh1QixTQUNBbG1CLEVBQUEwMEMsRUFBQTEwQyxLQUNBK0MsRUFBQTJ4QyxFQUFBM3hDLE9BQ0ErbEMsRUFBQTRMLEVBQUE1TCxNQUNBaG1DLEVBQUE0eEMsRUFBQTV4QyxVQUVBLEdBQUF1M0MsRUFBQSxPQUFBQSxFQUVJekcsSUFBU21FLEVBQUEsaUVBRWIsSUFBQTkwQyxFQUFBODBDLEVBQUE5MEMsTUFFQXFzQyxHQUFBcHBCLEdBQUFqakIsRUFBQWlqQixVQUFBb3BCLFNBRUEsT0FBVzJKLEVBQVMzSixFQUFBLENBQVl0dkMsT0FBQStDLFNBQUErbEMsUUFBQWhtQyxhQUFpRUcsRUFBQUksUUFHakdzM0MsRUFBQTM4QyxVQUFBNjZCLG1CQUFBLFdBQ0l5ZixNQUFPM3ZDLEtBQUFDLE1BQUFreUMsV0FBQW55QyxLQUFBQyxNQUFBOEQsUUFBQSw2R0FFUDRyQyxNQUFPM3ZDLEtBQUFDLE1BQUFreUMsV0FBQW55QyxLQUFBQyxNQUFBcUIsV0FBbUR3d0MsRUFBZTl4QyxLQUFBQyxNQUFBcUIsV0FBQSxpSEFFekVxdUMsTUFBTzN2QyxLQUFBQyxNQUFBOEQsUUFBQS9ELEtBQUFDLE1BQUFxQixXQUFnRHd3QyxFQUFlOXhDLEtBQUFDLE1BQUFxQixXQUFBLCtHQUcxRTB3QyxFQUFBMzhDLFVBQUF3NkIsMEJBQUEsU0FBQTZmLEVBQUEwQyxHQUNJekMsTUFBT0QsRUFBQW55QixXQUFBdmQsS0FBQUMsTUFBQXNkLFVBQUEsMktBRVBveUIsT0FBT0QsRUFBQW55QixVQUFBdmQsS0FBQUMsTUFBQXNkLFVBQUEsdUtBRVh2ZCxLQUFBUSxTQUFBLENBQ0E5RixNQUFBc0YsS0FBQTZ1QyxhQUFBYSxFQUFBMEMsRUFBQWhELFdBSUE0QyxFQUFBMzhDLFVBQUEwTyxPQUFBLFdBQ0EsSUFBQXJKLEVBQUFzRixLQUFBMnZCLE1BQUFqMUIsTUFDQTgwQyxFQUFBeHZDLEtBQUFDLE1BQ0FxQixFQUFBa3VDLEVBQUFsdUMsU0FDQTZ3QyxFQUFBM0MsRUFBQTJDLFVBQ0FwdUMsRUFBQXlyQyxFQUFBenJDLE9BQ0FzdUMsRUFBQXJ5QyxLQUFBRSxRQUFBa3ZDLE9BQ0FyRSxFQUFBc0gsRUFBQXRILFFBQ0F6d0MsRUFBQSszQyxFQUFBLzNDLE1BQ0FnNEMsRUFBQUQsRUFBQUMsY0FHQXJ5QyxFQUFBLENBQWlCdkYsUUFBQTZpQixTQURqQnZkLEtBQUFDLE1BQUFzZCxVQUFBampCLEVBQUFpakIsU0FDaUJ3dEIsVUFBQXVILGlCQUVqQixPQUFBSCxFQUFBejNDLEVBQWtDKzBDLEVBQUE5NUMsRUFBSzhPLGNBQUEwdEMsRUFBQWx5QyxHQUFBLEtBRXZDOEQsRUFBQXJKLEVBQUFxSixFQUFBOUQsR0FBQSxLQUVBLG1CQUFBcUIsSUFBQXJCLEdBRUFxQixJQUFxQnd3QyxFQUFleHdDLEdBQW1CbXVDLEVBQUE5NUMsRUFBS3FOLFNBQUFFLEtBQUE1QixHQUU1RCxNQUdBMHdDLEVBMUZTLENBMkZQdkMsRUFBQTk1QyxFQUFLeU4sV0FFUDJ1QyxHQUFLdjBDLFVBQUEsQ0FDTGswQyxjQUFpQjlCLEVBQUFqNkMsRUFBU1IsT0FDMUJrQyxLQUFRdTRDLEVBQUFqNkMsRUFBUytwQyxPQUNqQlMsTUFBU3lQLEVBQUFqNkMsRUFBUzhwQyxLQUNsQnJsQyxPQUFVdzFDLEVBQUFqNkMsRUFBUzhwQyxLQUNuQnRsQyxVQUFheTFDLEVBQUFqNkMsRUFBUzhwQyxLQUN0QjBTLFVBQWF2QyxFQUFBajZDLEVBQVNxTSxLQUN0QitCLE9BQVU2ckMsRUFBQWo2QyxFQUFTcU0sS0FDbkJWLFNBQVlzdUMsRUFBQWo2QyxFQUFTc3FDLFVBQUEsQ0FBWTJQLEVBQUFqNkMsRUFBU3FNLEtBQU80dEMsRUFBQWo2QyxFQUFTd3FCLE9BQzFENUMsU0FBWXF5QixFQUFBajZDLEVBQVNSLFFBRXJCNDhDLEdBQUs3MEMsYUFBQSxDQUNMa3lDLE9BQVVRLEVBQUFqNkMsRUFBU3VxQyxNQUFBLENBQ25CNkssUUFBYTZFLEVBQUFqNkMsRUFBU1IsT0FBQW1xQyxXQUN0QmhsQyxNQUFXczFDLEVBQUFqNkMsRUFBU1IsT0FBQW1xQyxXQUNwQmdULGNBQW1CMUMsRUFBQWo2QyxFQUFTUixVQUc1QjQ4QyxHQUFLOTBDLGtCQUFBLENBQ0xteUMsT0FBVVEsRUFBQWo2QyxFQUFTUixPQUFBbXFDLFlBSUosSUFBQWlULEdBQUEsR0N2SUFDLEdBQUEsR0NEWEMsR0FBWSxHQUVaQyxHQUFVLEVBZ0NDQyxHQVhmLFdBQ0EsSUFBQXA2QyxFQUFBK0QsVUFBQTFFLE9BQUEsUUFBQTVCLElBQUFzRyxVQUFBLEdBQUFBLFVBQUEsT0FDQSt5QyxFQUFBL3lDLFVBQUExRSxPQUFBLFFBQUE1QixJQUFBc0csVUFBQSxHQUFBQSxVQUFBLE1BRUEsWUFBQS9ELEVBQ0FBLEVBeEJvQixTQUFBQSxHQUNwQixJQUFBcTRDLEVBQUFyNEMsRUFDQXM0QyxFQUFjNEIsR0FBWTdCLEtBQWU2QixHQUFZN0IsR0FBQSxJQUVyRCxHQUFBQyxFQUFBdDRDLEdBQUEsT0FBQXM0QyxFQUFBdDRDLEdBRUEsSUFBQXE2QyxFQUEwQjdCLEVBQUFwN0MsRUFBWWUsUUFBQTZCLEdBT3RDLE9BTE1tNkMsR0FYUSxNQVlkN0IsRUFBQXQ0QyxHQUFBcTZDLEVBQ0lGLE1BR0pFLEVBYWtCQyxDQUFnQnQ2QyxFQUNsQ3U2QyxDQUFBekQsRUFBQSxDQUE0Qi8xQyxRQUFBLEtDakN4Qnk1QyxHQUFRNStDLE9BQUFnSCxRQUFBLFNBQUFhLEdBQXVDLFFBQUF2SSxFQUFBLEVBQWdCQSxFQUFBNkksVUFBQTFFLE9BQXNCbkUsSUFBQSxDQUFPLElBQUFnSCxFQUFBNkIsVUFBQTdJLEdBQTJCLFFBQUF1QixLQUFBeUYsRUFBMEJ0RyxPQUFBa0IsVUFBQUMsZUFBQTFCLEtBQUE2RyxFQUFBekYsS0FBeURnSCxFQUFBaEgsR0FBQXlGLEVBQUF6RixJQUFpQyxPQUFBZ0gsR0FvQi9PLElBQUlnM0MsR0FBUSxTQUFBMUUsR0FHWixTQUFBMkUsSUFHQSxPQXhCQSxTQUF3QnZFLEVBQUFDLEdBQXlCLEtBQUFELGFBQUFDLEdBQTBDLFVBQUFqMUMsVUFBQSxxQ0FzQnZGdzVDLENBQWVsekMsS0FBQWl6QyxHQXBCbkIsU0FBbUM5RSxFQUFBdjZDLEdBQWMsSUFBQXU2QyxFQUFhLFVBQUFDLGVBQUEsNkRBQXlGLE9BQUF4NkMsR0FBQSxpQkFBQUEsR0FBQSxtQkFBQUEsRUFBQXU2QyxFQUFBdjZDLEVBc0I1SXUvQyxDQUEwQm56QyxLQUFBc3VDLEVBQUExb0MsTUFBQTVGLEtBQUExRCxZQStEckMsT0FuRkEsU0FBa0J3eUMsRUFBQUMsR0FBd0Isc0JBQUFBLEdBQUEsT0FBQUEsRUFBK0QsVUFBQXIxQyxVQUFBLGtFQUFBcTFDLEdBQXVHRCxFQUFBejVDLFVBQUFsQixPQUFBWSxPQUFBZzZDLEtBQUExNUMsVUFBQSxDQUF5RXNMLFlBQUEsQ0FBZWpNLE1BQUFvNkMsRUFBQXo2QyxZQUFBLEVBQUEyNkMsVUFBQSxFQUFBbCtCLGNBQUEsS0FBNkVpK0IsSUFBQTU2QyxPQUFBODZDLGVBQUE5NkMsT0FBQTg2QyxlQUFBSCxFQUFBQyxHQUFBRCxFQUFBSSxVQUFBSCxHQWVuWHFFLENBQVNILEVBQUEzRSxHQVFYMkUsRUFBQTU5QyxVQUFBZytDLFNBQUEsV0FDQSxPQUFBcnpDLEtBQUFFLFFBQUFrdkMsUUFBQXB2QyxLQUFBRSxRQUFBa3ZDLE9BQUFrRCxlQUdBVyxFQUFBNTlDLFVBQUE2NkIsbUJBQUEsV0FDSSthLElBQVNqckMsS0FBQUUsUUFBQWt2QyxPQUFBLG9EQUVicHZDLEtBQUFxekMsWUFBQXJ6QyxLQUFBc3pDLFdBR0FMLEVBQUE1OUMsVUFBQTg2QixrQkFBQSxXQUNBbndCLEtBQUFxekMsWUFBQXJ6QyxLQUFBc3pDLFdBR0FMLEVBQUE1OUMsVUFBQTI4QixtQkFBQSxTQUFBdWhCLEdBQ0EsSUFBQUMsRUFBaUJ6SyxFQUFjd0ssRUFBQXAzQyxJQUMvQnMzQyxFQUFpQjFLLEVBQWMvb0MsS0FBQUMsTUFBQTlELElBRXZCbXRDLEVBQWlCa0ssRUFBQUMsR0FDbkI5RCxLQUFPLG9FQUFBOEQsRUFBQTlNLFNBQUE4TSxFQUFBN2pDLE9BQUEsS0FJYjVQLEtBQUFzekMsV0FHQUwsRUFBQTU5QyxVQUFBcStDLFVBQUEsU0FBQTNILEdBQ0EsSUFBQTJGLEVBQUEzRixFQUFBMkYsY0FDQXYxQyxFQUFBNHZDLEVBQUE1dkMsR0FFQSxPQUFBdTFDLEVBQ0EsaUJBQUF2MUMsRUFDZXcyQyxHQUFZeDJDLEVBQUF1MUMsRUFBQXJDLFFBRVowRCxHQUFRLEdBQUc1MkMsRUFBQSxDQUMxQndxQyxTQUFvQmdNLEdBQVl4MkMsRUFBQXdxQyxTQUFBK0ssRUFBQXJDLFVBS2hDbHpDLEdBR0E4MkMsRUFBQTU5QyxVQUFBaStDLFFBQUEsV0FDQSxJQUFBdkksRUFBQS9xQyxLQUFBRSxRQUFBa3ZDLE9BQUFyRSxRQUNBNXlDLEVBQUE2SCxLQUFBQyxNQUFBOUgsS0FFQWdFLEVBQUE2RCxLQUFBMHpDLFVBQUExekMsS0FBQUMsT0FFQTlILEVBQ0E0eUMsRUFBQTV5QyxLQUFBZ0UsR0FFQTR1QyxFQUFBMzBDLFFBQUErRixJQUlBODJDLEVBQUE1OUMsVUFBQTBPLE9BQUEsV0FDQSxhQUdBa3ZDLEVBckVZLENBc0VWeEQsRUFBQTk1QyxFQUFLeU4sV0FFUDR2QyxHQUFReDFDLFVBQUEsQ0FDUmswQyxjQUFpQjlCLEVBQUFqNkMsRUFBU1IsT0FDMUJnRCxLQUFReTNDLEVBQUFqNkMsRUFBUzhwQyxLQUNqQnhqQyxLQUFRMnpDLEVBQUFqNkMsRUFBUytwQyxPQUNqQnZqQyxHQUFNeXpDLEVBQUFqNkMsRUFBU3NxQyxVQUFBLENBQVkyUCxFQUFBajZDLEVBQVMrcEMsT0FBU2tRLEVBQUFqNkMsRUFBU1IsU0FBQW1xQyxZQUV0RDBULEdBQVE3MUMsYUFBQSxDQUNSaEYsTUFBQSxHQUVBNjZDLEdBQVE5MUMsYUFBQSxDQUNSa3lDLE9BQVVRLEVBQUFqNkMsRUFBU3VxQyxNQUFBLENBQ25CNkssUUFBYTZFLEVBQUFqNkMsRUFBU3VxQyxNQUFBLENBQ3RCL25DLEtBQVl5M0MsRUFBQWo2QyxFQUFTcU0sS0FBQXM5QixXQUNyQmxwQyxRQUFldzVDLEVBQUFqNkMsRUFBU3FNLEtBQUFzOUIsYUFDbkJBLFdBQ0xnVCxjQUFtQjFDLEVBQUFqNkMsRUFBU1IsU0FDekJtcUMsWUFJWSxJQzdHQXFVLEdENkdBLDBDRWhIWEMsR0FBUXovQyxPQUFBZ0gsUUFBQSxTQUFBYSxHQUF1QyxRQUFBdkksRUFBQSxFQUFnQkEsRUFBQTZJLFVBQUExRSxPQUFzQm5FLElBQUEsQ0FBTyxJQUFBZ0gsRUFBQTZCLFVBQUE3SSxHQUEyQixRQUFBdUIsS0FBQXlGLEVBQTBCdEcsT0FBQWtCLFVBQUFDLGVBQUExQixLQUFBNkcsRUFBQXpGLEtBQXlEZ0gsRUFBQWhILEdBQUF5RixFQUFBekYsSUFBaUMsT0FBQWdILEdBWS9PLElDVGU2M0MsR0RTRCxTQUFBendDLEdBQ2QsSUFBQWpFLEVBQUEsU0FBQWMsR0FDQSxJQUFBNnpDLEVBQUE3ekMsRUFBQTZ6QyxvQkFDQUMsRUFiQSxTQUFBNzZDLEVBQUFlLEdBQThDLElBQUErQixFQUFBLEdBQWlCLFFBQUF2SSxLQUFBeUYsRUFBcUJlLEVBQUErTCxRQUFBdlMsSUFBQSxHQUFvQ1UsT0FBQWtCLFVBQUFDLGVBQUExQixLQUFBc0YsRUFBQXpGLEtBQTZEdUksRUFBQXZJLEdBQUF5RixFQUFBekYsSUFBc0IsT0FBQXVJLEVBYTNNZzRDLENBQUEvekMsRUFBQSx5QkFFQSxPQUFXd3ZDLEVBQUE5NUMsRUFBSzhPLGNBQWU4dEMsR0FBSyxDQUNwQ2p4QyxTQUFBLFNBQUEyeUMsR0FDQSxPQUFleEUsRUFBQTk1QyxFQUFLOE8sY0FBQXJCLEVBQTBCd3dDLEdBQVEsR0FBR0csRUFBQUUsRUFBQSxDQUN6RC95QyxJQUFBNHlDLFNBWUEsT0FOQTMwQyxFQUFBL0IsWUFBQSxlQUFBZ0csRUFBQWhHLGFBQUFnRyxFQUFBcFAsTUFBQSxJQUNBbUwsRUFBQSswQyxpQkFBQTl3QyxFQUNBakUsRUFBQTNCLFVBQUEsQ0FDQXMyQyxvQkFBeUJsRSxFQUFBajZDLEVBQVNxTSxNQUd6Qm15QyxLQUFZaDFDLEVBQUFpRSxJRWhDUjlPLEdBQU0sU0FBQTBiLEdBQ2pCLE9BQU9va0MsTUFBTXBrQyxHQUFLeWlCLEtBQUssU0FBQXY3QixHQUFHLE9BQUlBLEVBQUltOUMsVUNHdkJDLEdBQWEsU0FBQ0MsR0FBeUIsSUFDNUM3OEMsRUFBc0IsS0FEc0I0RSxVQUFBMUUsT0FBQSxRQUFBNUIsSUFBQXNHLFVBQUEsR0FBQUEsVUFBQSxHQUFOLEdBQ3JCLEdBQ3ZCLE9BQU9oSSxHQUFHLDRDQUFBZ0ssT0FDb0NpMkMsRUFEcEMsV0FBQWoyQyxPQUpNLEdBSU4sWUFBQUEsT0FDNEU1RyxFQUQ1RSxjQUVSKzZCLEtBQUssU0FBQXNaLEdBQXdCLElBQXJCOXBDLEVBQXFCOHBDLEVBQXJCOXBDLE1BQU91eUMsRUFBY3pJLEVBQWR5SSxRQUNmLE1BQU8sQ0FDTEMsTUFBT3ZzQyxLQUFLd3NDLEtBQUt6eUMsRUFSTCxJQVNadXlDLFFBQVNBLEVBQVEvNEMsSUFBSSxTQUFBazVDLEdBQU0sTUFBSyxDQUM5QjNnRCxLQUFNMmdELEVBQU8zZ0QsS0FDYjRnRCxZQUFhRCxFQUFPRSxlQUNwQjM3QixHQUFJeTdCLEVBQU96N0IsVUFNTjQ3QixHQUFZLFNBQUE1N0IsR0FDdkIsT0FBTzVrQixHQUFHLHNDQUFBZ0ssT0FDOEI0YSxFQUQ5Qix3QkFFUnVaLEtBQUssU0FBQWtpQixHQUFNLE1BQUssQ0FDaEJ6N0IsR0FBSXk3QixFQUFPejdCLEdBQ1hsbEIsS0FBTTJnRCxFQUFPM2dELEtBQ2I0Z0QsWUFBYUQsRUFBT0UsZUFDcEJFLE1BQU9KLEVBQU9JLFVDM0JkQyxHQUFRN2dELE9BQUFnSCxRQUFBLFNBQUFhLEdBQXVDLFFBQUF2SSxFQUFBLEVBQWdCQSxFQUFBNkksVUFBQTFFLE9BQXNCbkUsSUFBQSxDQUFPLElBQUFnSCxFQUFBNkIsVUFBQTdJLEdBQTJCLFFBQUF1QixLQUFBeUYsRUFBMEJ0RyxPQUFBa0IsVUFBQUMsZUFBQTFCLEtBQUE2RyxFQUFBekYsS0FBeURnSCxFQUFBaEgsR0FBQXlGLEVBQUF6RixJQUFpQyxPQUFBZ0gsR0FNL08sU0FBU2k1QyxHQUEwQjlHLEVBQUF2NkMsR0FBYyxJQUFBdTZDLEVBQWEsVUFBQUMsZUFBQSw2REFBeUYsT0FBQXg2QyxHQUFBLGlCQUFBQSxHQUFBLG1CQUFBQSxFQUFBdTZDLEVBQUF2NkMsRUFTdkosSUFBQXNoRCxHQUFBLFNBQUEzSyxHQUNBLFNBQUFBLEVBQUFuOEIsU0FBQW04QixFQUFBcDhCLFFBQUFvOEIsRUFBQXI4QixTQUFBcThCLEVBQUFsekIsV0FPSTg5QixHQUFJLFNBQUE3RyxHQUdSLFNBQUE4RyxJQUNBLElBQUE1RyxFQUFBQyxHQXZCQSxTQUF3QkMsRUFBQUMsR0FBeUIsS0FBQUQsYUFBQUMsR0FBMEMsVUFBQWoxQyxVQUFBLHFDQXlCdkYyN0MsQ0FBZXIxQyxLQUFBbzFDLEdBRW5CLFFBQUFoTCxFQUFBOXRDLFVBQUExRSxPQUFBMUIsRUFBQStDLE1BQUFteEMsR0FBQUMsRUFBQSxFQUFtRUEsRUFBQUQsRUFBYUMsSUFDaEZuMEMsRUFBQW0wQyxHQUFBL3RDLFVBQUErdEMsR0FHQSxPQUFBbUUsRUFBQUMsRUFBb0N3RyxHQUEwQmoxQyxLQUFBc3VDLEVBQUExNkMsS0FBQWdTLE1BQUEwb0MsRUFBQSxDQUFBdHVDLE1BQUExQixPQUFBcEksS0FBQXU0QyxFQUFBNkcsWUFBQSxTQUFBL0ssR0FHOUQsR0FGQWtFLEVBQUF4dUMsTUFBQTQwQixTQUFBNFosRUFBQXh1QyxNQUFBNDBCLFFBQUEwVixJQUVBQSxFQUFBbi9CLGtCQUNBLElBQUFtL0IsRUFBQWp6QixTQUNBbTNCLEVBQUF4dUMsTUFBQWpFLFNBQ0FrNUMsR0FBQTNLLEdBQ0EsQ0FDQUEsRUFBQTMrQixpQkFFQSxJQUFBbS9CLEVBQUEwRCxFQUFBdnVDLFFBQUFrdkMsT0FBQXJFLFFBQ0F3SyxFQUFBOUcsRUFBQXh1QyxNQUNBN0osRUFBQW0vQyxFQUFBbi9DLFFBQ0ErRixFQUFBbzVDLEVBQUFwNUMsR0FHQS9GLEVBQ0EyMEMsRUFBQTMwQyxRQUFBK0YsR0FFQTR1QyxFQUFBNXlDLEtBQUFnRSxLQUdlODRDLEdBQTBCeEcsRUFBcENELEdBc0JMLE9BdkVBLFNBQWtCTSxFQUFBQyxHQUF3QixzQkFBQUEsR0FBQSxPQUFBQSxFQUErRCxVQUFBcjFDLFVBQUEsa0VBQUFxMUMsR0FBdUdELEVBQUF6NUMsVUFBQWxCLE9BQUFZLE9BQUFnNkMsS0FBQTE1QyxVQUFBLENBQXlFc0wsWUFBQSxDQUFlak0sTUFBQW82QyxFQUFBejZDLFlBQUEsRUFBQTI2QyxVQUFBLEVBQUFsK0IsY0FBQSxLQUE2RWkrQixJQUFBNTZDLE9BQUE4NkMsZUFBQTk2QyxPQUFBODZDLGVBQUFILEVBQUFDLEdBQUFELEVBQUFJLFVBQUFILEdBZ0JuWHlHLENBQVNKLEVBQUE5RyxHQW9DWDhHLEVBQUEvL0MsVUFBQTBPLE9BQUEsV0FDQSxJQUFBeXJDLEVBQUF4dkMsS0FBQUMsTUFFQTlELEdBREFxekMsRUFBQXA1QyxRQUNBbzVDLEVBQUFyekMsSUFDQXM1QyxFQUFBakcsRUFBQWlHLFNBQ0F4MUMsRUEvREEsU0FBaUMvRyxFQUFBZSxHQUFhLElBQUErQixFQUFBLEdBQWlCLFFBQUF2SSxLQUFBeUYsRUFBcUJlLEVBQUErTCxRQUFBdlMsSUFBQSxHQUFvQ1UsT0FBQWtCLFVBQUFDLGVBQUExQixLQUFBc0YsRUFBQXpGLEtBQTZEdUksRUFBQXZJLEdBQUF5RixFQUFBekYsSUFBc0IsT0FBQXVJLEVBK0QzTDA1QyxDQUF3QmxHLEVBQUEsNkJBRXBDdkUsSUFBU2pyQyxLQUFBRSxRQUFBa3ZDLE9BQUEsZ0RBRVRuRSxTQUFTajFDLElBQUFtRyxFQUFBLHNDQUViLElBQUE0dUMsRUFBQS9xQyxLQUFBRSxRQUFBa3ZDLE9BQUFyRSxRQUVBeHRCLEVBQUEsaUJBQUFwaEIsRUFBNEM0c0MsRUFBYzVzQyxFQUFBLFVBQUE0dUMsRUFBQXh0QixVQUFBcGhCLEVBRTFEc3BDLEVBQUFzRixFQUFBb0MsV0FBQTV2QixHQUNBLE9BQVdreUIsRUFBQTk1QyxFQUFLOE8sY0FBQSxJQUFvQnV3QyxHQUFRLEdBQUcvMEMsRUFBQSxDQUFVNDBCLFFBQUE3MEIsS0FBQXMxQyxZQUFBN1AsT0FBQXZrQyxJQUFBdTBDLE1BR3pETCxFQXhEUSxDQXlETjNGLEVBQUE5NUMsRUFBS3lOLFdBRVAreEMsR0FBSTMzQyxVQUFBLENBQ0pxM0IsUUFBVythLEVBQUFqNkMsRUFBU3FNLEtBQ3BCaEcsT0FBVTR6QyxFQUFBajZDLEVBQVMrcEMsT0FDbkJ0cEMsUUFBV3c1QyxFQUFBajZDLEVBQVM4cEMsS0FDcEJ0akMsR0FBTXl6QyxFQUFBajZDLEVBQVNzcUMsVUFBQSxDQUFZMlAsRUFBQWo2QyxFQUFTK3BDLE9BQVNrUSxFQUFBajZDLEVBQVNSLFNBQUFtcUMsV0FDdERtVyxTQUFZN0YsRUFBQWo2QyxFQUFTc3FDLFVBQUEsQ0FBWTJQLEVBQUFqNkMsRUFBUytwQyxPQUFTa1EsRUFBQWo2QyxFQUFTcU0sUUFFNURtekMsR0FBSWg0QyxhQUFBLENBQ0ovRyxTQUFBLEdBRUErK0MsR0FBSWo0QyxhQUFBLENBQ0preUMsT0FBVVEsRUFBQWo2QyxFQUFTdXFDLE1BQUEsQ0FDbkI2SyxRQUFhNkUsRUFBQWo2QyxFQUFTdXFDLE1BQUEsQ0FDdEIvbkMsS0FBWXkzQyxFQUFBajZDLEVBQVNxTSxLQUFBczlCLFdBQ3JCbHBDLFFBQWV3NUMsRUFBQWo2QyxFQUFTcU0sS0FBQXM5QixXQUN4QjZOLFdBQWtCeUMsRUFBQWo2QyxFQUFTcU0sS0FBQXM5QixhQUN0QkEsYUFDRkEsWUFJWSxJQUFBcVcsR0FBQSxHQ2xHVEMsR0FBUyxTQUFBN0osR0FBK0IsSUFBNUIvM0MsRUFBNEIrM0MsRUFBNUIvM0MsS0FBTTRnRCxFQUFzQjdJLEVBQXRCNkksWUFBYTE3QixFQUFTNnlCLEVBQVQ3eUIsR0FDbkMsT0FDRXUyQixFQUFBOTVDLEVBQUE4TyxjQUFBLFdBQ0VnckMsRUFBQTk1QyxFQUFBOE8sY0FBQSxVQUNHelEsRUFESCxNQUNZNGdELEdBRVpuRixFQUFBOTVDLEVBQUE4TyxjQUFDa3hDLEdBQUQsQ0FBTXg1QyxHQUFJMDVDLEdBQU9DLE9BQU9DLE9BQU83OEIsSUFBL0IsZ0JBQWtEbGxCLEVBQWxELE9BS040aEQsR0FBT3A0QyxVQUFZLENBQ2pCeEosS0FBTXFzQyxJQUFVWCxPQUFPSixXQUN2QnNWLFlBQWF2VSxJQUFVWCxPQUN2QnhtQixHQUFJbW5CLElBQVVYLE9BQU9KLFlBR1JzVyw4QkNsQlRJLEdBQVMsU0FBQWpLLEdBQTZDLElBQTFDa0ssRUFBMENsSyxFQUExQ2tLLFlBQWFDLEVBQTZCbkssRUFBN0JtSyxXQUFZQyxFQUFpQnBLLEVBQWpCb0ssV0FDckNDLEVBQWlCLEtBQ2xCSCxFQUFjLElBQ2ZHLEVBQ0UzRyxFQUFBOTVDLEVBQUE4TyxjQUFBLFVBQVFvd0IsUUFBUyxrQkFBTXNoQixFQUFXRixFQUFjLEtBQWhELE1BR0osSUFBSUksRUFBYSxLQU1qQixPQUxHSixFQUFjQyxJQUNmRyxFQUNFNUcsRUFBQTk1QyxFQUFBOE8sY0FBQSxVQUFRb3dCLFFBQVMsa0JBQU1zaEIsRUFBV0YsRUFBYyxLQUFoRCxNQUlGeEcsRUFBQTk1QyxFQUFBOE8sY0FBQSxPQUFLNnhDLFVBQVcvUyxLQUFPM0IsUUFDcEJ3VSxFQUNEM0csRUFBQTk1QyxFQUFBOE8sY0FBQSxZQUNHd3hDLEVBREgsV0FDd0JDLEdBRXZCRyxJQUtQTCxHQUFPeDRDLFVBQVksQ0FDakJ5NEMsWUFBYTVWLElBQVU1d0IsT0FDdkJ5bUMsV0FBWTdWLElBQVU1d0IsT0FDdEIwbUMsV0FBWTlWLElBQVVyK0IsTUFHVGcwQyxrM0JDekJUTyx5VkFNSSxDQUNOTixZQUFhLEVBQ2JDLFdBQVksS0FDWjFCLFFBQVMsNkJBR0EsV0FBTSxJQUNQZ0MsRUFBZUMsS0FBWWhnRCxNQUNqQ2c0QyxFQUFLeHVDLE1BQU1zZCxTQUFTM04sT0FBT2pZLE1BQU0sSUFEM0I2K0MsV0FHUixJQUFJQSxFQUFZLE9BQU8vSCxFQUFLanVDLFNBQVMsQ0FBRWcwQyxRQUFTLEtBRWhERixHQUFXa0MsRUFBWS9ILEVBQUs5ZSxNQUFNc21CLGFBQWF4akIsS0FBSyxTQUFBc1osR0FBQSxJQUFHMEksRUFBSDFJLEVBQUcwSSxNQUFPRCxFQUFWekksRUFBVXlJLFFBQVYsT0FDbEQvRixFQUFLanVDLFNBQVMsQ0FBRTAxQyxXQUFZekIsRUFBT0QsZ0RBY3BCLFNBQUFrQyxHQUNqQmpJLEVBQUtqdUMsU0FBUyxDQUFFeTFDLFlBQWFTLEdBQVEsV0FDbkNqSSxFQUFLa0ksK0NBSVUsU0FBQXBNLEdBQ2pCQSxFQUFNMytCLGlCQUNOLElBQU00cUMsRUFBYWp0QyxTQUFTcXRDLGVBQWUsY0FBY2xpRCxNQUNuRG1pRCxFQUFjSixLQUFZNzhDLFVBQVUsQ0FBRTQ4QyxlQUM1Qy9ILEVBQUt4dUMsTUFBTThxQyxRQUFRNXlDLEtBQUssQ0FDdEIyK0MsU0FBVWpCLEdBQU9rQixPQUFPMS9DLEtBQ3hCdVksT0FBUWluQywrUEE3Q096ekMsa0VBd0JqQnBELEtBQUsyMkMsc0RBR1lwRCxHQUNkQSxFQUFVaDJCLFNBQVMzTixTQUFXNVAsS0FBS0MsTUFBTXNkLFNBQVMzTixRQUNuRDVQLEtBQUsyMkMsNENBb0JBLElBQUFLLEVBQ3NDaDNDLEtBQUsydkIsTUFBMUNzbUIsRUFERGUsRUFDQ2YsWUFBYUMsRUFEZGMsRUFDY2QsV0FFZmUsRUFIQ0QsRUFDMEJ4QyxRQUVMLzRDLElBQUksU0FBQWs1QyxHQUM5QixPQUNFbEYsRUFBQTk1QyxFQUFBOE8sY0FBQSxNQUFJelAsSUFBSzIvQyxFQUFPejdCLElBQ2R1MkIsRUFBQTk1QyxFQUFBOE8sY0FBQ3l5QyxHQUFELENBQ0VoK0IsR0FBSXk3QixFQUFPejdCLEdBQ1hsbEIsS0FBTTJnRCxFQUFPM2dELEtBQ2I0Z0QsWUFBYUQsRUFBT0MsaUJBTTVCLE9BQ0VuRixFQUFBOTVDLEVBQUE4TyxjQUFDMHlDLEVBQUEsU0FBRCxLQUNFMUgsRUFBQTk1QyxFQUFBOE8sY0FBQSxRQUFNMnlDLFNBQVVwM0MsS0FBS3EzQyxrQkFDbkI1SCxFQUFBOTVDLEVBQUE4TyxjQUFBLFNBQU95VSxHQUFHLGFBQWF6YixLQUFLLFNBQzVCZ3lDLEVBQUE5NUMsRUFBQThPLGNBQUEsVUFBUWhILEtBQUssVUFBYixXQUVGZ3lDLEVBQUE5NUMsRUFBQThPLGNBQUM2eUMsR0FBRCxDQUNFckIsWUFBYUEsRUFDYkMsV0FBWUEsRUFDWkMsV0FBWW4yQyxLQUFLdTNDLG1CQUVuQjlILEVBQUE5NUMsRUFBQThPLGNBQUEsVUFBS3d5Qyw4Q0EzRVBWLGVBQ2UsQ0FDakJoNUIsU0FBVThpQixJQUFVbHJDLE9BQU9tcUMsV0FDM0J5TCxRQUFTMUssSUFBVWxyQyxPQUFPbXFDLGFBOEVma1ksVUFBV2pCLElDckZwQmtCLEdBQU8sU0FBQTFMLEdBQXFCLElBQWxCLzNDLEVBQWtCKzNDLEVBQWxCLzNDLEtBQU0wakQsRUFBWTNMLEVBQVoyTCxNQUNwQixPQUNFakksRUFBQTk1QyxFQUFBOE8sY0FBQzB5QyxFQUFBLFNBQUQsS0FDRTFILEVBQUE5NUMsRUFBQThPLGNBQUEsVUFBS2l6QyxHQUNMakksRUFBQTk1QyxFQUFBOE8sY0FBQ2t4QyxHQUFELENBQU14NUMsR0FBSTA1QyxHQUFPOEIsT0FBTzVCLE9BQU8vaEQsRUFBTTBqRCxJQUFyQyxnQkFLQUUsR0FBUSxTQUFBQyxHQUFxQixJQUFsQjlDLEVBQWtCOEMsRUFBbEI5QyxNQUFPL2dELEVBQVc2akQsRUFBWDdqRCxLQUN0QixPQUNFeTdDLEVBQUE5NUMsRUFBQThPLGNBQUMweUMsRUFBQSxTQUFELEtBQ0dwQyxFQUFNdDVDLElBQUksU0FBQXE4QyxHQUFJLE9BQ2JySSxFQUFBOTVDLEVBQUE4TyxjQUFDc3pDLEdBQUQsQ0FBTS9pRCxJQUFLOGlELEVBQUs1K0IsR0FBSXcrQixNQUFPSSxFQUFLSixNQUFPMWpELEtBQU1BLFFBTXJENGpELEdBQU1wNkMsVUFBWSxDQUNoQnUzQyxNQUFPMVUsSUFBVWIsTUFBTUYsV0FDdkJ0ckMsS0FBTXFzQyxJQUFVWCxRQUdIa1ksazNCQ3hCTUkseVZBS1gsQ0FDTnJELE9BQVEsZ0NBR0ksV0FDWixJQUFNejdCLEVBQUt1MUIsRUFBS3h1QyxNQUFNc2QsU0FBU29wQixTQUFTaHZDLE1BQU0sR0FBR2dFLE1BQU0sS0FBSyxHQUM1RG01QyxHQUFVNTdCLEdBQUl1WixLQUFLLFNBQUFraUIsR0FBTSxPQUFJbEcsRUFBS2p1QyxTQUFTLENBQUVtMEMsd1FBWFB2eEMsa0VBZXRDcEQsS0FBS2k0QywrQ0FHRSxJQUFBQyxFQUM4Qmw0QyxLQUFLMnZCLE1BQU1nbEIsT0FBeEMzZ0QsRUFERGtrRCxFQUNDbGtELEtBQU00Z0QsRUFEUHNELEVBQ090RCxZQUFhRyxFQURwQm1ELEVBQ29CbkQsTUFDM0IsWUFBYS8rQyxJQUFWKytDLEVBQTRCLEtBRzdCdEYsRUFBQTk1QyxFQUFBOE8sY0FBQSxXQUNFZ3JDLEVBQUE5NUMsRUFBQThPLGNBQUEsVUFBS3pRLEdBQ0x5N0MsRUFBQTk1QyxFQUFBOE8sY0FBQSxVQUFLbXdDLEdBQ0xuRixFQUFBOTVDLEVBQUE4TyxjQUFDMHpDLEdBQUQsQ0FBT3BELE1BQU9BLEVBQU8vZ0QsS0FBTUEsbTVCQTFCZGdrRCxlQUNBLENBQ2pCejZCLFNBQVU4aUIsSUFBVWxyQyxPQUFPbXFDLGlCQ0hWOFkseVZBS1gsQ0FDTkMsT0FBUSxHQUNSMUQsT0FBUSxHQUNSK0MsTUFBTyw4UEFSeUJ0MEMsa0VBV2QsSUFBQW1zQyxFQUFBdnZDLEtBQ1oyMEMsRUFBUzMwQyxLQUFLQyxNQUFNc2QsU0FBU29wQixTQUFTaHZDLE1BQU0sR0FBR2dFLE1BQU0sS0FBSyxHQUMxRCs3QyxFQUFRMTNDLEtBQUtDLE1BQU1zZCxTQUFTb3BCLFNBQVNodkMsTUFBTSxHQUFHZ0UsTUFBTSxLQUFLLElQYzFDLFNBQUNnNUMsRUFBUStDLEdBQ2hDLE9BQU9wakQsR0FBRyw2QkFBQWdLLE9BQThCcTJDLEVBQTlCLEtBQUFyMkMsT0FBd0NvNUMsSUFBU2psQixLQUFLLFNBQUEzd0IsR0FBTSxNQUFLLENBQ3pFdTJDLE9BQVF2MkMsRUFBT3UyQyxXT2RmQyxDQUFVM0QsRUFBUStDLEdBQU9qbEIsS0FBSyxTQUFBM3dCLEdBQzVCeXRDLEVBQUsvdUMsU0FBUyxDQUFFNjNDLE9BQVF2MkMsRUFBT3UyQyxPQUFRMUQsU0FBUStDLDZDQUkxQyxJQUFBVixFQUMyQmgzQyxLQUFLMnZCLE1BQS9CZ2xCLEVBRERxQyxFQUNDckMsT0FBUStDLEVBRFRWLEVBQ1NVLE1BQU9XLEVBRGhCckIsRUFDZ0JxQixPQUV2QixPQUNFNUksRUFBQTk1QyxFQUFBOE8sY0FBQzB5QyxFQUFBLFNBQUQsS0FDRTFILEVBQUE5NUMsRUFBQThPLGNBQUEsVUFBS2t3QyxHQUNMbEYsRUFBQTk1QyxFQUFBOE8sY0FBQSxVQUFLaXpDLEdBQ0xqSSxFQUFBOTVDLEVBQUE4TyxjQUFBLFNBQUk0ekMsOENBM0JTRCxlQUNBLENBQ2pCNzZCLFNBQVU4aUIsSUFBVWxyQyxPQUFPbXFDLGFDRnhCLElBQU11VyxHQUFTLENBQ3BCa0IsT0FBUSxDQUNOMS9DLEtBQU0sVUFDTitMLFVBQVdtekMsR0FDWFIsT0FBUSxpQkFBTSxZQUVoQkQsT0FBUSxDQUNOeitDLEtBQU0sZUFDTitMLFVBQVc0MEMsR0FDWGpDLE9BQVEsU0FBQTc4QixHQUFFLGtCQUFBNWEsT0FBZ0I0YSxLQUU1QnkrQixPQUFRLENBQ050Z0QsS0FBTSx5QkFDTitMLFVBQVdnMUMsR0FDWHJDLE9BQVEsU0FBQ3BCLEVBQVErQyxHQUFULGlCQUFBcDVDLE9BQThCcTJDLEVBQTlCLEtBQUFyMkMsT0FBd0NvNUMsTUNkcERhLElBQVN4MEMsT0FBTzByQyxFQUFBOTVDLEVBQUE4TyxjQ0tELFdBQ2IsT0FDRWdyQyxFQUFBOTVDLEVBQUE4TyxjQUFDMHJDLEVBQUQsS0FDRVYsRUFBQTk1QyxFQUFBOE8sY0FBQ2t0QyxFQUFELEtBQ0VsQyxFQUFBOTVDLEVBQUE4TyxjQUFDK3RDLEdBQUQsQ0FBT243QyxLQUFNdytDLEdBQU9rQixPQUFPMS9DLEtBQU04NkMsVUFBVzBELEdBQU9rQixPQUFPM3pDLFlBQzFEcXNDLEVBQUE5NUMsRUFBQThPLGNBQUMrdEMsR0FBRCxDQUFPTCxVQUFXMEQsR0FBT0MsT0FBTzF5QyxVQUFXL0wsS0FBTXcrQyxHQUFPQyxPQUFPeitDLE9BQy9EbzRDLEVBQUE5NUMsRUFBQThPLGNBQUMrdEMsR0FBRCxDQUFPTCxVQUFXMEQsR0FBTzhCLE9BQU92MEMsVUFBVy9MLEtBQU13K0MsR0FBTzhCLE9BQU90Z0QsT0FDL0RvNEMsRUFBQTk1QyxFQUFBOE8sY0FBQ2t2QyxHQUFELENBQVV4M0MsR0FBSTA1QyxHQUFPa0IsT0FBTzEvQyxVRFpwQixNQUFTa1MsU0FBU3F0QyxlQUFlIiwiZmlsZSI6ImJ1bmRsZS4zZTliZWQ2ODRlOWRjY2Q5NjMwNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiL1wiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMjUpO1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUkVBQ1RfRUxFTUVOVF9UWVBFID0gKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiZcbiAgICBTeW1ib2wuZm9yICYmXG4gICAgU3ltYm9sLmZvcigncmVhY3QuZWxlbWVudCcpKSB8fFxuICAgIDB4ZWFjNztcblxuICB2YXIgaXNWYWxpZEVsZW1lbnQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiZcbiAgICAgIG9iamVjdCAhPT0gbnVsbCAmJlxuICAgICAgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gIH07XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShpc1ZhbGlkRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAyMDE0LTIwMTUsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU2ltaWxhciB0byBpbnZhcmlhbnQgYnV0IG9ubHkgbG9ncyBhIHdhcm5pbmcgaWYgdGhlIGNvbmRpdGlvbiBpcyBub3QgbWV0LlxuICogVGhpcyBjYW4gYmUgdXNlZCB0byBsb2cgaXNzdWVzIGluIGRldmVsb3BtZW50IGVudmlyb25tZW50cyBpbiBjcml0aWNhbFxuICogcGF0aHMuIFJlbW92aW5nIHRoZSBsb2dnaW5nIGNvZGUgZm9yIHByb2R1Y3Rpb24gZW52aXJvbm1lbnRzIHdpbGwga2VlcCB0aGVcbiAqIHNhbWUgbG9naWMgYW5kIGZvbGxvdyB0aGUgc2FtZSBjb2RlIHBhdGhzLlxuICovXG5cbnZhciB3YXJuaW5nID0gZnVuY3Rpb24oKSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgd2FybmluZyA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhcmdzKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gPiAyID8gbGVuIC0gMiA6IDApO1xuICAgIGZvciAodmFyIGtleSA9IDI7IGtleSA8IGxlbjsga2V5KyspIHtcbiAgICAgIGFyZ3Nba2V5IC0gMl0gPSBhcmd1bWVudHNba2V5XTtcbiAgICB9XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdgd2FybmluZyhjb25kaXRpb24sIGZvcm1hdCwgLi4uYXJncylgIHJlcXVpcmVzIGEgd2FybmluZyAnICtcbiAgICAgICAgJ21lc3NhZ2UgYXJndW1lbnQnXG4gICAgICApO1xuICAgIH1cblxuICAgIGlmIChmb3JtYXQubGVuZ3RoIDwgMTAgfHwgKC9eW3NcXFddKiQvKS50ZXN0KGZvcm1hdCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ1RoZSB3YXJuaW5nIGZvcm1hdCBzaG91bGQgYmUgYWJsZSB0byB1bmlxdWVseSBpZGVudGlmeSB0aGlzICcgK1xuICAgICAgICAnd2FybmluZy4gUGxlYXNlLCB1c2UgYSBtb3JlIGRlc2NyaXB0aXZlIGZvcm1hdCB0aGFuOiAnICsgZm9ybWF0XG4gICAgICApO1xuICAgIH1cblxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgdmFyIG1lc3NhZ2UgPSAnV2FybmluZzogJyArXG4gICAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgICAgfSk7XG4gICAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgICB9XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgICAgLy8gdG8gZmluZCB0aGUgY2FsbHNpdGUgdGhhdCBjYXVzZWQgdGhpcyB3YXJuaW5nIHRvIGZpcmUuXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICAgIH0gY2F0Y2goeCkge31cbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2FybmluZztcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFVzZSBpbnZhcmlhbnQoKSB0byBhc3NlcnQgc3RhdGUgd2hpY2ggeW91ciBwcm9ncmFtIGFzc3VtZXMgdG8gYmUgdHJ1ZS5cbiAqXG4gKiBQcm92aWRlIHNwcmludGYtc3R5bGUgZm9ybWF0IChvbmx5ICVzIGlzIHN1cHBvcnRlZCkgYW5kIGFyZ3VtZW50c1xuICogdG8gcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCB3aGF0IGJyb2tlIGFuZCB3aGF0IHlvdSB3ZXJlXG4gKiBleHBlY3RpbmcuXG4gKlxuICogVGhlIGludmFyaWFudCBtZXNzYWdlIHdpbGwgYmUgc3RyaXBwZWQgaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBpbnZhcmlhbnRcbiAqIHdpbGwgcmVtYWluIHRvIGVuc3VyZSBsb2dpYyBkb2VzIG5vdCBkaWZmZXIgaW4gcHJvZHVjdGlvbi5cbiAqL1xuXG52YXIgaW52YXJpYW50ID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGEsIGIsIGMsIGQsIGUsIGYpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YXJpYW50IHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gIH1cblxuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHZhciBlcnJvcjtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICAnTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgJyArXG4gICAgICAgICdmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLidcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhcmdzID0gW2EsIGIsIGMsIGQsIGUsIGZdO1xuICAgICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7IHJldHVybiBhcmdzW2FyZ0luZGV4KytdOyB9KVxuICAgICAgKTtcbiAgICAgIGVycm9yLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgfVxuXG4gICAgZXJyb3IuZnJhbWVzVG9Qb3AgPSAxOyAvLyB3ZSBkb24ndCBjYXJlIGFib3V0IGludmFyaWFudCdzIG93biBmcmFtZVxuICAgIHRocm93IGVycm9yO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGludmFyaWFudDtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFNpbWlsYXIgdG8gaW52YXJpYW50IGJ1dCBvbmx5IGxvZ3MgYSB3YXJuaW5nIGlmIHRoZSBjb25kaXRpb24gaXMgbm90IG1ldC5cbiAqIFRoaXMgY2FuIGJlIHVzZWQgdG8gbG9nIGlzc3VlcyBpbiBkZXZlbG9wbWVudCBlbnZpcm9ubWVudHMgaW4gY3JpdGljYWxcbiAqIHBhdGhzLiBSZW1vdmluZyB0aGUgbG9nZ2luZyBjb2RlIGZvciBwcm9kdWN0aW9uIGVudmlyb25tZW50cyB3aWxsIGtlZXAgdGhlXG4gKiBzYW1lIGxvZ2ljIGFuZCBmb2xsb3cgdGhlIHNhbWUgY29kZSBwYXRocy5cbiAqL1xuXG52YXIgX19ERVZfXyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbic7XG5cbnZhciB3YXJuaW5nID0gZnVuY3Rpb24oKSB7fTtcblxuaWYgKF9fREVWX18pIHtcbiAgdmFyIHByaW50V2FybmluZyA9IGZ1bmN0aW9uIHByaW50V2FybmluZyhmb3JtYXQsIGFyZ3MpIHtcbiAgICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBhcmdzID0gbmV3IEFycmF5KGxlbiA+IDIgPyBsZW4gLSAyIDogMCk7XG4gICAgZm9yICh2YXIga2V5ID0gMjsga2V5IDwgbGVuOyBrZXkrKykge1xuICAgICAgYXJnc1trZXkgLSAyXSA9IGFyZ3VtZW50c1trZXldO1xuICAgIH1cbiAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgK1xuICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYXJnc1thcmdJbmRleCsrXTtcbiAgICAgIH0pO1xuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAvLyAtLS0gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgLS0tXG4gICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIH0gY2F0Y2ggKHgpIHt9XG4gIH1cblxuICB3YXJuaW5nID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGFyZ3MpIHtcbiAgICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBhcmdzID0gbmV3IEFycmF5KGxlbiA+IDIgPyBsZW4gLSAyIDogMCk7XG4gICAgZm9yICh2YXIga2V5ID0gMjsga2V5IDwgbGVuOyBrZXkrKykge1xuICAgICAgYXJnc1trZXkgLSAyXSA9IGFyZ3VtZW50c1trZXldO1xuICAgIH1cbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAnYHdhcm5pbmcoY29uZGl0aW9uLCBmb3JtYXQsIC4uLmFyZ3MpYCByZXF1aXJlcyBhIHdhcm5pbmcgJyArXG4gICAgICAgICAgJ21lc3NhZ2UgYXJndW1lbnQnXG4gICAgICApO1xuICAgIH1cbiAgICBpZiAoIWNvbmRpdGlvbikge1xuICAgICAgcHJpbnRXYXJuaW5nLmFwcGx5KG51bGwsIFtmb3JtYXRdLmNvbmNhdChhcmdzKSk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHdhcm5pbmc7XG4iLCJ2YXIgaXNhcnJheSA9IHJlcXVpcmUoJ2lzYXJyYXknKVxuXG4vKipcbiAqIEV4cG9zZSBgcGF0aFRvUmVnZXhwYC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBwYXRoVG9SZWdleHBcbm1vZHVsZS5leHBvcnRzLnBhcnNlID0gcGFyc2Vcbm1vZHVsZS5leHBvcnRzLmNvbXBpbGUgPSBjb21waWxlXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb0Z1bmN0aW9uID0gdG9rZW5zVG9GdW5jdGlvblxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9SZWdFeHAgPSB0b2tlbnNUb1JlZ0V4cFxuXG4vKipcbiAqIFRoZSBtYWluIHBhdGggbWF0Y2hpbmcgcmVnZXhwIHV0aWxpdHkuXG4gKlxuICogQHR5cGUge1JlZ0V4cH1cbiAqL1xudmFyIFBBVEhfUkVHRVhQID0gbmV3IFJlZ0V4cChbXG4gIC8vIE1hdGNoIGVzY2FwZWQgY2hhcmFjdGVycyB0aGF0IHdvdWxkIG90aGVyd2lzZSBhcHBlYXIgaW4gZnV0dXJlIG1hdGNoZXMuXG4gIC8vIFRoaXMgYWxsb3dzIHRoZSB1c2VyIHRvIGVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgdGhhdCB3b24ndCB0cmFuc2Zvcm0uXG4gICcoXFxcXFxcXFwuKScsXG4gIC8vIE1hdGNoIEV4cHJlc3Mtc3R5bGUgcGFyYW1ldGVycyBhbmQgdW4tbmFtZWQgcGFyYW1ldGVycyB3aXRoIGEgcHJlZml4XG4gIC8vIGFuZCBvcHRpb25hbCBzdWZmaXhlcy4gTWF0Y2hlcyBhcHBlYXIgYXM6XG4gIC8vXG4gIC8vIFwiLzp0ZXN0KFxcXFxkKyk/XCIgPT4gW1wiL1wiLCBcInRlc3RcIiwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgXCI/XCIsIHVuZGVmaW5lZF1cbiAgLy8gXCIvcm91dGUoXFxcXGQrKVwiICA9PiBbdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkXVxuICAvLyBcIi8qXCIgICAgICAgICAgICA9PiBbXCIvXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCIqXCJdXG4gICcoW1xcXFwvLl0pPyg/Oig/OlxcXFw6KFxcXFx3KykoPzpcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKT98XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSkoWysqP10pP3woXFxcXCopKSdcbl0uam9pbignfCcpLCAnZycpXG5cbi8qKlxuICogUGFyc2UgYSBzdHJpbmcgZm9yIHRoZSByYXcgdG9rZW5zLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gb3B0aW9uc1xuICogQHJldHVybiB7IUFycmF5fVxuICovXG5mdW5jdGlvbiBwYXJzZSAoc3RyLCBvcHRpb25zKSB7XG4gIHZhciB0b2tlbnMgPSBbXVxuICB2YXIga2V5ID0gMFxuICB2YXIgaW5kZXggPSAwXG4gIHZhciBwYXRoID0gJydcbiAgdmFyIGRlZmF1bHREZWxpbWl0ZXIgPSBvcHRpb25zICYmIG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJ1xuICB2YXIgcmVzXG5cbiAgd2hpbGUgKChyZXMgPSBQQVRIX1JFR0VYUC5leGVjKHN0cikpICE9IG51bGwpIHtcbiAgICB2YXIgbSA9IHJlc1swXVxuICAgIHZhciBlc2NhcGVkID0gcmVzWzFdXG4gICAgdmFyIG9mZnNldCA9IHJlcy5pbmRleFxuICAgIHBhdGggKz0gc3RyLnNsaWNlKGluZGV4LCBvZmZzZXQpXG4gICAgaW5kZXggPSBvZmZzZXQgKyBtLmxlbmd0aFxuXG4gICAgLy8gSWdub3JlIGFscmVhZHkgZXNjYXBlZCBzZXF1ZW5jZXMuXG4gICAgaWYgKGVzY2FwZWQpIHtcbiAgICAgIHBhdGggKz0gZXNjYXBlZFsxXVxuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICB2YXIgbmV4dCA9IHN0cltpbmRleF1cbiAgICB2YXIgcHJlZml4ID0gcmVzWzJdXG4gICAgdmFyIG5hbWUgPSByZXNbM11cbiAgICB2YXIgY2FwdHVyZSA9IHJlc1s0XVxuICAgIHZhciBncm91cCA9IHJlc1s1XVxuICAgIHZhciBtb2RpZmllciA9IHJlc1s2XVxuICAgIHZhciBhc3RlcmlzayA9IHJlc1s3XVxuXG4gICAgLy8gUHVzaCB0aGUgY3VycmVudCBwYXRoIG9udG8gdGhlIHRva2Vucy5cbiAgICBpZiAocGF0aCkge1xuICAgICAgdG9rZW5zLnB1c2gocGF0aClcbiAgICAgIHBhdGggPSAnJ1xuICAgIH1cblxuICAgIHZhciBwYXJ0aWFsID0gcHJlZml4ICE9IG51bGwgJiYgbmV4dCAhPSBudWxsICYmIG5leHQgIT09IHByZWZpeFxuICAgIHZhciByZXBlYXQgPSBtb2RpZmllciA9PT0gJysnIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgb3B0aW9uYWwgPSBtb2RpZmllciA9PT0gJz8nIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgZGVsaW1pdGVyID0gcmVzWzJdIHx8IGRlZmF1bHREZWxpbWl0ZXJcbiAgICB2YXIgcGF0dGVybiA9IGNhcHR1cmUgfHwgZ3JvdXBcblxuICAgIHRva2Vucy5wdXNoKHtcbiAgICAgIG5hbWU6IG5hbWUgfHwga2V5KyssXG4gICAgICBwcmVmaXg6IHByZWZpeCB8fCAnJyxcbiAgICAgIGRlbGltaXRlcjogZGVsaW1pdGVyLFxuICAgICAgb3B0aW9uYWw6IG9wdGlvbmFsLFxuICAgICAgcmVwZWF0OiByZXBlYXQsXG4gICAgICBwYXJ0aWFsOiBwYXJ0aWFsLFxuICAgICAgYXN0ZXJpc2s6ICEhYXN0ZXJpc2ssXG4gICAgICBwYXR0ZXJuOiBwYXR0ZXJuID8gZXNjYXBlR3JvdXAocGF0dGVybikgOiAoYXN0ZXJpc2sgPyAnLionIDogJ1teJyArIGVzY2FwZVN0cmluZyhkZWxpbWl0ZXIpICsgJ10rPycpXG4gICAgfSlcbiAgfVxuXG4gIC8vIE1hdGNoIGFueSBjaGFyYWN0ZXJzIHN0aWxsIHJlbWFpbmluZy5cbiAgaWYgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xuICAgIHBhdGggKz0gc3RyLnN1YnN0cihpbmRleClcbiAgfVxuXG4gIC8vIElmIHRoZSBwYXRoIGV4aXN0cywgcHVzaCBpdCBvbnRvIHRoZSBlbmQuXG4gIGlmIChwYXRoKSB7XG4gICAgdG9rZW5zLnB1c2gocGF0aClcbiAgfVxuXG4gIHJldHVybiB0b2tlbnNcbn1cblxuLyoqXG4gKiBDb21waWxlIGEgc3RyaW5nIHRvIGEgdGVtcGxhdGUgZnVuY3Rpb24gZm9yIHRoZSBwYXRoLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gICAgICAgICAgICAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFmdW5jdGlvbihPYmplY3Q9LCBPYmplY3Q9KX1cbiAqL1xuZnVuY3Rpb24gY29tcGlsZSAoc3RyLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb0Z1bmN0aW9uKHBhcnNlKHN0ciwgb3B0aW9ucykpXG59XG5cbi8qKlxuICogUHJldHRpZXIgZW5jb2Rpbmcgb2YgVVJJIHBhdGggc2VnbWVudHMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvW1xcLz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFbmNvZGUgdGhlIGFzdGVyaXNrIHBhcmFtZXRlci4gU2ltaWxhciB0byBgcHJldHR5YCwgYnV0IGFsbG93cyBzbGFzaGVzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlQXN0ZXJpc2sgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvWz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBtZXRob2QgZm9yIHRyYW5zZm9ybWluZyB0b2tlbnMgaW50byB0aGUgcGF0aCBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9GdW5jdGlvbiAodG9rZW5zKSB7XG4gIC8vIENvbXBpbGUgYWxsIHRoZSB0b2tlbnMgaW50byByZWdleHBzLlxuICB2YXIgbWF0Y2hlcyA9IG5ldyBBcnJheSh0b2tlbnMubGVuZ3RoKVxuXG4gIC8vIENvbXBpbGUgYWxsIHRoZSBwYXR0ZXJucyBiZWZvcmUgY29tcGlsYXRpb24uXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHR5cGVvZiB0b2tlbnNbaV0gPT09ICdvYmplY3QnKSB7XG4gICAgICBtYXRjaGVzW2ldID0gbmV3IFJlZ0V4cCgnXig/OicgKyB0b2tlbnNbaV0ucGF0dGVybiArICcpJCcpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcbiAgICB2YXIgcGF0aCA9ICcnXG4gICAgdmFyIGRhdGEgPSBvYmogfHwge31cbiAgICB2YXIgb3B0aW9ucyA9IG9wdHMgfHwge31cbiAgICB2YXIgZW5jb2RlID0gb3B0aW9ucy5wcmV0dHkgPyBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgOiBlbmNvZGVVUklDb21wb25lbnRcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cblxuICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcGF0aCArPSB0b2tlblxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHZhciB2YWx1ZSA9IGRhdGFbdG9rZW4ubmFtZV1cbiAgICAgIHZhciBzZWdtZW50XG5cbiAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIGlmICh0b2tlbi5vcHRpb25hbCkge1xuICAgICAgICAgIC8vIFByZXBlbmQgcGFydGlhbCBzZWdtZW50IHByZWZpeGVzLlxuICAgICAgICAgIGlmICh0b2tlbi5wYXJ0aWFsKSB7XG4gICAgICAgICAgICBwYXRoICs9IHRva2VuLnByZWZpeFxuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBiZSBkZWZpbmVkJylcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoaXNhcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgaWYgKCF0b2tlbi5yZXBlYXQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCByZXBlYXQsIGJ1dCByZWNlaXZlZCBgJyArIEpTT04uc3RyaW5naWZ5KHZhbHVlKSArICdgJylcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbm90IGJlIGVtcHR5JylcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHZhbHVlLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgc2VnbWVudCA9IGVuY29kZSh2YWx1ZVtqXSlcblxuICAgICAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhbGwgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeShzZWdtZW50KSArICdgJylcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBwYXRoICs9IChqID09PSAwID8gdG9rZW4ucHJlZml4IDogdG9rZW4uZGVsaW1pdGVyKSArIHNlZ21lbnRcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHNlZ21lbnQgPSB0b2tlbi5hc3RlcmlzayA/IGVuY29kZUFzdGVyaXNrKHZhbHVlKSA6IGVuY29kZSh2YWx1ZSlcblxuICAgICAgaWYgKCFtYXRjaGVzW2ldLnRlc3Qoc2VnbWVudCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBtYXRjaCBcIicgKyB0b2tlbi5wYXR0ZXJuICsgJ1wiLCBidXQgcmVjZWl2ZWQgXCInICsgc2VnbWVudCArICdcIicpXG4gICAgICB9XG5cbiAgICAgIHBhdGggKz0gdG9rZW4ucHJlZml4ICsgc2VnbWVudFxuICAgIH1cblxuICAgIHJldHVybiBwYXRoXG4gIH1cbn1cblxuLyoqXG4gKiBFc2NhcGUgYSByZWd1bGFyIGV4cHJlc3Npb24gc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZVN0cmluZyAoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXxcXC9cXFxcXSkvZywgJ1xcXFwkMScpXG59XG5cbi8qKlxuICogRXNjYXBlIHRoZSBjYXB0dXJpbmcgZ3JvdXAgYnkgZXNjYXBpbmcgc3BlY2lhbCBjaGFyYWN0ZXJzIGFuZCBtZWFuaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gZ3JvdXBcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZXNjYXBlR3JvdXAgKGdyb3VwKSB7XG4gIHJldHVybiBncm91cC5yZXBsYWNlKC8oWz0hOiRcXC8oKV0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEF0dGFjaCB0aGUga2V5cyBhcyBhIHByb3BlcnR5IG9mIHRoZSByZWdleHAuXG4gKlxuICogQHBhcmFtICB7IVJlZ0V4cH0gcmVcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGF0dGFjaEtleXMgKHJlLCBrZXlzKSB7XG4gIHJlLmtleXMgPSBrZXlzXG4gIHJldHVybiByZVxufVxuXG4vKipcbiAqIEdldCB0aGUgZmxhZ3MgZm9yIGEgcmVnZXhwIGZyb20gdGhlIG9wdGlvbnMuXG4gKlxuICogQHBhcmFtICB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGZsYWdzIChvcHRpb25zKSB7XG4gIHJldHVybiBvcHRpb25zLnNlbnNpdGl2ZSA/ICcnIDogJ2knXG59XG5cbi8qKlxuICogUHVsbCBvdXQga2V5cyBmcm9tIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHJlZ2V4cFRvUmVnZXhwIChwYXRoLCBrZXlzKSB7XG4gIC8vIFVzZSBhIG5lZ2F0aXZlIGxvb2thaGVhZCB0byBtYXRjaCBvbmx5IGNhcHR1cmluZyBncm91cHMuXG4gIHZhciBncm91cHMgPSBwYXRoLnNvdXJjZS5tYXRjaCgvXFwoKD8hXFw/KS9nKVxuXG4gIGlmIChncm91cHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGdyb3Vwcy5sZW5ndGg7IGkrKykge1xuICAgICAga2V5cy5wdXNoKHtcbiAgICAgICAgbmFtZTogaSxcbiAgICAgICAgcHJlZml4OiBudWxsLFxuICAgICAgICBkZWxpbWl0ZXI6IG51bGwsXG4gICAgICAgIG9wdGlvbmFsOiBmYWxzZSxcbiAgICAgICAgcmVwZWF0OiBmYWxzZSxcbiAgICAgICAgcGFydGlhbDogZmFsc2UsXG4gICAgICAgIGFzdGVyaXNrOiBmYWxzZSxcbiAgICAgICAgcGF0dGVybjogbnVsbFxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhwYXRoLCBrZXlzKVxufVxuXG4vKipcbiAqIFRyYW5zZm9ybSBhbiBhcnJheSBpbnRvIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gIHBhdGhcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGFycmF5VG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgdmFyIHBhcnRzID0gW11cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpKyspIHtcbiAgICBwYXJ0cy5wdXNoKHBhdGhUb1JlZ2V4cChwYXRoW2ldLCBrZXlzLCBvcHRpb25zKS5zb3VyY2UpXG4gIH1cblxuICB2YXIgcmVnZXhwID0gbmV3IFJlZ0V4cCgnKD86JyArIHBhcnRzLmpvaW4oJ3wnKSArICcpJywgZmxhZ3Mob3B0aW9ucykpXG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocmVnZXhwLCBrZXlzKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHBhdGggcmVnZXhwIGZyb20gc3RyaW5nIGlucHV0LlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHN0cmluZ1RvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb1JlZ0V4cChwYXJzZShwYXRoLCBvcHRpb25zKSwga2V5cywgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBmdW5jdGlvbiBmb3IgdGFraW5nIHRva2VucyBhbmQgcmV0dXJuaW5nIGEgUmVnRXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gICAgICAgICAgdG9rZW5zXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19IGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9SZWdFeHAgKHRva2Vucywga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICB2YXIgc3RyaWN0ID0gb3B0aW9ucy5zdHJpY3RcbiAgdmFyIGVuZCA9IG9wdGlvbnMuZW5kICE9PSBmYWxzZVxuICB2YXIgcm91dGUgPSAnJ1xuXG4gIC8vIEl0ZXJhdGUgb3ZlciB0aGUgdG9rZW5zIGFuZCBjcmVhdGUgb3VyIHJlZ2V4cCBzdHJpbmcuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgcm91dGUgKz0gZXNjYXBlU3RyaW5nKHRva2VuKVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgcHJlZml4ID0gZXNjYXBlU3RyaW5nKHRva2VuLnByZWZpeClcbiAgICAgIHZhciBjYXB0dXJlID0gJyg/OicgKyB0b2tlbi5wYXR0ZXJuICsgJyknXG5cbiAgICAgIGtleXMucHVzaCh0b2tlbilcblxuICAgICAgaWYgKHRva2VuLnJlcGVhdCkge1xuICAgICAgICBjYXB0dXJlICs9ICcoPzonICsgcHJlZml4ICsgY2FwdHVyZSArICcpKidcbiAgICAgIH1cblxuICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgIGlmICghdG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgIGNhcHR1cmUgPSAnKD86JyArIHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSk/J1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyk/J1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpJ1xuICAgICAgfVxuXG4gICAgICByb3V0ZSArPSBjYXB0dXJlXG4gICAgfVxuICB9XG5cbiAgdmFyIGRlbGltaXRlciA9IGVzY2FwZVN0cmluZyhvcHRpb25zLmRlbGltaXRlciB8fCAnLycpXG4gIHZhciBlbmRzV2l0aERlbGltaXRlciA9IHJvdXRlLnNsaWNlKC1kZWxpbWl0ZXIubGVuZ3RoKSA9PT0gZGVsaW1pdGVyXG5cbiAgLy8gSW4gbm9uLXN0cmljdCBtb2RlIHdlIGFsbG93IGEgc2xhc2ggYXQgdGhlIGVuZCBvZiBtYXRjaC4gSWYgdGhlIHBhdGggdG9cbiAgLy8gbWF0Y2ggYWxyZWFkeSBlbmRzIHdpdGggYSBzbGFzaCwgd2UgcmVtb3ZlIGl0IGZvciBjb25zaXN0ZW5jeS4gVGhlIHNsYXNoXG4gIC8vIGlzIHZhbGlkIGF0IHRoZSBlbmQgb2YgYSBwYXRoIG1hdGNoLCBub3QgaW4gdGhlIG1pZGRsZS4gVGhpcyBpcyBpbXBvcnRhbnRcbiAgLy8gaW4gbm9uLWVuZGluZyBtb2RlLCB3aGVyZSBcIi90ZXN0L1wiIHNob3VsZG4ndCBtYXRjaCBcIi90ZXN0Ly9yb3V0ZVwiLlxuICBpZiAoIXN0cmljdCkge1xuICAgIHJvdXRlID0gKGVuZHNXaXRoRGVsaW1pdGVyID8gcm91dGUuc2xpY2UoMCwgLWRlbGltaXRlci5sZW5ndGgpIDogcm91dGUpICsgJyg/OicgKyBkZWxpbWl0ZXIgKyAnKD89JCkpPydcbiAgfVxuXG4gIGlmIChlbmQpIHtcbiAgICByb3V0ZSArPSAnJCdcbiAgfSBlbHNlIHtcbiAgICAvLyBJbiBub24tZW5kaW5nIG1vZGUsIHdlIG5lZWQgdGhlIGNhcHR1cmluZyBncm91cHMgdG8gbWF0Y2ggYXMgbXVjaCBhc1xuICAgIC8vIHBvc3NpYmxlIGJ5IHVzaW5nIGEgcG9zaXRpdmUgbG9va2FoZWFkIHRvIHRoZSBlbmQgb3IgbmV4dCBwYXRoIHNlZ21lbnQuXG4gICAgcm91dGUgKz0gc3RyaWN0ICYmIGVuZHNXaXRoRGVsaW1pdGVyID8gJycgOiAnKD89JyArIGRlbGltaXRlciArICd8JCknXG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhuZXcgUmVnRXhwKCdeJyArIHJvdXRlLCBmbGFncyhvcHRpb25zKSksIGtleXMpXG59XG5cbi8qKlxuICogTm9ybWFsaXplIHRoZSBnaXZlbiBwYXRoIHN0cmluZywgcmV0dXJuaW5nIGEgcmVndWxhciBleHByZXNzaW9uLlxuICpcbiAqIEFuIGVtcHR5IGFycmF5IGNhbiBiZSBwYXNzZWQgaW4gZm9yIHRoZSBrZXlzLCB3aGljaCB3aWxsIGhvbGQgdGhlXG4gKiBwbGFjZWhvbGRlciBrZXkgZGVzY3JpcHRpb25zLiBGb3IgZXhhbXBsZSwgdXNpbmcgYC91c2VyLzppZGAsIGBrZXlzYCB3aWxsXG4gKiBjb250YWluIGBbeyBuYW1lOiAnaWQnLCBkZWxpbWl0ZXI6ICcvJywgb3B0aW9uYWw6IGZhbHNlLCByZXBlYXQ6IGZhbHNlIH1dYC5cbiAqXG4gKiBAcGFyYW0gIHsoc3RyaW5nfFJlZ0V4cHxBcnJheSl9IHBhdGhcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0gICAgICAga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBwYXRoVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgaWYgKHBhdGggaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICByZXR1cm4gcmVnZXhwVG9SZWdleHAocGF0aCwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSlcbiAgfVxuXG4gIGlmIChpc2FycmF5KHBhdGgpKSB7XG4gICAgcmV0dXJuIGFycmF5VG9SZWdleHAoLyoqIEB0eXBlIHshQXJyYXl9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbiAgfVxuXG4gIHJldHVybiBzdHJpbmdUb1JlZ2V4cCgvKiogQHR5cGUge3N0cmluZ30gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLmRlY29kZSA9IGV4cG9ydHMucGFyc2UgPSByZXF1aXJlKCcuL2RlY29kZScpO1xuZXhwb3J0cy5lbmNvZGUgPSBleHBvcnRzLnN0cmluZ2lmeSA9IHJlcXVpcmUoJy4vZW5jb2RlJyk7XG4iLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTUtMSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuL1BhZ2luZy5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcInNvdXJjZU1hcFwiOnRydWUsXCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS01LTEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi9QYWdpbmcuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNS0xIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4vUGFnaW5nLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgMjAxNSwgWWFob28hIEluYy5cbiAqIENvcHlyaWdodHMgbGljZW5zZWQgdW5kZXIgdGhlIE5ldyBCU0QgTGljZW5zZS4gU2VlIHRoZSBhY2NvbXBhbnlpbmcgTElDRU5TRSBmaWxlIGZvciB0ZXJtcy5cbiAqL1xudmFyIFJFQUNUX1NUQVRJQ1MgPSB7XG4gICAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gICAgY29udGV4dFR5cGVzOiB0cnVlLFxuICAgIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgICBnZXREZWZhdWx0UHJvcHM6IHRydWUsXG4gICAgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOiB0cnVlLFxuICAgIG1peGluczogdHJ1ZSxcbiAgICBwcm9wVHlwZXM6IHRydWUsXG4gICAgdHlwZTogdHJ1ZVxufTtcblxudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gICAgbmFtZTogdHJ1ZSxcbiAgICBsZW5ndGg6IHRydWUsXG4gICAgcHJvdG90eXBlOiB0cnVlLFxuICAgIGNhbGxlcjogdHJ1ZSxcbiAgICBjYWxsZWU6IHRydWUsXG4gICAgYXJndW1lbnRzOiB0cnVlLFxuICAgIGFyaXR5OiB0cnVlXG59O1xuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBnZXRQcm90b3R5cGVPZiAmJiBnZXRQcm90b3R5cGVPZihPYmplY3QpO1xuXG5mdW5jdGlvbiBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIHNvdXJjZUNvbXBvbmVudCwgYmxhY2tsaXN0KSB7XG4gICAgaWYgKHR5cGVvZiBzb3VyY2VDb21wb25lbnQgIT09ICdzdHJpbmcnKSB7IC8vIGRvbid0IGhvaXN0IG92ZXIgc3RyaW5nIChodG1sKSBjb21wb25lbnRzXG5cbiAgICAgICAgaWYgKG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICAgICAgdmFyIGluaGVyaXRlZENvbXBvbmVudCA9IGdldFByb3RvdHlwZU9mKHNvdXJjZUNvbXBvbmVudCk7XG4gICAgICAgICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgICAgICAgICAgaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBpbmhlcml0ZWRDb21wb25lbnQsIGJsYWNrbGlzdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB2YXIga2V5cyA9IGdldE93blByb3BlcnR5TmFtZXMoc291cmNlQ29tcG9uZW50KTtcblxuICAgICAgICBpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgICAgICAgICBrZXlzID0ga2V5cy5jb25jYXQoZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZUNvbXBvbmVudCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICAgICAgICAgIGlmICghUkVBQ1RfU1RBVElDU1trZXldICYmICFLTk9XTl9TVEFUSUNTW2tleV0gJiYgKCFibGFja2xpc3QgfHwgIWJsYWNrbGlzdFtrZXldKSkge1xuICAgICAgICAgICAgICAgIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZUNvbXBvbmVudCwga2V5KTtcbiAgICAgICAgICAgICAgICB0cnkgeyAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhvaXN0Tm9uUmVhY3RTdGF0aWNzO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi42LjFcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBrPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixwPW4/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMscT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYscj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx0PW4/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHU9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsdj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx3PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAseD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEseT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMix6PW4/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLEE9bj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTpcbjYwMTE1LEI9bj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixDPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBhYShhLGIsZSxjLGQsZyxoLGYpe2lmKCFhKXthPXZvaWQgMDtpZih2b2lkIDA9PT1iKWE9RXJyb3IoXCJNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtlbHNle3ZhciBsPVtlLGMsZCxnLGgsZl0sbT0wO2E9RXJyb3IoYi5yZXBsYWNlKC8lcy9nLGZ1bmN0aW9uKCl7cmV0dXJuIGxbbSsrXX0pKTthLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCJ9YS5mcmFtZXNUb1BvcD0xO3Rocm93IGE7fX1cbmZ1bmN0aW9uIEQoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxlPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTA7YzxiO2MrKyllKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjKzFdKTthYSghMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGUpfXZhciBFPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxGPXt9O1xuZnVuY3Rpb24gRyhhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1GO3RoaXMudXBkYXRlcj1lfHxFfUcucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307Ry5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hP0QoXCI4NVwiKTp2b2lkIDA7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtHLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtmdW5jdGlvbiBIKCl7fUgucHJvdG90eXBlPUcucHJvdG90eXBlO2Z1bmN0aW9uIEkoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9Rjt0aGlzLnVwZGF0ZXI9ZXx8RX12YXIgSj1JLnByb3RvdHlwZT1uZXcgSDtcbkouY29uc3RydWN0b3I9STtrKEosRy5wcm90b3R5cGUpO0ouaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEs9e2N1cnJlbnQ6bnVsbCxjdXJyZW50RGlzcGF0Y2hlcjpudWxsfSxMPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksTT17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gTihhLGIsZSl7dmFyIGM9dm9pZCAwLGQ9e30sZz1udWxsLGg9bnVsbDtpZihudWxsIT1iKWZvcihjIGluIHZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihnPVwiXCIrYi5rZXkpLGIpTC5jYWxsKGIsYykmJiFNLmhhc093blByb3BlcnR5KGMpJiYoZFtjXT1iW2NdKTt2YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZC5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxmKXtmb3IodmFyIGw9QXJyYXkoZiksbT0wO208ZjttKyspbFttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWx9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGMgaW4gZj1hLmRlZmF1bHRQcm9wcyxmKXZvaWQgMD09PWRbY10mJihkW2NdPWZbY10pO3JldHVybnskJHR5cGVvZjpwLHR5cGU6YSxrZXk6ZyxyZWY6aCxwcm9wczpkLF9vd25lcjpLLmN1cnJlbnR9fVxuZnVuY3Rpb24gYmEoYSxiKXtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIE8oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PXB9ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIisoXCJcIithKS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgUD0vXFwvKy9nLFE9W107ZnVuY3Rpb24gUihhLGIsZSxjKXtpZihRLmxlbmd0aCl7dmFyIGQ9US5wb3AoKTtkLnJlc3VsdD1hO2Qua2V5UHJlZml4PWI7ZC5mdW5jPWU7ZC5jb250ZXh0PWM7ZC5jb3VudD0wO3JldHVybiBkfXJldHVybntyZXN1bHQ6YSxrZXlQcmVmaXg6YixmdW5jOmUsY29udGV4dDpjLGNvdW50OjB9fVxuZnVuY3Rpb24gUyhhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPlEubGVuZ3RoJiZRLnB1c2goYSl9XG5mdW5jdGlvbiBUKGEsYixlLGMpe3ZhciBkPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1kfHxcImJvb2xlYW5cIj09PWQpYT1udWxsO3ZhciBnPSExO2lmKG51bGw9PT1hKWc9ITA7ZWxzZSBzd2l0Y2goZCl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpnPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBwOmNhc2UgcTpnPSEwfX1pZihnKXJldHVybiBlKGMsYSxcIlwiPT09Yj9cIi5cIitVKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBoPTA7aDxhLmxlbmd0aDtoKyspe2Q9YVtoXTt2YXIgZj1iK1UoZCxoKTtnKz1UKGQsZixlLGMpfWVsc2UgaWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYT9mPW51bGw6KGY9QyYmYVtDXXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxoPVxuMDshKGQ9YS5uZXh0KCkpLmRvbmU7KWQ9ZC52YWx1ZSxmPWIrVShkLGgrKyksZys9VChkLGYsZSxjKTtlbHNlXCJvYmplY3RcIj09PWQmJihlPVwiXCIrYSxEKFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09ZT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjplLFwiXCIpKTtyZXR1cm4gZ31mdW5jdGlvbiBWKGEsYixlKXtyZXR1cm4gbnVsbD09YT8wOlQoYSxcIlwiLGIsZSl9ZnVuY3Rpb24gVShhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShhLmtleSk6Yi50b1N0cmluZygzNil9ZnVuY3Rpb24gY2EoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gZGEoYSxiLGUpe3ZhciBjPWEucmVzdWx0LGQ9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/VyhhLGMsZSxmdW5jdGlvbihhKXtyZXR1cm4gYX0pOm51bGwhPWEmJihPKGEpJiYoYT1iYShhLGQrKCFhLmtleXx8YiYmYi5rZXk9PT1hLmtleT9cIlwiOihcIlwiK2Eua2V5KS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpK2UpKSxjLnB1c2goYSkpfWZ1bmN0aW9uIFcoYSxiLGUsYyxkKXt2YXIgZz1cIlwiO251bGwhPWUmJihnPShcIlwiK2UpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIik7Yj1SKGIsZyxjLGQpO1YoYSxkYSxiKTtTKGIpfVxudmFyIFg9e0NoaWxkcmVuOnttYXA6ZnVuY3Rpb24oYSxiLGUpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGM9W107VyhhLGMsbnVsbCxiLGUpO3JldHVybiBjfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixlKXtpZihudWxsPT1hKXJldHVybiBhO2I9UihudWxsLG51bGwsYixlKTtWKGEsY2EsYik7UyhiKX0sY291bnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIFYoYSxmdW5jdGlvbigpe3JldHVybiBudWxsfSxudWxsKX0sdG9BcnJheTpmdW5jdGlvbihhKXt2YXIgYj1bXTtXKGEsYixudWxsLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk7cmV0dXJuIGJ9LG9ubHk6ZnVuY3Rpb24oYSl7TyhhKT92b2lkIDA6RChcIjE0M1wiKTtyZXR1cm4gYX19LGNyZWF0ZVJlZjpmdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fSxDb21wb25lbnQ6RyxQdXJlQ29tcG9uZW50OkksY3JlYXRlQ29udGV4dDpmdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOncsX2NhbGN1bGF0ZUNoYW5nZWRCaXRzOmIsXG5fY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX0sZm9yd2FyZFJlZjpmdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6eSxyZW5kZXI6YX19LGxhenk6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOkIsX2N0b3I6YSxfc3RhdHVzOi0xLF9yZXN1bHQ6bnVsbH19LG1lbW86ZnVuY3Rpb24oYSxiKXtyZXR1cm57JCR0eXBlb2Y6QSx0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19LEZyYWdtZW50OnIsU3RyaWN0TW9kZTp0LFN1c3BlbnNlOnosY3JlYXRlRWxlbWVudDpOLGNsb25lRWxlbWVudDpmdW5jdGlvbihhLGIsZSl7bnVsbD09PWF8fHZvaWQgMD09PWE/RChcIjI2N1wiLGEpOnZvaWQgMDt2YXIgYz12b2lkIDAsZD1rKHt9LGEucHJvcHMpLGc9YS5rZXksaD1hLnJlZixmPWEuX293bmVyO1xuaWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihoPWIucmVmLGY9Sy5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSk7dmFyIGw9dm9pZCAwO2EudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyYmKGw9YS50eXBlLmRlZmF1bHRQcm9wcyk7Zm9yKGMgaW4gYilMLmNhbGwoYixjKSYmIU0uaGFzT3duUHJvcGVydHkoYykmJihkW2NdPXZvaWQgMD09PWJbY10mJnZvaWQgMCE9PWw/bFtjXTpiW2NdKX1jPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09YylkLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGMpe2w9QXJyYXkoYyk7Zm9yKHZhciBtPTA7bTxjO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49bH1yZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6ZyxyZWY6aCxwcm9wczpkLF9vd25lcjpmfX0sY3JlYXRlRmFjdG9yeTpmdW5jdGlvbihhKXt2YXIgYj1OLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn0saXNWYWxpZEVsZW1lbnQ6Tyx2ZXJzaW9uOlwiMTYuNi4zXCIsXG5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7UmVhY3RDdXJyZW50T3duZXI6Syxhc3NpZ246a319O1gudW5zdGFibGVfQ29uY3VycmVudE1vZGU9eDtYLnVuc3RhYmxlX1Byb2ZpbGVyPXU7dmFyIFk9e2RlZmF1bHQ6WH0sWj1ZJiZYfHxZO21vZHVsZS5leHBvcnRzPVouZGVmYXVsdHx8WjtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuNi4xXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG49cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksYmE9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiBjYShhLGIsYyxkLGUsZixnLGgpe2lmKCFhKXthPXZvaWQgMDtpZih2b2lkIDA9PT1iKWE9RXJyb3IoXCJNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtlbHNle3ZhciBrPVtjLGQsZSxmLGcsaF0sbD0wO2E9RXJyb3IoYi5yZXBsYWNlKC8lcy9nLGZ1bmN0aW9uKCl7cmV0dXJuIGtbbCsrXX0pKTthLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCJ9YS5mcmFtZXNUb1BvcD0xO3Rocm93IGE7fX1cbmZ1bmN0aW9uIHQoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxjPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxkPTA7ZDxiO2QrKyljKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tkKzFdKTtjYSghMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGMpfWFhP3ZvaWQgMDp0KFwiMjI3XCIpO2Z1bmN0aW9uIGRhKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChtKXt0aGlzLm9uRXJyb3IobSl9fVxudmFyIGVhPSExLGZhPW51bGwsaGE9ITEsaWE9bnVsbCxqYT17b25FcnJvcjpmdW5jdGlvbihhKXtlYT0hMDtmYT1hfX07ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGspe2VhPSExO2ZhPW51bGw7ZGEuYXBwbHkoamEsYXJndW1lbnRzKX1mdW5jdGlvbiBsYShhLGIsYyxkLGUsZixnLGgsayl7a2EuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGVhKXtpZihlYSl7dmFyIGw9ZmE7ZWE9ITE7ZmE9bnVsbH1lbHNlIHQoXCIxOThcIiksbD12b2lkIDA7aGF8fChoYT0hMCxpYT1sKX19dmFyIG1hPW51bGwsbmE9e307XG5mdW5jdGlvbiBvYSgpe2lmKG1hKWZvcih2YXIgYSBpbiBuYSl7dmFyIGI9bmFbYV0sYz1tYS5pbmRleE9mKGEpOy0xPGM/dm9pZCAwOnQoXCI5NlwiLGEpO2lmKCFwYVtjXSl7Yi5leHRyYWN0RXZlbnRzP3ZvaWQgMDp0KFwiOTdcIixhKTtwYVtjXT1iO2M9Yi5ldmVudFR5cGVzO2Zvcih2YXIgZCBpbiBjKXt2YXIgZT12b2lkIDA7dmFyIGY9Y1tkXSxnPWIsaD1kO3FhLmhhc093blByb3BlcnR5KGgpP3QoXCI5OVwiLGgpOnZvaWQgMDtxYVtoXT1mO3ZhciBrPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYoayl7Zm9yKGUgaW4gaylrLmhhc093blByb3BlcnR5KGUpJiZyYShrW2VdLGcsaCk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8ocmEoZi5yZWdpc3RyYXRpb25OYW1lLGcsaCksZT0hMCk6ZT0hMTtlP3ZvaWQgMDp0KFwiOThcIixkLGEpfX19fVxuZnVuY3Rpb24gcmEoYSxiLGMpe3NhW2FdP3QoXCIxMDBcIixhKTp2b2lkIDA7c2FbYV09Yjt0YVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciBwYT1bXSxxYT17fSxzYT17fSx0YT17fSx1YT1udWxsLHZhPW51bGwsd2E9bnVsbDtmdW5jdGlvbiB4YShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9d2EoYyk7bGEoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1mdW5jdGlvbiB5YShhLGIpe251bGw9PWI/dChcIjMwXCIpOnZvaWQgMDtpZihudWxsPT1hKXJldHVybiBiO2lmKEFycmF5LmlzQXJyYXkoYSkpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEucHVzaC5hcHBseShhLGIpLGE7YS5wdXNoKGIpO3JldHVybiBhfXJldHVybiBBcnJheS5pc0FycmF5KGIpP1thXS5jb25jYXQoYik6W2EsYl19XG5mdW5jdGlvbiB6YShhLGIsYyl7QXJyYXkuaXNBcnJheShhKT9hLmZvckVhY2goYixjKTphJiZiLmNhbGwoYyxhKX12YXIgQWE9bnVsbDtmdW5jdGlvbiBCYShhKXtpZihhKXt2YXIgYj1hLl9kaXNwYXRjaExpc3RlbmVycyxjPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYikpZm9yKHZhciBkPTA7ZDxiLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtkKyspeGEoYSxiW2RdLGNbZF0pO2Vsc2UgYiYmeGEoYSxiLGMpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDthLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSl9fVxudmFyIENhPXtpbmplY3RFdmVudFBsdWdpbk9yZGVyOmZ1bmN0aW9uKGEpe21hP3QoXCIxMDFcIik6dm9pZCAwO21hPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEpO29hKCl9LGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTpmdW5jdGlvbihhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTtuYS5oYXNPd25Qcm9wZXJ0eShjKSYmbmFbY109PT1kfHwobmFbY10/dChcIjEwMlwiLGMpOnZvaWQgMCxuYVtjXT1kLGI9ITApfWImJm9hKCl9fTtcbmZ1bmN0aW9uIERhKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoIWMpcmV0dXJuIG51bGw7dmFyIGQ9dWEoYyk7aWYoIWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7YyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGM/dChcIjIzMVwiLGIsdHlwZW9mIGMpOnZvaWQgMDtcbnJldHVybiBjfWZ1bmN0aW9uIEVhKGEpe251bGwhPT1hJiYoQWE9eWEoQWEsYSkpO2E9QWE7QWE9bnVsbDtpZihhJiYoemEoYSxCYSksQWE/dChcIjk1XCIpOnZvaWQgMCxoYSkpdGhyb3cgYT1pYSxoYT0hMSxpYT1udWxsLGE7fXZhciBGYT1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxHYT1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK0ZhLEhhPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrRmE7ZnVuY3Rpb24gSWEoYSl7aWYoYVtHYV0pcmV0dXJuIGFbR2FdO2Zvcig7IWFbR2FdOylpZihhLnBhcmVudE5vZGUpYT1hLnBhcmVudE5vZGU7ZWxzZSByZXR1cm4gbnVsbDthPWFbR2FdO3JldHVybiA1PT09YS50YWd8fDY9PT1hLnRhZz9hOm51bGx9ZnVuY3Rpb24gSmEoYSl7YT1hW0dhXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWc/bnVsbDphfVxuZnVuY3Rpb24gS2EoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3QoXCIzM1wiKX1mdW5jdGlvbiBMYShhKXtyZXR1cm4gYVtIYV18fG51bGx9ZnVuY3Rpb24gTWEoYSl7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1mdW5jdGlvbiBOYShhLGIsYyl7aWYoYj1EYShhLGMuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXNbYl0pKWMuX2Rpc3BhdGNoTGlzdGVuZXJzPXlhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPXlhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpfVxuZnVuY3Rpb24gT2EoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7Zm9yKHZhciBiPWEuX3RhcmdldEluc3QsYz1bXTtiOyljLnB1c2goYiksYj1NYShiKTtmb3IoYj1jLmxlbmd0aDswPGItLTspTmEoY1tiXSxcImNhcHR1cmVkXCIsYSk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKylOYShjW2JdLFwiYnViYmxlZFwiLGEpfX1mdW5jdGlvbiBQYShhLGIsYyl7YSYmYyYmYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiYoYj1EYShhLGMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSkpJiYoYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9eWEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9eWEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSkpfWZ1bmN0aW9uIFFhKGEpe2EmJmEuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmUGEoYS5fdGFyZ2V0SW5zdCxudWxsLGEpfVxuZnVuY3Rpb24gUmEoYSl7emEoYSxPYSl9dmFyIFNhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fCF3aW5kb3cuZG9jdW1lbnR8fCF3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7ZnVuY3Rpb24gVGEoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgVWE9e2FuaW1hdGlvbmVuZDpUYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpUYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OlRhKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOlRhKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sVmE9e30sV2E9e307XG5TYSYmKFdhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIFVhLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIFVhLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIFVhLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIFVhLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gWGEoYSl7aWYoVmFbYV0pcmV0dXJuIFZhW2FdO2lmKCFVYVthXSlyZXR1cm4gYTt2YXIgYj1VYVthXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBXYSlyZXR1cm4gVmFbYV09YltjXTtyZXR1cm4gYX1cbnZhciBZYT1YYShcImFuaW1hdGlvbmVuZFwiKSxaYT1YYShcImFuaW1hdGlvbml0ZXJhdGlvblwiKSwkYT1YYShcImFuaW1hdGlvbnN0YXJ0XCIpLGFiPVhhKFwidHJhbnNpdGlvbmVuZFwiKSxiYj1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksY2I9bnVsbCxlYj1udWxsLGZiPW51bGw7XG5mdW5jdGlvbiBnYigpe2lmKGZiKXJldHVybiBmYjt2YXIgYSxiPWViLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGNiP2NiLnZhbHVlOmNiLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIGZiPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gaGIoKXtyZXR1cm4hMH1mdW5jdGlvbiBpYigpe3JldHVybiExfVxuZnVuY3Rpb24gQShhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/aGI6aWI7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1pYjtyZXR1cm4gdGhpc31cbm4oQS5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1oYil9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1oYil9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt0aGlzLmlzUGVyc2lzdGVudD1oYn0saXNQZXJzaXN0ZW50OmliLGRlc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZSxcbmI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7dGhpcy5uYXRpdmVFdmVudD10aGlzLl90YXJnZXRJbnN0PXRoaXMuZGlzcGF0Y2hDb25maWc9bnVsbDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWliO3RoaXMuX2Rpc3BhdGNoSW5zdGFuY2VzPXRoaXMuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGx9fSk7QS5JbnRlcmZhY2U9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG5BLmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtuKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1uKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO2piKGMpO3JldHVybiBjfTtqYihBKTtmdW5jdGlvbiBrYihhLGIsYyxkKXtpZih0aGlzLmV2ZW50UG9vbC5sZW5ndGgpe3ZhciBlPXRoaXMuZXZlbnRQb29sLnBvcCgpO3RoaXMuY2FsbChlLGEsYixjLGQpO3JldHVybiBlfXJldHVybiBuZXcgdGhpcyhhLGIsYyxkKX1mdW5jdGlvbiBsYihhKXthIGluc3RhbmNlb2YgdGhpcz92b2lkIDA6dChcIjI3OVwiKTthLmRlc3RydWN0b3IoKTsxMD50aGlzLmV2ZW50UG9vbC5sZW5ndGgmJnRoaXMuZXZlbnRQb29sLnB1c2goYSl9XG5mdW5jdGlvbiBqYihhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1rYjthLnJlbGVhc2U9bGJ9dmFyIG1iPUEuZXh0ZW5kKHtkYXRhOm51bGx9KSxuYj1BLmV4dGVuZCh7ZGF0YTpudWxsfSksb2I9WzksMTMsMjcsMzJdLHBiPVNhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxxYj1udWxsO1NhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihxYj1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIHJiPVNhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhcWIsc2I9U2EmJighcGJ8fHFiJiY4PHFiJiYxMT49cWIpLHRiPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLHViPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnVwZGF0ZSBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX19LHZiPSExO1xuZnVuY3Rpb24gd2IoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT1vYi5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiYmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIHhiKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIHliPSExO2Z1bmN0aW9uIHpiKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiB4YihiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7dmI9ITA7cmV0dXJuIHRiO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PXRiJiZ2Yj9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBBYihhLGIpe2lmKHliKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFwYiYmd2IoYSxiKT8oYT1nYigpLGZiPWViPWNiPW51bGwseWI9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIHNiJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBCYj17ZXZlbnRUeXBlczp1YixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXZvaWQgMDt2YXIgZj12b2lkIDA7aWYocGIpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6ZT11Yi5jb21wb3NpdGlvblN0YXJ0O2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6ZT11Yi5jb21wb3NpdGlvbkVuZDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOmU9dWIuY29tcG9zaXRpb25VcGRhdGU7YnJlYWsgYn1lPXZvaWQgMH1lbHNlIHliP3diKGEsYykmJihlPXViLmNvbXBvc2l0aW9uRW5kKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKGU9dWIuY29tcG9zaXRpb25TdGFydCk7ZT8oc2ImJlwia29cIiE9PWMubG9jYWxlJiYoeWJ8fGUhPT11Yi5jb21wb3NpdGlvblN0YXJ0P2U9PT11Yi5jb21wb3NpdGlvbkVuZCYmeWImJihmPWdiKCkpOihjYj1kLGViPVwidmFsdWVcImluIGNiP2NiLnZhbHVlOmNiLnRleHRDb250ZW50LHliPVxuITApKSxlPW1iLmdldFBvb2xlZChlLGIsYyxkKSxmP2UuZGF0YT1mOihmPXhiKGMpLG51bGwhPT1mJiYoZS5kYXRhPWYpKSxSYShlKSxmPWUpOmY9bnVsbDsoYT1yYj96YihhLGMpOkFiKGEsYykpPyhiPW5iLmdldFBvb2xlZCh1Yi5iZWZvcmVJbnB1dCxiLGMsZCksYi5kYXRhPWEsUmEoYikpOmI9bnVsbDtyZXR1cm4gbnVsbD09PWY/YjpudWxsPT09Yj9mOltmLGJdfX0sQ2I9bnVsbCxEYj1udWxsLEViPW51bGw7ZnVuY3Rpb24gSGIoYSl7aWYoYT12YShhKSl7XCJmdW5jdGlvblwiIT09dHlwZW9mIENiP3QoXCIyODBcIik6dm9pZCAwO3ZhciBiPXVhKGEuc3RhdGVOb2RlKTtDYihhLnN0YXRlTm9kZSxhLnR5cGUsYil9fWZ1bmN0aW9uIEliKGEpe0RiP0ViP0ViLnB1c2goYSk6RWI9W2FdOkRiPWF9ZnVuY3Rpb24gSmIoKXtpZihEYil7dmFyIGE9RGIsYj1FYjtFYj1EYj1udWxsO0hiKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylIYihiW2FdKX19XG5mdW5jdGlvbiBLYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIExiKGEsYixjKXtyZXR1cm4gYShiLGMpfWZ1bmN0aW9uIE1iKCl7fXZhciBOYj0hMTtmdW5jdGlvbiBPYihhLGIpe2lmKE5iKXJldHVybiBhKGIpO05iPSEwO3RyeXtyZXR1cm4gS2IoYSxiKX1maW5hbGx5e2lmKE5iPSExLG51bGwhPT1EYnx8bnVsbCE9PUViKU1iKCksSmIoKX19dmFyIFBiPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIFFiKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhUGJbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfVxuZnVuY3Rpb24gUmIoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfWZ1bmN0aW9uIFNiKGEpe2lmKCFTYSlyZXR1cm4hMTthPVwib25cIithO3ZhciBiPWEgaW4gZG9jdW1lbnQ7Ynx8KGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxiLnNldEF0dHJpYnV0ZShhLFwicmV0dXJuO1wiKSxiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiW2FdKTtyZXR1cm4gYn1mdW5jdGlvbiBUYihhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gVWIoYSl7dmFyIGI9VGIoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFZiKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1VYihhKSl9ZnVuY3Rpb24gV2IoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVRiKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9XG52YXIgWGI9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQsWWI9L14oLiopW1xcXFxcXC9dLyxEPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsWmI9RD9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMywkYj1EP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsYWM9RD9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsYmM9RD9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsY2M9RD9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsZGM9RD9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksZWM9RD9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxmYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsZ2M9RD9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIsaGM9RD9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6XG42MDExMyxpYz1EP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LGpjPUQ/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsa2M9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIGxjKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1rYyYmYVtrY118fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1cbmZ1bmN0aW9uIG1jKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgZmM6cmV0dXJuXCJDb25jdXJyZW50TW9kZVwiO2Nhc2UgYWM6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgJGI6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIGNjOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIGJjOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgaGM6cmV0dXJuXCJTdXNwZW5zZVwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBlYzpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlIGRjOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgZ2M6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7cmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcblwiKVwiOlwiRm9yd2FyZFJlZlwiKTtjYXNlIGljOnJldHVybiBtYyhhLnR5cGUpO2Nhc2UgamM6aWYoYT0xPT09YS5fc3RhdHVzP2EuX3Jlc3VsdDpudWxsKXJldHVybiBtYyhhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBuYyhhKXt2YXIgYj1cIlwiO2Rve2E6c3dpdGNoKGEudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDA6Y2FzZSAxOmNhc2UgNTpjYXNlIDg6Y2FzZSAxMzp2YXIgYz1hLl9kZWJ1Z093bmVyLGQ9YS5fZGVidWdTb3VyY2UsZT1tYyhhLnR5cGUpO3ZhciBmPW51bGw7YyYmKGY9bWMoYy50eXBlKSk7Yz1lO2U9XCJcIjtkP2U9XCIgKGF0IFwiK2QuZmlsZU5hbWUucmVwbGFjZShZYixcIlwiKStcIjpcIitkLmxpbmVOdW1iZXIrXCIpXCI6ZiYmKGU9XCIgKGNyZWF0ZWQgYnkgXCIrZitcIilcIik7Zj1cIlxcbiAgICBpbiBcIisoY3x8XCJVbmtub3duXCIpK2U7YnJlYWsgYTtkZWZhdWx0OmY9XCJcIn1iKz1mO2E9YS5yZXR1cm59d2hpbGUoYSk7cmV0dXJuIGJ9XG52YXIgb2M9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLHBjPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkscWM9e30scmM9e307XG5mdW5jdGlvbiBzYyhhKXtpZihwYy5jYWxsKHJjLGEpKXJldHVybiEwO2lmKHBjLmNhbGwocWMsYSkpcmV0dXJuITE7aWYob2MudGVzdChhKSlyZXR1cm4gcmNbYV09ITA7cWNbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gdGMoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiB1YyhhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHx0YyhhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEUoYSxiLGMsZCxlKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1ifXZhciBGPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsMCwhMSxhLG51bGwpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0ZbYl09bmV3IEUoYiwxLCExLGFbMV0sbnVsbCl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsMiwhMSxhLG51bGwpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtbXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RlthXT1uZXcgRShhLDMsITAsYSxudWxsKX0pO1xuW1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtGW2FdPW5ldyBFKGEsNCwhMSxhLG51bGwpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0ZbYV09bmV3IEUoYSw2LCExLGEsbnVsbCl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0ZbYV09bmV3IEUoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO3ZhciB2Yz0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHhjKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHZjLFxueGMpO0ZbYl09bmV3IEUoYiwxLCExLGEsbnVsbCl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpocmVmIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHZjLHhjKTtGW2JdPW5ldyBFKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHZjLHhjKTtGW2JdPW5ldyBFKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIpfSk7Ri50YWJJbmRleD1uZXcgRShcInRhYkluZGV4XCIsMSwhMSxcInRhYmluZGV4XCIsbnVsbCk7XG5mdW5jdGlvbiB5YyhhLGIsYyxkKXt2YXIgZT1GLmhhc093blByb3BlcnR5KGIpP0ZbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fCh1YyhiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/c2MoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbmZ1bmN0aW9uIHpjKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiBBYyhhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbih7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9XG5mdW5jdGlvbiBCYyhhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz16YyhudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIENjKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmeWMoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIERjKGEsYil7Q2MoYSxiKTt2YXIgYz16YyhiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT9FYyhhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZFYyhhLGIudHlwZSx6YyhiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIEZjKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIEVjKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX12YXIgR2M9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY2hhbmdlIGNsaWNrIGZvY3VzIGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07ZnVuY3Rpb24gSGMoYSxiLGMpe2E9QS5nZXRQb29sZWQoR2MuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtJYihjKTtSYShhKTtyZXR1cm4gYX12YXIgSmM9bnVsbCxLYz1udWxsO2Z1bmN0aW9uIExjKGEpe0VhKGEpfVxuZnVuY3Rpb24gTWMoYSl7dmFyIGI9S2EoYSk7aWYoV2IoYikpcmV0dXJuIGF9ZnVuY3Rpb24gTmMoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgT2M9ITE7U2EmJihPYz1TYihcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtmdW5jdGlvbiBQYygpe0pjJiYoSmMuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsUWMpLEtjPUpjPW51bGwpfWZ1bmN0aW9uIFFjKGEpe1widmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZNYyhLYykmJihhPUhjKEtjLGEsUmIoYSkpLE9iKExjLGEpKX1mdW5jdGlvbiBSYyhhLGIsYyl7XCJmb2N1c1wiPT09YT8oUGMoKSxKYz1iLEtjPWMsSmMuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsUWMpKTpcImJsdXJcIj09PWEmJlBjKCl9ZnVuY3Rpb24gU2MoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gTWMoS2MpfVxuZnVuY3Rpb24gVGMoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiBNYyhiKX1mdW5jdGlvbiBVYyhhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiBNYyhiKX1cbnZhciBWYz17ZXZlbnRUeXBlczpHYyxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOk9jLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj9LYShiKTp3aW5kb3csZj12b2lkIDAsZz12b2lkIDAsaD1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XCJzZWxlY3RcIj09PWh8fFwiaW5wdXRcIj09PWgmJlwiZmlsZVwiPT09ZS50eXBlP2Y9TmM6UWIoZSk/T2M/Zj1VYzooZj1TYyxnPVJjKTooaD1lLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09aC50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09ZS50eXBlfHxcInJhZGlvXCI9PT1lLnR5cGUpJiYoZj1UYyk7aWYoZiYmKGY9ZihhLGIpKSlyZXR1cm4gSGMoZixjLGQpO2cmJmcoYSxlLGIpO1wiYmx1clwiPT09YSYmKGE9ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiZFYyhlLFwibnVtYmVyXCIsZS52YWx1ZSl9fSxXYz1BLmV4dGVuZCh7dmlldzpudWxsLGRldGFpbDpudWxsfSksWGM9e0FsdDpcImFsdEtleVwiLFxuQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gWWMoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1YY1thXSk/ISFiW2FdOiExfWZ1bmN0aW9uIFpjKCl7cmV0dXJuIFljfVxudmFyICRjPTAsYWQ9MCxiZD0hMSxjZD0hMSxkZD1XYy5leHRlbmQoe3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6WmMsYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFg7dmFyIGI9JGM7JGM9YS5zY3JlZW5YO3JldHVybiBiZD9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWC1iOjA6KGJkPSEwLDApfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFlcImluIGEpcmV0dXJuIGEubW92ZW1lbnRZO1xudmFyIGI9YWQ7YWQ9YS5zY3JlZW5ZO3JldHVybiBjZD9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWS1iOjA6KGNkPSEwLDApfX0pLGVkPWRkLmV4dGVuZCh7cG9pbnRlcklkOm51bGwsd2lkdGg6bnVsbCxoZWlnaHQ6bnVsbCxwcmVzc3VyZTpudWxsLHRhbmdlbnRpYWxQcmVzc3VyZTpudWxsLHRpbHRYOm51bGwsdGlsdFk6bnVsbCx0d2lzdDpudWxsLHBvaW50ZXJUeXBlOm51bGwsaXNQcmltYXJ5Om51bGx9KSxmZD17bW91c2VFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VFbnRlclwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxtb3VzZUxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUxlYXZlXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LHBvaW50ZXJFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckVudGVyXCIsZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfSxwb2ludGVyTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJMZWF2ZVwiLFxuZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfX0sZ2Q9e2V2ZW50VHlwZXM6ZmQsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSxmPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihlJiYoYy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KXx8IWYmJiFlKXJldHVybiBudWxsO2U9ZC53aW5kb3c9PT1kP2Q6KGU9ZC5vd25lckRvY3VtZW50KT9lLmRlZmF1bHRWaWV3fHxlLnBhcmVudFdpbmRvdzp3aW5kb3c7Zj8oZj1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/SWEoYik6bnVsbCk6Zj1udWxsO2lmKGY9PT1iKXJldHVybiBudWxsO3ZhciBnPXZvaWQgMCxoPXZvaWQgMCxrPXZvaWQgMCxsPXZvaWQgMDtpZihcIm1vdXNlb3V0XCI9PT1hfHxcIm1vdXNlb3ZlclwiPT09YSlnPWRkLGg9ZmQubW91c2VMZWF2ZSxrPWZkLm1vdXNlRW50ZXIsbD1cIm1vdXNlXCI7XG5lbHNlIGlmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSlnPWVkLGg9ZmQucG9pbnRlckxlYXZlLGs9ZmQucG9pbnRlckVudGVyLGw9XCJwb2ludGVyXCI7dmFyIG09bnVsbD09Zj9lOkthKGYpO2U9bnVsbD09Yj9lOkthKGIpO2E9Zy5nZXRQb29sZWQoaCxmLGMsZCk7YS50eXBlPWwrXCJsZWF2ZVwiO2EudGFyZ2V0PW07YS5yZWxhdGVkVGFyZ2V0PWU7Yz1nLmdldFBvb2xlZChrLGIsYyxkKTtjLnR5cGU9bCtcImVudGVyXCI7Yy50YXJnZXQ9ZTtjLnJlbGF0ZWRUYXJnZXQ9bTtkPWI7aWYoZiYmZClhOntiPWY7ZT1kO2w9MDtmb3IoZz1iO2c7Zz1NYShnKSlsKys7Zz0wO2ZvcihrPWU7aztrPU1hKGspKWcrKztmb3IoOzA8bC1nOyliPU1hKGIpLGwtLTtmb3IoOzA8Zy1sOyllPU1hKGUpLGctLTtmb3IoO2wtLTspe2lmKGI9PT1lfHxiPT09ZS5hbHRlcm5hdGUpYnJlYWsgYTtiPU1hKGIpO2U9TWEoZSl9Yj1udWxsfWVsc2UgYj1udWxsO2U9Yjtmb3IoYj1bXTtmJiZmIT09ZTspe2w9XG5mLmFsdGVybmF0ZTtpZihudWxsIT09bCYmbD09PWUpYnJlYWs7Yi5wdXNoKGYpO2Y9TWEoZil9Zm9yKGY9W107ZCYmZCE9PWU7KXtsPWQuYWx0ZXJuYXRlO2lmKG51bGwhPT1sJiZsPT09ZSlicmVhaztmLnB1c2goZCk7ZD1NYShkKX1mb3IoZD0wO2Q8Yi5sZW5ndGg7ZCsrKVBhKGJbZF0sXCJidWJibGVkXCIsYSk7Zm9yKGQ9Zi5sZW5ndGg7MDxkLS07KVBhKGZbZF0sXCJjYXB0dXJlZFwiLGMpO3JldHVyblthLGNdfX0saGQ9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtmdW5jdGlvbiBpZChhLGIpe3JldHVybiBhPT09Yj8wIT09YXx8MCE9PWJ8fDEvYT09PTEvYjphIT09YSYmYiE9PWJ9XG5mdW5jdGlvbiBqZChhLGIpe2lmKGlkKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighaGQuY2FsbChiLGNbZF0pfHwhaWQoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBrZChhKXt2YXIgYj1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXtpZigwIT09KGIuZWZmZWN0VGFnJjIpKXJldHVybiAxO2Zvcig7Yi5yZXR1cm47KWlmKGI9Yi5yZXR1cm4sMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMX1yZXR1cm4gMz09PWIudGFnPzI6M31mdW5jdGlvbiBsZChhKXsyIT09a2QoYSk/dChcIjE4OFwiKTp2b2lkIDB9XG5mdW5jdGlvbiBtZChhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYilyZXR1cm4gYj1rZChhKSwzPT09Yj90KFwiMTg4XCIpOnZvaWQgMCwxPT09Yj9udWxsOmE7Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuLGY9ZT9lLmFsdGVybmF0ZTpudWxsO2lmKCFlfHwhZilicmVhaztpZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKHZhciBnPWUuY2hpbGQ7Zzspe2lmKGc9PT1jKXJldHVybiBsZChlKSxhO2lmKGc9PT1kKXJldHVybiBsZChlKSxiO2c9Zy5zaWJsaW5nfXQoXCIxODhcIil9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zz0hMTtmb3IodmFyIGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9Zz9cbnZvaWQgMDp0KFwiMTg5XCIpfX1jLmFsdGVybmF0ZSE9PWQ/dChcIjE5MFwiKTp2b2lkIDB9MyE9PWMudGFnP3QoXCIxODhcIik6dm9pZCAwO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gbmQoYSl7YT1tZChhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbnZhciBvZD1BLmV4dGVuZCh7YW5pbWF0aW9uTmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSkscGQ9QS5leHRlbmQoe2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxxZD1XYy5leHRlbmQoe3JlbGF0ZWRUYXJnZXQ6bnVsbH0pO2Z1bmN0aW9uIHJkKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfVxudmFyIHNkPXtFc2M6XCJFc2NhcGVcIixTcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSx0ZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIixcbjExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLDExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0sdWQ9V2MuZXh0ZW5kKHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPXNkW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPXJkKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT90ZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGxvY2F0aW9uOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLHJlcGVhdDpudWxsLGxvY2FsZTpudWxsLGdldE1vZGlmaWVyU3RhdGU6WmMsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/cmQoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/cmQoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSx2ZD1kZC5leHRlbmQoe2RhdGFUcmFuc2ZlcjpudWxsfSksd2Q9V2MuZXh0ZW5kKHt0b3VjaGVzOm51bGwsdGFyZ2V0VG91Y2hlczpudWxsLGNoYW5nZWRUb3VjaGVzOm51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6WmN9KSx4ZD1BLmV4dGVuZCh7cHJvcGVydHlOYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSx5ZD1kZC5leHRlbmQoe2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpblxuYT8tYS53aGVlbERlbHRhWDowfSxkZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6bnVsbCxkZWx0YU1vZGU6bnVsbH0pLHpkPVtbXCJhYm9ydFwiLFwiYWJvcnRcIl0sW1lhLFwiYW5pbWF0aW9uRW5kXCJdLFtaYSxcImFuaW1hdGlvbkl0ZXJhdGlvblwiXSxbJGEsXCJhbmltYXRpb25TdGFydFwiXSxbXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCJdLFtcImNhbnBsYXl0aHJvdWdoXCIsXCJjYW5QbGF5VGhyb3VnaFwiXSxbXCJkcmFnXCIsXCJkcmFnXCJdLFtcImRyYWdlbnRlclwiLFwiZHJhZ0VudGVyXCJdLFtcImRyYWdleGl0XCIsXCJkcmFnRXhpdFwiXSxbXCJkcmFnbGVhdmVcIixcImRyYWdMZWF2ZVwiXSxbXCJkcmFnb3ZlclwiLFwiZHJhZ092ZXJcIl0sW1wiZHVyYXRpb25jaGFuZ2VcIixcImR1cmF0aW9uQ2hhbmdlXCJdLFtcImVtcHRpZWRcIixcImVtcHRpZWRcIl0sW1wiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIl0sXG5bXCJlbmRlZFwiLFwiZW5kZWRcIl0sW1wiZXJyb3JcIixcImVycm9yXCJdLFtcImdvdHBvaW50ZXJjYXB0dXJlXCIsXCJnb3RQb2ludGVyQ2FwdHVyZVwiXSxbXCJsb2FkXCIsXCJsb2FkXCJdLFtcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIl0sW1wibG9hZGVkbWV0YWRhdGFcIixcImxvYWRlZE1ldGFkYXRhXCJdLFtcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCJdLFtcImxvc3Rwb2ludGVyY2FwdHVyZVwiLFwibG9zdFBvaW50ZXJDYXB0dXJlXCJdLFtcIm1vdXNlbW92ZVwiLFwibW91c2VNb3ZlXCJdLFtcIm1vdXNlb3V0XCIsXCJtb3VzZU91dFwiXSxbXCJtb3VzZW92ZXJcIixcIm1vdXNlT3ZlclwiXSxbXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCJdLFtcInBvaW50ZXJtb3ZlXCIsXCJwb2ludGVyTW92ZVwiXSxbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyT3V0XCJdLFtcInBvaW50ZXJvdmVyXCIsXCJwb2ludGVyT3ZlclwiXSxbXCJwcm9ncmVzc1wiLFwicHJvZ3Jlc3NcIl0sW1wic2Nyb2xsXCIsXCJzY3JvbGxcIl0sW1wic2Vla2luZ1wiLFwic2Vla2luZ1wiXSxbXCJzdGFsbGVkXCIsXCJzdGFsbGVkXCJdLFxuW1wic3VzcGVuZFwiLFwic3VzcGVuZFwiXSxbXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCJdLFtcInRvZ2dsZVwiLFwidG9nZ2xlXCJdLFtcInRvdWNobW92ZVwiLFwidG91Y2hNb3ZlXCJdLFthYixcInRyYW5zaXRpb25FbmRcIl0sW1wid2FpdGluZ1wiLFwid2FpdGluZ1wiXSxbXCJ3aGVlbFwiLFwid2hlZWxcIl1dLEFkPXt9LEJkPXt9O2Z1bmN0aW9uIENkKGEsYil7dmFyIGM9YVswXTthPWFbMV07dmFyIGQ9XCJvblwiKyhhWzBdLnRvVXBwZXJDYXNlKCkrYS5zbGljZSgxKSk7Yj17cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6ZCxjYXB0dXJlZDpkK1wiQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W2NdLGlzSW50ZXJhY3RpdmU6Yn07QWRbYV09YjtCZFtjXT1ifVxuW1tcImJsdXJcIixcImJsdXJcIl0sW1wiY2FuY2VsXCIsXCJjYW5jZWxcIl0sW1wiY2xpY2tcIixcImNsaWNrXCJdLFtcImNsb3NlXCIsXCJjbG9zZVwiXSxbXCJjb250ZXh0bWVudVwiLFwiY29udGV4dE1lbnVcIl0sW1wiY29weVwiLFwiY29weVwiXSxbXCJjdXRcIixcImN1dFwiXSxbXCJhdXhjbGlja1wiLFwiYXV4Q2xpY2tcIl0sW1wiZGJsY2xpY2tcIixcImRvdWJsZUNsaWNrXCJdLFtcImRyYWdlbmRcIixcImRyYWdFbmRcIl0sW1wiZHJhZ3N0YXJ0XCIsXCJkcmFnU3RhcnRcIl0sW1wiZHJvcFwiLFwiZHJvcFwiXSxbXCJmb2N1c1wiLFwiZm9jdXNcIl0sW1wiaW5wdXRcIixcImlucHV0XCJdLFtcImludmFsaWRcIixcImludmFsaWRcIl0sW1wia2V5ZG93blwiLFwia2V5RG93blwiXSxbXCJrZXlwcmVzc1wiLFwia2V5UHJlc3NcIl0sW1wia2V5dXBcIixcImtleVVwXCJdLFtcIm1vdXNlZG93blwiLFwibW91c2VEb3duXCJdLFtcIm1vdXNldXBcIixcIm1vdXNlVXBcIl0sW1wicGFzdGVcIixcInBhc3RlXCJdLFtcInBhdXNlXCIsXCJwYXVzZVwiXSxbXCJwbGF5XCIsXCJwbGF5XCJdLFtcInBvaW50ZXJjYW5jZWxcIixcInBvaW50ZXJDYW5jZWxcIl0sXG5bXCJwb2ludGVyZG93blwiLFwicG9pbnRlckRvd25cIl0sW1wicG9pbnRlcnVwXCIsXCJwb2ludGVyVXBcIl0sW1wicmF0ZWNoYW5nZVwiLFwicmF0ZUNoYW5nZVwiXSxbXCJyZXNldFwiLFwicmVzZXRcIl0sW1wic2Vla2VkXCIsXCJzZWVrZWRcIl0sW1wic3VibWl0XCIsXCJzdWJtaXRcIl0sW1widG91Y2hjYW5jZWxcIixcInRvdWNoQ2FuY2VsXCJdLFtcInRvdWNoZW5kXCIsXCJ0b3VjaEVuZFwiXSxbXCJ0b3VjaHN0YXJ0XCIsXCJ0b3VjaFN0YXJ0XCJdLFtcInZvbHVtZWNoYW5nZVwiLFwidm9sdW1lQ2hhbmdlXCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NkKGEsITApfSk7emQuZm9yRWFjaChmdW5jdGlvbihhKXtDZChhLCExKX0pO1xudmFyIERkPXtldmVudFR5cGVzOkFkLGlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZTpmdW5jdGlvbihhKXthPUJkW2FdO3JldHVybiB2b2lkIDAhPT1hJiYhMD09PWEuaXNJbnRlcmFjdGl2ZX0sZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1CZFthXTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PXJkKGMpKXJldHVybiBudWxsO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6YT11ZDticmVhaztjYXNlIFwiYmx1clwiOmNhc2UgXCJmb2N1c1wiOmE9cWQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6YT1kZDticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjphPVxudmQ7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6YT13ZDticmVhaztjYXNlIFlhOmNhc2UgWmE6Y2FzZSAkYTphPW9kO2JyZWFrO2Nhc2UgYWI6YT14ZDticmVhaztjYXNlIFwic2Nyb2xsXCI6YT1XYzticmVhaztjYXNlIFwid2hlZWxcIjphPXlkO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOmE9cGQ7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6YT1lZDticmVhaztkZWZhdWx0OmE9QX1iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO1JhKGIpO3JldHVybiBifX0sRWQ9RGQuaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlLFxuRmQ9W107ZnVuY3Rpb24gR2QoYSl7dmFyIGI9YS50YXJnZXRJbnN0LGM9Yjtkb3tpZighYyl7YS5hbmNlc3RvcnMucHVzaChjKTticmVha312YXIgZDtmb3IoZD1jO2QucmV0dXJuOylkPWQucmV0dXJuO2Q9MyE9PWQudGFnP251bGw6ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZighZClicmVhazthLmFuY2VzdG9ycy5wdXNoKGMpO2M9SWEoZCl9d2hpbGUoYyk7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspe2I9YS5hbmNlc3RvcnNbY107dmFyIGU9UmIoYS5uYXRpdmVFdmVudCk7ZD1hLnRvcExldmVsVHlwZTtmb3IodmFyIGY9YS5uYXRpdmVFdmVudCxnPW51bGwsaD0wO2g8cGEubGVuZ3RoO2grKyl7dmFyIGs9cGFbaF07ayYmKGs9ay5leHRyYWN0RXZlbnRzKGQsYixmLGUpKSYmKGc9eWEoZyxrKSl9RWEoZyl9fXZhciBIZD0hMDtcbmZ1bmN0aW9uIEcoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oRWQoYSk/SWQ6SmQpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCExKX1mdW5jdGlvbiBLZChhLGIpe2lmKCFiKXJldHVybiBudWxsO3ZhciBjPShFZChhKT9JZDpKZCkuYmluZChudWxsLGEpO2IuYWRkRXZlbnRMaXN0ZW5lcihhLGMsITApfWZ1bmN0aW9uIElkKGEsYil7TGIoSmQsYSxiKX1cbmZ1bmN0aW9uIEpkKGEsYil7aWYoSGQpe3ZhciBjPVJiKGIpO2M9SWEoYyk7bnVsbD09PWN8fFwibnVtYmVyXCIhPT10eXBlb2YgYy50YWd8fDI9PT1rZChjKXx8KGM9bnVsbCk7aWYoRmQubGVuZ3RoKXt2YXIgZD1GZC5wb3AoKTtkLnRvcExldmVsVHlwZT1hO2QubmF0aXZlRXZlbnQ9YjtkLnRhcmdldEluc3Q9YzthPWR9ZWxzZSBhPXt0b3BMZXZlbFR5cGU6YSxuYXRpdmVFdmVudDpiLHRhcmdldEluc3Q6YyxhbmNlc3RvcnM6W119O3RyeXtPYihHZCxhKX1maW5hbGx5e2EudG9wTGV2ZWxUeXBlPW51bGwsYS5uYXRpdmVFdmVudD1udWxsLGEudGFyZ2V0SW5zdD1udWxsLGEuYW5jZXN0b3JzLmxlbmd0aD0wLDEwPkZkLmxlbmd0aCYmRmQucHVzaChhKX19fXZhciBMZD17fSxNZD0wLE5kPVwiX3JlYWN0TGlzdGVuZXJzSURcIisoXCJcIitNYXRoLnJhbmRvbSgpKS5zbGljZSgyKTtcbmZ1bmN0aW9uIE9kKGEpe09iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhLE5kKXx8KGFbTmRdPU1kKyssTGRbYVtOZF1dPXt9KTtyZXR1cm4gTGRbYVtOZF1dfWZ1bmN0aW9uIFBkKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1mdW5jdGlvbiBRZChhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBSZChhLGIpe3ZhciBjPVFkKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPVFkKGMpfX1mdW5jdGlvbiBTZChhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP1NkKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1cbmZ1bmN0aW9uIFRkKCl7Zm9yKHZhciBhPXdpbmRvdyxiPVBkKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7YT1iLmNvbnRlbnREb2N1bWVudC5kZWZhdWx0Vmlld31jYXRjaChjKXticmVha31iPVBkKGEuZG9jdW1lbnQpfXJldHVybiBifWZ1bmN0aW9uIFVkKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XG52YXIgVmQ9U2EmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxXZD17c2VsZWN0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uU2VsZWN0XCIsY2FwdHVyZWQ6XCJvblNlbGVjdENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX0sWGQ9bnVsbCxZZD1udWxsLFpkPW51bGwsJGQ9ITE7XG5mdW5jdGlvbiBhZShhLGIpe3ZhciBjPWIud2luZG93PT09Yj9iLmRvY3VtZW50Ojk9PT1iLm5vZGVUeXBlP2I6Yi5vd25lckRvY3VtZW50O2lmKCRkfHxudWxsPT1YZHx8WGQhPT1QZChjKSlyZXR1cm4gbnVsbDtjPVhkO1wic2VsZWN0aW9uU3RhcnRcImluIGMmJlVkKGMpP2M9e3N0YXJ0OmMuc2VsZWN0aW9uU3RhcnQsZW5kOmMuc2VsZWN0aW9uRW5kfTooYz0oYy5vd25lckRvY3VtZW50JiZjLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksYz17YW5jaG9yTm9kZTpjLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmMuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpjLmZvY3VzTm9kZSxmb2N1c09mZnNldDpjLmZvY3VzT2Zmc2V0fSk7cmV0dXJuIFpkJiZqZChaZCxjKT9udWxsOihaZD1jLGE9QS5nZXRQb29sZWQoV2Quc2VsZWN0LFlkLGEsYiksYS50eXBlPVwic2VsZWN0XCIsYS50YXJnZXQ9WGQsUmEoYSksYSl9XG52YXIgYmU9e2V2ZW50VHlwZXM6V2QsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1kLndpbmRvdz09PWQ/ZC5kb2N1bWVudDo5PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudCxmO2lmKCEoZj0hZSkpe2E6e2U9T2QoZSk7Zj10YS5vblNlbGVjdDtmb3IodmFyIGc9MDtnPGYubGVuZ3RoO2crKyl7dmFyIGg9ZltnXTtpZighZS5oYXNPd25Qcm9wZXJ0eShoKXx8IWVbaF0pe2U9ITE7YnJlYWsgYX19ZT0hMH1mPSFlfWlmKGYpcmV0dXJuIG51bGw7ZT1iP0thKGIpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6aWYoUWIoZSl8fFwidHJ1ZVwiPT09ZS5jb250ZW50RWRpdGFibGUpWGQ9ZSxZZD1iLFpkPW51bGw7YnJlYWs7Y2FzZSBcImJsdXJcIjpaZD1ZZD1YZD1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjokZD0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6cmV0dXJuICRkPSExLGFlKGMsZCk7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFZkKWJyZWFrO1xuY2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpyZXR1cm4gYWUoYyxkKX1yZXR1cm4gbnVsbH19O0NhLmluamVjdEV2ZW50UGx1Z2luT3JkZXIoXCJSZXNwb25kZXJFdmVudFBsdWdpbiBTaW1wbGVFdmVudFBsdWdpbiBFbnRlckxlYXZlRXZlbnRQbHVnaW4gQ2hhbmdlRXZlbnRQbHVnaW4gU2VsZWN0RXZlbnRQbHVnaW4gQmVmb3JlSW5wdXRFdmVudFBsdWdpblwiLnNwbGl0KFwiIFwiKSk7dWE9TGE7dmE9SmE7d2E9S2E7Q2EuaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lKHtTaW1wbGVFdmVudFBsdWdpbjpEZCxFbnRlckxlYXZlRXZlbnRQbHVnaW46Z2QsQ2hhbmdlRXZlbnRQbHVnaW46VmMsU2VsZWN0RXZlbnRQbHVnaW46YmUsQmVmb3JlSW5wdXRFdmVudFBsdWdpbjpCYn0pO2Z1bmN0aW9uIGRlKGEpe3ZhciBiPVwiXCI7YWEuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGwhPWEmJihiKz1hKX0pO3JldHVybiBifVxuZnVuY3Rpb24gZWUoYSxiKXthPW4oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1kZShiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9ZnVuY3Rpb24gZmUoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK3pjKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBnZShhLGIpe251bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dChcIjkxXCIpOnZvaWQgMDtyZXR1cm4gbih7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBoZShhLGIpe3ZhciBjPWIudmFsdWU7bnVsbD09YyYmKGM9Yi5kZWZhdWx0VmFsdWUsYj1iLmNoaWxkcmVuLG51bGwhPWImJihudWxsIT1jP3QoXCI5MlwiKTp2b2lkIDAsQXJyYXkuaXNBcnJheShiKSYmKDE+PWIubGVuZ3RoP3ZvaWQgMDp0KFwiOTNcIiksYj1iWzBdKSxjPWIpLG51bGw9PWMmJihjPVwiXCIpKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTp6YyhjKX19XG5mdW5jdGlvbiBpZShhLGIpe3ZhciBjPXpjKGIudmFsdWUpLGQ9emMoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBqZShhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiYoYS52YWx1ZT1iKX12YXIga2U9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gbGUoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBtZShhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/bGUoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgbmU9dm9pZCAwLG9lPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PWtlLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle25lPW5lfHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO25lLmlubmVySFRNTD1cIjxzdmc+XCIrYitcIjwvc3ZnPlwiO2ZvcihiPW5lLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIHBlKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgcWU9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLFxuZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0scmU9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKHFlKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JlLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7cWVbYl09cWVbYV19KX0pO2Z1bmN0aW9uIHNlKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxxZS5oYXNPd25Qcm9wZXJ0eShhKSYmcWVbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gdGUoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9c2UoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgdWU9bih7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIHZlKGEsYil7YiYmKHVlW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD90KFwiMTM3XCIsYSxcIlwiKTp2b2lkIDApLG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJihudWxsIT1iLmNoaWxkcmVuP3QoXCI2MFwiKTp2b2lkIDAsXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTD92b2lkIDA6dChcIjYxXCIpKSxudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGU/dChcIjYyXCIsXCJcIik6dm9pZCAwKX1cbmZ1bmN0aW9uIHdlKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX1cbmZ1bmN0aW9uIHhlKGEsYil7YT05PT09YS5ub2RlVHlwZXx8MTE9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O3ZhciBjPU9kKGEpO2I9dGFbYl07Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspe3ZhciBlPWJbZF07aWYoIWMuaGFzT3duUHJvcGVydHkoZSl8fCFjW2VdKXtzd2l0Y2goZSl7Y2FzZSBcInNjcm9sbFwiOktkKFwic2Nyb2xsXCIsYSk7YnJlYWs7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjpLZChcImZvY3VzXCIsYSk7S2QoXCJibHVyXCIsYSk7Yy5ibHVyPSEwO2MuZm9jdXM9ITA7YnJlYWs7Y2FzZSBcImNhbmNlbFwiOmNhc2UgXCJjbG9zZVwiOlNiKGUpJiZLZChlLGEpO2JyZWFrO2Nhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJyZXNldFwiOmJyZWFrO2RlZmF1bHQ6LTE9PT1iYi5pbmRleE9mKGUpJiZHKGUsYSl9Y1tlXT0hMH19fWZ1bmN0aW9uIHllKCl7fXZhciB6ZT1udWxsLEFlPW51bGw7XG5mdW5jdGlvbiBCZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9ZnVuY3Rpb24gQ2UoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm9wdGlvblwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfXZhciBEZT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCxFZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDA7XG5mdW5jdGlvbiBGZShhKXtmb3IoYT1hLm5leHRTaWJsaW5nO2EmJjEhPT1hLm5vZGVUeXBlJiYzIT09YS5ub2RlVHlwZTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIEdlKGEpe2ZvcihhPWEuZmlyc3RDaGlsZDthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1uZXcgU2V0O3ZhciBIZT1bXSxJZT0tMTtmdW5jdGlvbiBIKGEpezA+SWV8fChhLmN1cnJlbnQ9SGVbSWVdLEhlW0llXT1udWxsLEllLS0pfWZ1bmN0aW9uIEkoYSxiKXtJZSsrO0hlW0llXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIEplPXt9LEo9e2N1cnJlbnQ6SmV9LEs9e2N1cnJlbnQ6ITF9LEtlPUplO1xuZnVuY3Rpb24gTGUoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBKZTt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBMKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9ZnVuY3Rpb24gTWUoYSl7SChLLGEpO0goSixhKX1mdW5jdGlvbiBOZShhKXtIKEssYSk7SChKLGEpfVxuZnVuY3Rpb24gT2UoYSxiLGMpe0ouY3VycmVudCE9PUplP3QoXCIxNjhcIik6dm9pZCAwO0koSixiLGEpO0koSyxjLGEpfWZ1bmN0aW9uIFBlKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZCllIGluIGE/dm9pZCAwOnQoXCIxMDhcIixtYyhiKXx8XCJVbmtub3duXCIsZSk7cmV0dXJuIG4oe30sYyxkKX1mdW5jdGlvbiBRZShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiPWImJmIuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fEplO0tlPUouY3VycmVudDtJKEosYixhKTtJKEssSy5jdXJyZW50LGEpO3JldHVybiEwfVxuZnVuY3Rpb24gUmUoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2Q/dm9pZCAwOnQoXCIxNjlcIik7Yz8oYj1QZShhLGIsS2UpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YixIKEssYSksSChKLGEpLEkoSixiLGEpKTpIKEssYSk7SShLLGMsYSl9dmFyIFNlPW51bGwsVGU9bnVsbDtmdW5jdGlvbiBVZShhKXtyZXR1cm4gZnVuY3Rpb24oYil7dHJ5e3JldHVybiBhKGIpfWNhdGNoKGMpe319fVxuZnVuY3Rpb24gVmUoYSl7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pcmV0dXJuITE7dmFyIGI9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKGIuaXNEaXNhYmxlZHx8IWIuc3VwcG9ydHNGaWJlcilyZXR1cm4hMDt0cnl7dmFyIGM9Yi5pbmplY3QoYSk7U2U9VWUoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclJvb3QoYyxhKX0pO1RlPVVlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9KX1jYXRjaChkKXt9cmV0dXJuITB9XG5mdW5jdGlvbiBXZShhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuZmlyc3RDb250ZXh0RGVwZW5kZW5jeT10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmVmZmVjdFRhZz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRFeHBpcmF0aW9uVGltZT10aGlzLmV4cGlyYXRpb25UaW1lPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBNKGEsYixjLGQpe3JldHVybiBuZXcgV2UoYSxiLGMsZCl9XG5mdW5jdGlvbiBYZShhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfWZ1bmN0aW9uIFllKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBYZShhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09Z2MpcmV0dXJuIDExO2lmKGE9PT1pYylyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiBaZShhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPU0oYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy5lZmZlY3RUYWc9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRFeHBpcmF0aW9uVGltZT1hLmNoaWxkRXhwaXJhdGlvblRpbWU7Yy5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2MuZmlyc3RDb250ZXh0RGVwZW5kZW5jeT1hLmZpcnN0Q29udGV4dERlcGVuZGVuY3k7Yy5zaWJsaW5nPWEuc2libGluZztcbmMuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uICRlKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlYZShhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSBhYzpyZXR1cm4gYWYoYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBmYzpyZXR1cm4gYmYoYyxlfDMsZixiKTtjYXNlIGJjOnJldHVybiBiZihjLGV8MixmLGIpO2Nhc2UgY2M6cmV0dXJuIGE9TSgxMixjLGIsZXw0KSxhLmVsZW1lbnRUeXBlPWNjLGEudHlwZT1jYyxhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIGhjOnJldHVybiBhPU0oMTMsYyxiLGUpLGEuZWxlbWVudFR5cGU9aGMsYS50eXBlPWhjLGEuZXhwaXJhdGlvblRpbWU9ZixhO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBkYzpnPTEwO2JyZWFrIGE7Y2FzZSBlYzpnPTk7YnJlYWsgYTtjYXNlIGdjOmc9MTE7YnJlYWsgYTtjYXNlIGljOmc9XG4xNDticmVhayBhO2Nhc2UgamM6Zz0xNjtkPW51bGw7YnJlYWsgYX10KFwiMTMwXCIsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpfWI9TShnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5leHBpcmF0aW9uVGltZT1mO3JldHVybiBifWZ1bmN0aW9uIGFmKGEsYixjLGQpe2E9TSg3LGEsZCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gYmYoYSxiLGMsZCl7YT1NKDgsYSxkLGIpO2I9MD09PShiJjEpP2JjOmZjO2EuZWxlbWVudFR5cGU9YjthLnR5cGU9YjthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gY2YoYSxiLGMpe2E9TSg2LGEsbnVsbCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBkZihhLGIsYyl7Yj1NKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifWZ1bmN0aW9uIGVmKGEsYil7YS5kaWRFcnJvcj0hMTt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWU7MD09PWM/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWU9YjpjPGI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWI6YS5sYXRlc3RQZW5kaW5nVGltZT5iJiYoYS5sYXRlc3RQZW5kaW5nVGltZT1iKTtmZihiLGEpfVxuZnVuY3Rpb24gZ2YoYSxiKXthLmRpZEVycm9yPSExO3ZhciBjPWEubGF0ZXN0UGluZ2VkVGltZTswIT09YyYmYz49YiYmKGEubGF0ZXN0UGluZ2VkVGltZT0wKTtjPWEuZWFybGllc3RQZW5kaW5nVGltZTt2YXIgZD1hLmxhdGVzdFBlbmRpbmdUaW1lO2M9PT1iP2EuZWFybGllc3RQZW5kaW5nVGltZT1kPT09Yj9hLmxhdGVzdFBlbmRpbmdUaW1lPTA6ZDpkPT09YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yyk7Yz1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTtkPWEubGF0ZXN0U3VzcGVuZGVkVGltZTswPT09Yz9hLmVhcmxpZXN0U3VzcGVuZGVkVGltZT1hLmxhdGVzdFN1c3BlbmRlZFRpbWU9YjpjPGI/YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9YjpkPmImJihhLmxhdGVzdFN1c3BlbmRlZFRpbWU9Yik7ZmYoYixhKX1cbmZ1bmN0aW9uIGhmKGEsYil7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lO2E9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU7Yz5iJiYoYj1jKTthPmImJihiPWEpO3JldHVybiBifWZ1bmN0aW9uIGZmKGEsYil7dmFyIGM9Yi5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1iLmxhdGVzdFN1c3BlbmRlZFRpbWUsZT1iLmVhcmxpZXN0UGVuZGluZ1RpbWUsZj1iLmxhdGVzdFBpbmdlZFRpbWU7ZT0wIT09ZT9lOmY7MD09PWUmJigwPT09YXx8ZDxhKSYmKGU9ZCk7YT1lOzAhPT1hJiZjPmEmJihhPWMpO2IubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249ZTtiLmV4cGlyYXRpb25UaW1lPWF9dmFyIGpmPSExO1xuZnVuY3Rpb24ga2YoYSl7cmV0dXJue2Jhc2VTdGF0ZTphLGZpcnN0VXBkYXRlOm51bGwsbGFzdFVwZGF0ZTpudWxsLGZpcnN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxsYXN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxmaXJzdEVmZmVjdDpudWxsLGxhc3RFZmZlY3Q6bnVsbCxmaXJzdENhcHR1cmVkRWZmZWN0Om51bGwsbGFzdENhcHR1cmVkRWZmZWN0Om51bGx9fWZ1bmN0aW9uIGxmKGEpe3JldHVybntiYXNlU3RhdGU6YS5iYXNlU3RhdGUsZmlyc3RVcGRhdGU6YS5maXJzdFVwZGF0ZSxsYXN0VXBkYXRlOmEubGFzdFVwZGF0ZSxmaXJzdENhcHR1cmVkVXBkYXRlOm51bGwsbGFzdENhcHR1cmVkVXBkYXRlOm51bGwsZmlyc3RFZmZlY3Q6bnVsbCxsYXN0RWZmZWN0Om51bGwsZmlyc3RDYXB0dXJlZEVmZmVjdDpudWxsLGxhc3RDYXB0dXJlZEVmZmVjdDpudWxsfX1cbmZ1bmN0aW9uIG1mKGEpe3JldHVybntleHBpcmF0aW9uVGltZTphLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbCxuZXh0RWZmZWN0Om51bGx9fWZ1bmN0aW9uIG5mKGEsYil7bnVsbD09PWEubGFzdFVwZGF0ZT9hLmZpcnN0VXBkYXRlPWEubGFzdFVwZGF0ZT1iOihhLmxhc3RVcGRhdGUubmV4dD1iLGEubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIG9mKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7aWYobnVsbD09PWMpe3ZhciBkPWEudXBkYXRlUXVldWU7dmFyIGU9bnVsbDtudWxsPT09ZCYmKGQ9YS51cGRhdGVRdWV1ZT1rZihhLm1lbW9pemVkU3RhdGUpKX1lbHNlIGQ9YS51cGRhdGVRdWV1ZSxlPWMudXBkYXRlUXVldWUsbnVsbD09PWQ/bnVsbD09PWU/KGQ9YS51cGRhdGVRdWV1ZT1rZihhLm1lbW9pemVkU3RhdGUpLGU9Yy51cGRhdGVRdWV1ZT1rZihjLm1lbW9pemVkU3RhdGUpKTpkPWEudXBkYXRlUXVldWU9bGYoZSk6bnVsbD09PWUmJihlPWMudXBkYXRlUXVldWU9bGYoZCkpO251bGw9PT1lfHxkPT09ZT9uZihkLGIpOm51bGw9PT1kLmxhc3RVcGRhdGV8fG51bGw9PT1lLmxhc3RVcGRhdGU/KG5mKGQsYiksbmYoZSxiKSk6KG5mKGQsYiksZS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gcGYoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlO2M9bnVsbD09PWM/YS51cGRhdGVRdWV1ZT1rZihhLm1lbW9pemVkU3RhdGUpOnFmKGEsYyk7bnVsbD09PWMubGFzdENhcHR1cmVkVXBkYXRlP2MuZmlyc3RDYXB0dXJlZFVwZGF0ZT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT1iOihjLmxhc3RDYXB0dXJlZFVwZGF0ZS5uZXh0PWIsYy5sYXN0Q2FwdHVyZWRVcGRhdGU9Yil9ZnVuY3Rpb24gcWYoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYj09PWMudXBkYXRlUXVldWUmJihiPWEudXBkYXRlUXVldWU9bGYoYikpO3JldHVybiBifVxuZnVuY3Rpb24gcmYoYSxiLGMsZCxlLGYpe3N3aXRjaChjLnRhZyl7Y2FzZSAxOnJldHVybiBhPWMucGF5bG9hZCxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7Y2FzZSAzOmEuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0yMDQ5fDY0O2Nhc2UgMDphPWMucGF5bG9hZDtlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtpZihudWxsPT09ZXx8dm9pZCAwPT09ZSlicmVhaztyZXR1cm4gbih7fSxkLGUpO2Nhc2UgMjpqZj0hMH1yZXR1cm4gZH1cbmZ1bmN0aW9uIHNmKGEsYixjLGQsZSl7amY9ITE7Yj1xZihhLGIpO2Zvcih2YXIgZj1iLmJhc2VTdGF0ZSxnPW51bGwsaD0wLGs9Yi5maXJzdFVwZGF0ZSxsPWY7bnVsbCE9PWs7KXt2YXIgbT1rLmV4cGlyYXRpb25UaW1lO208ZT8obnVsbD09PWcmJihnPWssZj1sKSxoPG0mJihoPW0pKToobD1yZihhLGIsayxsLGMsZCksbnVsbCE9PWsuY2FsbGJhY2smJihhLmVmZmVjdFRhZ3w9MzIsay5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdEVmZmVjdD9iLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1rOihiLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1rLGIubGFzdEVmZmVjdD1rKSkpO2s9ay5uZXh0fW09bnVsbDtmb3Ioaz1iLmZpcnN0Q2FwdHVyZWRVcGRhdGU7bnVsbCE9PWs7KXt2YXIgcT1rLmV4cGlyYXRpb25UaW1lO3E8ZT8obnVsbD09PW0mJihtPWssbnVsbD09PWcmJihmPWwpKSxoPHEmJihoPXEpKToobD1yZihhLGIsayxsLGMsZCksbnVsbCE9PWsuY2FsbGJhY2smJihhLmVmZmVjdFRhZ3w9XG4zMixrLm5leHRFZmZlY3Q9bnVsbCxudWxsPT09Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q/Yi5maXJzdENhcHR1cmVkRWZmZWN0PWIubGFzdENhcHR1cmVkRWZmZWN0PWs6KGIubGFzdENhcHR1cmVkRWZmZWN0Lm5leHRFZmZlY3Q9ayxiLmxhc3RDYXB0dXJlZEVmZmVjdD1rKSkpO2s9ay5uZXh0fW51bGw9PT1nJiYoYi5sYXN0VXBkYXRlPW51bGwpO251bGw9PT1tP2IubGFzdENhcHR1cmVkVXBkYXRlPW51bGw6YS5lZmZlY3RUYWd8PTMyO251bGw9PT1nJiZudWxsPT09bSYmKGY9bCk7Yi5iYXNlU3RhdGU9ZjtiLmZpcnN0VXBkYXRlPWc7Yi5maXJzdENhcHR1cmVkVXBkYXRlPW07YS5leHBpcmF0aW9uVGltZT1oO2EubWVtb2l6ZWRTdGF0ZT1sfVxuZnVuY3Rpb24gdGYoYSxiLGMpe251bGwhPT1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUmJihudWxsIT09Yi5sYXN0VXBkYXRlJiYoYi5sYXN0VXBkYXRlLm5leHQ9Yi5maXJzdENhcHR1cmVkVXBkYXRlLGIubGFzdFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZSksYi5maXJzdENhcHR1cmVkVXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlPW51bGwpO3VmKGIuZmlyc3RFZmZlY3QsYyk7Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bnVsbDt1ZihiLmZpcnN0Q2FwdHVyZWRFZmZlY3QsYyk7Yi5maXJzdENhcHR1cmVkRWZmZWN0PWIubGFzdENhcHR1cmVkRWZmZWN0PW51bGx9ZnVuY3Rpb24gdWYoYSxiKXtmb3IoO251bGwhPT1hOyl7dmFyIGM9YS5jYWxsYmFjaztpZihudWxsIT09Yyl7YS5jYWxsYmFjaz1udWxsO3ZhciBkPWI7XCJmdW5jdGlvblwiIT09dHlwZW9mIGM/dChcIjE5MVwiLGMpOnZvaWQgMDtjLmNhbGwoZCl9YT1hLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gdmYoYSxiKXtyZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazpuYyhiKX19dmFyIHdmPXtjdXJyZW50Om51bGx9LHhmPW51bGwseWY9bnVsbCx6Zj1udWxsO2Z1bmN0aW9uIEFmKGEsYil7dmFyIGM9YS50eXBlLl9jb250ZXh0O0kod2YsYy5fY3VycmVudFZhbHVlLGEpO2MuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIEJmKGEpe3ZhciBiPXdmLmN1cnJlbnQ7SCh3ZixhKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIENmKGEpe3hmPWE7emY9eWY9bnVsbDthLmZpcnN0Q29udGV4dERlcGVuZGVuY3k9bnVsbH1cbmZ1bmN0aW9uIERmKGEsYil7aWYoemYhPT1hJiYhMSE9PWImJjAhPT1iKXtpZihcIm51bWJlclwiIT09dHlwZW9mIGJ8fDEwNzM3NDE4MjM9PT1iKXpmPWEsYj0xMDczNzQxODIzO2I9e2NvbnRleHQ6YSxvYnNlcnZlZEJpdHM6YixuZXh0Om51bGx9O251bGw9PT15Zj8obnVsbD09PXhmP3QoXCIyOTNcIik6dm9pZCAwLHhmLmZpcnN0Q29udGV4dERlcGVuZGVuY3k9eWY9Yik6eWY9eWYubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9dmFyIEVmPXt9LE49e2N1cnJlbnQ6RWZ9LEZmPXtjdXJyZW50OkVmfSxHZj17Y3VycmVudDpFZn07ZnVuY3Rpb24gSGYoYSl7YT09PUVmP3QoXCIxNzRcIik6dm9pZCAwO3JldHVybiBhfVxuZnVuY3Rpb24gSWYoYSxiKXtJKEdmLGIsYSk7SShGZixhLGEpO0koTixFZixhKTt2YXIgYz1iLm5vZGVUeXBlO3N3aXRjaChjKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTptZShudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6Yz04PT09Yz9iLnBhcmVudE5vZGU6YixiPWMubmFtZXNwYWNlVVJJfHxudWxsLGM9Yy50YWdOYW1lLGI9bWUoYixjKX1IKE4sYSk7SShOLGIsYSl9ZnVuY3Rpb24gSmYoYSl7SChOLGEpO0goRmYsYSk7SChHZixhKX1mdW5jdGlvbiBLZihhKXtIZihHZi5jdXJyZW50KTt2YXIgYj1IZihOLmN1cnJlbnQpO3ZhciBjPW1lKGIsYS50eXBlKTtiIT09YyYmKEkoRmYsYSxhKSxJKE4sYyxhKSl9ZnVuY3Rpb24gTGYoYSl7RmYuY3VycmVudD09PWEmJihIKE4sYSksSChGZixhKSl9XG5mdW5jdGlvbiBPKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9bih7fSxiKTthPWEuZGVmYXVsdFByb3BzO2Zvcih2YXIgYyBpbiBhKXZvaWQgMD09PWJbY10mJihiW2NdPWFbY10pfXJldHVybiBifWZ1bmN0aW9uIE1mKGEpe3ZhciBiPWEuX3Jlc3VsdDtzd2l0Y2goYS5fc3RhdHVzKXtjYXNlIDE6cmV0dXJuIGI7Y2FzZSAyOnRocm93IGI7Y2FzZSAwOnRocm93IGI7ZGVmYXVsdDp0aHJvdyBhLl9zdGF0dXM9MCxiPWEuX2N0b3IsYj1iKCksYi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KSxhLl9yZXN1bHQ9YixiO319dmFyIE5mPVhiLlJlYWN0Q3VycmVudE93bmVyLE9mPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO1xuZnVuY3Rpb24gUGYoYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm4oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YztkPWEudXBkYXRlUXVldWU7bnVsbCE9PWQmJjA9PT1hLmV4cGlyYXRpb25UaW1lJiYoZC5iYXNlU3RhdGU9Yyl9XG52YXIgVWY9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFsRmliZXIpPzI9PT1rZChhKTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1RZigpO2Q9UmYoZCxhKTt2YXIgZT1tZihkKTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7U2YoKTtvZihhLGUpO1RmKGEsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPVFmKCk7ZD1SZihkLGEpO3ZhciBlPW1mKGQpO2UudGFnPTE7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO1NmKCk7b2YoYSxlKTtUZihhLGQpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgYz1RZigpO2M9UmYoYyxhKTt2YXIgZD1tZihjKTtkLnRhZz1cbjI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihkLmNhbGxiYWNrPWIpO1NmKCk7b2YoYSxkKTtUZihhLGMpfX07ZnVuY3Rpb24gVmYoYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hamQoYyxkKXx8IWpkKGUsZik6ITB9XG5mdW5jdGlvbiBXZihhLGIsYyl7dmFyIGQ9ITEsZT1KZTt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj1OZi5jdXJyZW50RGlzcGF0Y2hlci5yZWFkQ29udGV4dChmKTooZT1MKGIpP0tlOkouY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP0xlKGEsZSk6SmUpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1VZjthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxGaWJlcj1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiBYZihhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmVWYuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiBZZihhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPU9mO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9TmYuY3VycmVudERpc3BhdGNoZXIucmVhZENvbnRleHQoZik6KGY9TChiKT9LZTpKLmN1cnJlbnQsZS5jb250ZXh0PUxlKGEsZikpO2Y9YS51cGRhdGVRdWV1ZTtudWxsIT09ZiYmKHNmKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihQZihhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fChiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZVZi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxmPWEudXBkYXRlUXVldWUsbnVsbCE9PWYmJihzZihhLGYsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCl9dmFyIFpmPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiAkZihhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7dmFyIGQ9dm9pZCAwO2MmJigxIT09Yy50YWc/dChcIjI4OVwiKTp2b2lkIDAsZD1jLnN0YXRlTm9kZSk7ZD92b2lkIDA6dChcIjE0N1wiLGEpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09T2YmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1cInN0cmluZ1wiIT09dHlwZW9mIGE/dChcIjI4NFwiKTp2b2lkIDA7Yy5fb3duZXI/dm9pZCAwOnQoXCIyOTBcIixhKX1yZXR1cm4gYX1cbmZ1bmN0aW9uIGFnKGEsYil7XCJ0ZXh0YXJlYVwiIT09YS50eXBlJiZ0KFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIil9XG5mdW5jdGlvbiBiZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYixjKXthPVplKGEsYixjKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9Y2YoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzLGQpLGQucmVmPSRmKGEsYixjKSxkLnJldHVybj1hLGQ7ZD0kZShjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj0kZihhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09XG5jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPWRmKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG0oYSxiLGMsZCxnKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPWFmKGMsYS5tb2RlLGQsZyksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBxKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1jZihcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBaYjpyZXR1cm4gYz0kZShiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj0kZihhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgJGI6cmV0dXJuIGI9ZGYoYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKFpmKGIpfHxcbmxjKGIpKXJldHVybiBiPWFmKGIsYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO2FnKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24geChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBaYjpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PWFjP20oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSAkYjpyZXR1cm4gYy5rZXk9PT1lP2woYSxiLGMsZCk6bnVsbH1pZihaZihjKXx8bGMoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bShhLGIsYyxkLG51bGwpO2FnKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24geihhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPVxuYS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIFpiOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT1hYz9tKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmsoYixhLGQsZSk7Y2FzZSAkYjpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsbChiLGEsZCxlKX1pZihaZihkKXx8bGMoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbShiLGEsZCxlLG51bGwpO2FnKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQihlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCxyPW51bGwsbT1nLHU9Zz0wLHA9bnVsbDtudWxsIT09bSYmdTxoLmxlbmd0aDt1Kyspe20uaW5kZXg+dT8ocD1tLG09bnVsbCk6cD1tLnNpYmxpbmc7dmFyIHY9eChlLG0saFt1XSxrKTtpZihudWxsPT09dil7bnVsbD09PW0mJihtPXApO2JyZWFrfWEmJlxubSYmbnVsbD09PXYuYWx0ZXJuYXRlJiZiKGUsbSk7Zz1mKHYsZyx1KTtudWxsPT09cj9sPXY6ci5zaWJsaW5nPXY7cj12O209cH1pZih1PT09aC5sZW5ndGgpcmV0dXJuIGMoZSxtKSxsO2lmKG51bGw9PT1tKXtmb3IoO3U8aC5sZW5ndGg7dSsrKWlmKG09cShlLGhbdV0saykpZz1mKG0sZyx1KSxudWxsPT09cj9sPW06ci5zaWJsaW5nPW0scj1tO3JldHVybiBsfWZvcihtPWQoZSxtKTt1PGgubGVuZ3RoO3UrKylpZihwPXoobSxlLHUsaFt1XSxrKSlhJiZudWxsIT09cC5hbHRlcm5hdGUmJm0uZGVsZXRlKG51bGw9PT1wLmtleT91OnAua2V5KSxnPWYocCxnLHUpLG51bGw9PT1yP2w9cDpyLnNpYmxpbmc9cCxyPXA7YSYmbS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiBRKGUsZyxoLGspe3ZhciBsPWxjKGgpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBsP3QoXCIxNTBcIik6dm9pZCAwO2g9bC5jYWxsKGgpO251bGw9PWg/dChcIjE1MVwiKTp2b2lkIDA7XG5mb3IodmFyIG09bD1udWxsLHI9Zyx1PWc9MCxwPW51bGwsdj1oLm5leHQoKTtudWxsIT09ciYmIXYuZG9uZTt1Kyssdj1oLm5leHQoKSl7ci5pbmRleD51PyhwPXIscj1udWxsKTpwPXIuc2libGluZzt2YXIgeT14KGUscix2LnZhbHVlLGspO2lmKG51bGw9PT15KXtyfHwocj1wKTticmVha31hJiZyJiZudWxsPT09eS5hbHRlcm5hdGUmJmIoZSxyKTtnPWYoeSxnLHUpO251bGw9PT1tP2w9eTptLnNpYmxpbmc9eTttPXk7cj1wfWlmKHYuZG9uZSlyZXR1cm4gYyhlLHIpLGw7aWYobnVsbD09PXIpe2Zvcig7IXYuZG9uZTt1Kyssdj1oLm5leHQoKSl2PXEoZSx2LnZhbHVlLGspLG51bGwhPT12JiYoZz1mKHYsZyx1KSxudWxsPT09bT9sPXY6bS5zaWJsaW5nPXYsbT12KTtyZXR1cm4gbH1mb3Iocj1kKGUscik7IXYuZG9uZTt1Kyssdj1oLm5leHQoKSl2PXoocixlLHUsdi52YWx1ZSxrKSxudWxsIT09diYmKGEmJm51bGwhPT12LmFsdGVybmF0ZSYmci5kZWxldGUobnVsbD09PXYua2V5P3U6XG52LmtleSksZz1mKHYsZyx1KSxudWxsPT09bT9sPXY6bS5zaWJsaW5nPXYsbT12KTthJiZyLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT1hYyYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBaYjphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpaWYoNz09PWsudGFnP2YudHlwZT09PWFjOmsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYudHlwZT09PWFjP2YucHJvcHMuY2hpbGRyZW46Zi5wcm9wcyxoKTtkLnJlZj0kZihhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPVxuay5zaWJsaW5nfWYudHlwZT09PWFjPyhkPWFmKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD0kZShmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj0kZihhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgJGI6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdLGgpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD1kZihmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cblwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmLGgpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9Y2YoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoWmYoZikpcmV0dXJuIEIoYSxkLGYsaCk7aWYobGMoZikpcmV0dXJuIFEoYSxkLGYsaCk7bCYmYWcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMDpoPWEudHlwZSx0KFwiMTUyXCIsaC5kaXNwbGF5TmFtZXx8aC5uYW1lfHxcIkNvbXBvbmVudFwiKX1yZXR1cm4gYyhhLGQpfX12YXIgY2c9YmcoITApLGRnPWJnKCExKSxlZz1udWxsLGZnPW51bGwsZ2c9ITE7XG5mdW5jdGlvbiBoZyhhLGIpe3ZhciBjPU0oNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31mdW5jdGlvbiBpZyhhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIGpnKGEpe2lmKGdnKXt2YXIgYj1mZztpZihiKXt2YXIgYz1iO2lmKCFpZyhhLGIpKXtiPUZlKGMpO2lmKCFifHwhaWcoYSxiKSl7YS5lZmZlY3RUYWd8PTI7Z2c9ITE7ZWc9YTtyZXR1cm59aGcoZWcsYyl9ZWc9YTtmZz1HZShiKX1lbHNlIGEuZWZmZWN0VGFnfD0yLGdnPSExLGVnPWF9fWZ1bmN0aW9uIGtnKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZzspYT1hLnJldHVybjtlZz1hfWZ1bmN0aW9uIGxnKGEpe2lmKGEhPT1lZylyZXR1cm4hMTtpZighZ2cpcmV0dXJuIGtnKGEpLGdnPSEwLCExO3ZhciBiPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYhQ2UoYixhLm1lbW9pemVkUHJvcHMpKWZvcihiPWZnO2I7KWhnKGEsYiksYj1GZShiKTtrZyhhKTtmZz1lZz9GZShhLnN0YXRlTm9kZSk6bnVsbDtyZXR1cm4hMH1mdW5jdGlvbiBtZygpe2ZnPWVnPW51bGw7Z2c9ITF9dmFyIG5nPVhiLlJlYWN0Q3VycmVudE93bmVyO1xuZnVuY3Rpb24gUChhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP2RnKGIsbnVsbCxjLGQpOmNnKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIG9nKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjtDZihiLGUpO2Q9YyhkLGYpO2IuZWZmZWN0VGFnfD0xO1AoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBwZyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWEpe3ZhciBnPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmIVhlKGcpJiZ2b2lkIDA9PT1nLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSlyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcscWcoYSxiLGcsZCxlLGYpO2E9JGUoYy50eXBlLG51bGwsZCxudWxsLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKGU8ZiYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpqZCxjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiByZyhhLGIsZik7Yi5lZmZlY3RUYWd8PTE7YT1aZShnLGQsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24gcWcoYSxiLGMsZCxlLGYpe3JldHVybiBudWxsIT09YSYmZTxmJiZqZChhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWY/cmcoYSxiLGYpOnNnKGEsYixjLGQsZil9ZnVuY3Rpb24gdGcoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5lZmZlY3RUYWd8PTEyOH1mdW5jdGlvbiBzZyhhLGIsYyxkLGUpe3ZhciBmPUwoYyk/S2U6Si5jdXJyZW50O2Y9TGUoYixmKTtDZihiLGUpO2M9YyhkLGYpO2IuZWZmZWN0VGFnfD0xO1AoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiB1ZyhhLGIsYyxkLGUpe2lmKEwoYykpe3ZhciBmPSEwO1FlKGIpfWVsc2UgZj0hMTtDZihiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksV2YoYixjLGQsZSksWWYoYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9TmYuY3VycmVudERpc3BhdGNoZXIucmVhZENvbnRleHQobCk6KGw9TChjKT9LZTpKLmN1cnJlbnQsbD1MZShiLGwpKTt2YXIgbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxxPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtxfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmWGYoYixnLGQsbCk7amY9ITE7dmFyIHg9Yi5tZW1vaXplZFN0YXRlO2s9Zy5zdGF0ZT14O3ZhciB6PWIudXBkYXRlUXVldWU7bnVsbCE9PXomJihzZihiLHosZCxnLGUpLGs9Yi5tZW1vaXplZFN0YXRlKTtoIT09ZHx8eCE9PWt8fEsuY3VycmVudHx8amY/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoUGYoYixjLG0sZCksaz1iLm1lbW9pemVkU3RhdGUpLChoPWpmfHxWZihiLGMsaCxkLHgsayxsKSk/KHF8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcbmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1rKSxnLnByb3BzPWQsZy5zdGF0ZT1rLGcuY29udGV4dD1sLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGQ9ITEpfWVsc2UgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcyxnLnByb3BzPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpPKGIudHlwZSxoKSxrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGUsXCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPU5mLmN1cnJlbnREaXNwYXRjaGVyLnJlYWRDb250ZXh0KGwpOihsPUwoYyk/S2U6Si5jdXJyZW50LGw9TGUoYixsKSksbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxcbihxPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGshPT1sKSYmWGYoYixnLGQsbCksamY9ITEsaz1iLm1lbW9pemVkU3RhdGUseD1nLnN0YXRlPWssej1iLnVwZGF0ZVF1ZXVlLG51bGwhPT16JiYoc2YoYix6LGQsZyxlKSx4PWIubWVtb2l6ZWRTdGF0ZSksaCE9PWR8fGshPT14fHxLLmN1cnJlbnR8fGpmPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKFBmKGIsYyxtLGQpLHg9Yi5tZW1vaXplZFN0YXRlKSwobT1qZnx8VmYoYixjLGgsZCxrLHgsbCkpPyhxfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8XG4oXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQseCxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHgsbCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksYi5tZW1vaXplZFByb3BzPVxuZCxiLm1lbW9pemVkU3RhdGU9eCksZy5wcm9wcz1kLGcuc3RhdGU9eCxnLmNvbnRleHQ9bCxkPW0pOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4gdmcoYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gdmcoYSxiLGMsZCxlLGYpe3RnKGEsYik7dmFyIGc9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZSZShiLGMsITEpLHJnKGEsYixmKTtkPWIuc3RhdGVOb2RlO25nLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPWNnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9Y2coYixudWxsLGgsZikpOlAoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmUmUoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiB3ZyhhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P09lKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJk9lKGEsYi5jb250ZXh0LCExKTtJZihhLGIuY29udGFpbmVySW5mbyl9XG5mdW5jdGlvbiB4ZyhhLGIsYyl7dmFyIGQ9Yi5tb2RlLGU9Yi5wZW5kaW5nUHJvcHMsZj1iLm1lbW9pemVkU3RhdGU7aWYoMD09PShiLmVmZmVjdFRhZyY2NCkpe2Y9bnVsbDt2YXIgZz0hMX1lbHNlIGY9e3RpbWVkT3V0QXQ6bnVsbCE9PWY/Zi50aW1lZE91dEF0OjB9LGc9ITAsYi5lZmZlY3RUYWcmPS02NTtudWxsPT09YT9nPyhnPWUuZmFsbGJhY2ssZT1hZihudWxsLGQsMCxudWxsKSwwPT09KGIubW9kZSYxKSYmKGUuY2hpbGQ9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQpLGQ9YWYoZyxkLGMsbnVsbCksZS5zaWJsaW5nPWQsYz1lLGMucmV0dXJuPWQucmV0dXJuPWIpOmM9ZD1kZyhiLG51bGwsZS5jaGlsZHJlbixjKTpudWxsIT09YS5tZW1vaXplZFN0YXRlPyhkPWEuY2hpbGQsYT1kLnNpYmxpbmcsZz8oYz1lLmZhbGxiYWNrLGU9WmUoZCxkLnBlbmRpbmdQcm9wcywwKSwwPT09KGIubW9kZSYxKSYmKGc9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9cbmIuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxnIT09ZC5jaGlsZCYmKGUuY2hpbGQ9ZykpLGQ9ZS5zaWJsaW5nPVplKGEsYyxhLmV4cGlyYXRpb25UaW1lKSxjPWUsZS5jaGlsZEV4cGlyYXRpb25UaW1lPTAsYy5yZXR1cm49ZC5yZXR1cm49Yik6Yz1kPWNnKGIsZC5jaGlsZCxlLmNoaWxkcmVuLGMpKTooYT1hLmNoaWxkLGc/KGc9ZS5mYWxsYmFjayxlPWFmKG51bGwsZCwwLG51bGwpLGUuY2hpbGQ9YSwwPT09KGIubW9kZSYxKSYmKGUuY2hpbGQ9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQpLGQ9ZS5zaWJsaW5nPWFmKGcsZCxjLG51bGwpLGQuZWZmZWN0VGFnfD0yLGM9ZSxlLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxjLnJldHVybj1kLnJldHVybj1iKTpkPWM9Y2coYixhLGUuY2hpbGRyZW4sYykpO2IubWVtb2l6ZWRTdGF0ZT1mO2IuY2hpbGQ9YztyZXR1cm4gZH1cbmZ1bmN0aW9uIHJnKGEsYixjKXtudWxsIT09YSYmKGIuZmlyc3RDb250ZXh0RGVwZW5kZW5jeT1hLmZpcnN0Q29udGV4dERlcGVuZGVuY3kpO2lmKGIuY2hpbGRFeHBpcmF0aW9uVGltZTxjKXJldHVybiBudWxsO251bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZD90KFwiMTUzXCIpOnZvaWQgMDtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9WmUoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9WmUoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24geWcoYSxiLGMpe3ZhciBkPWIuZXhwaXJhdGlvblRpbWU7aWYobnVsbCE9PWEmJmEubWVtb2l6ZWRQcm9wcz09PWIucGVuZGluZ1Byb3BzJiYhSy5jdXJyZW50JiZkPGMpe3N3aXRjaChiLnRhZyl7Y2FzZSAzOndnKGIpO21nKCk7YnJlYWs7Y2FzZSA1OktmKGIpO2JyZWFrO2Nhc2UgMTpMKGIudHlwZSkmJlFlKGIpO2JyZWFrO2Nhc2UgNDpJZihiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6QWYoYixiLm1lbW9pemVkUHJvcHMudmFsdWUpO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7ZD1iLmNoaWxkLmNoaWxkRXhwaXJhdGlvblRpbWU7aWYoMCE9PWQmJmQ+PWMpcmV0dXJuIHhnKGEsYixjKTtiPXJnKGEsYixjKTtyZXR1cm4gbnVsbCE9PWI/Yi5zaWJsaW5nOm51bGx9fXJldHVybiByZyhhLGIsYyl9Yi5leHBpcmF0aW9uVGltZT0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmQ9Yi5lbGVtZW50VHlwZTtudWxsIT09XG5hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO3ZhciBlPUxlKGIsSi5jdXJyZW50KTtDZihiLGMpO2U9ZChhLGUpO2IuZWZmZWN0VGFnfD0xO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtpZihMKGQpKXt2YXIgZj0hMDtRZShiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmUGYoYixkLGcsYSk7ZS51cGRhdGVyPVVmO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbEZpYmVyPWI7WWYoYixkLGEsYyk7Yj12ZyhudWxsLGIsZCwhMCxmLGMpfWVsc2UgYi50YWc9MCxQKG51bGwsYixlLGMpLGI9Yi5jaGlsZDtcbnJldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTtmPWIucGVuZGluZ1Byb3BzO2E9TWYoZSk7Yi50eXBlPWE7ZT1iLnRhZz1ZZShhKTtmPU8oYSxmKTtnPXZvaWQgMDtzd2l0Y2goZSl7Y2FzZSAwOmc9c2cobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDE6Zz11ZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTE6Zz1vZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTQ6Zz1wZyhudWxsLGIsYSxPKGEudHlwZSxmKSxkLGMpO2JyZWFrO2RlZmF1bHQ6dChcIjI4M1wiLGEpfXJldHVybiBnO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TyhkLGUpLHNnKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpPKGQsZSksdWcoYSxiLGQsXG5lLGMpO2Nhc2UgMzp3ZyhiKTtkPWIudXBkYXRlUXVldWU7bnVsbD09PWQ/dChcIjI4MlwiKTp2b2lkIDA7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6bnVsbDtzZihiLGQsYi5wZW5kaW5nUHJvcHMsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKW1nKCksYj1yZyhhLGIsYyk7ZWxzZXtlPWIuc3RhdGVOb2RlO2lmKGU9KG51bGw9PT1hfHxudWxsPT09YS5jaGlsZCkmJmUuaHlkcmF0ZSlmZz1HZShiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxlZz1iLGU9Z2c9ITA7ZT8oYi5lZmZlY3RUYWd8PTIsYi5jaGlsZD1kZyhiLG51bGwsZCxjKSk6KFAoYSxiLGQsYyksbWcoKSk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gS2YoYiksbnVsbD09PWEmJmpnKGIpLGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbCxnPWUuY2hpbGRyZW4sQ2UoZCxlKT9nPW51bGw6bnVsbCE9PVxuZiYmQ2UoZCxmKSYmKGIuZWZmZWN0VGFnfD0xNiksdGcoYSxiKSwxIT09YyYmYi5tb2RlJjEmJmUuaGlkZGVuPyhiLmV4cGlyYXRpb25UaW1lPTEsYj1udWxsKTooUChhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmamcoYiksbnVsbDtjYXNlIDEzOnJldHVybiB4ZyhhLGIsYyk7Y2FzZSA0OnJldHVybiBJZihiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1jZyhiLG51bGwsZCxjKTpQKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TyhkLGUpLG9nKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBQKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUChhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBQKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixcbmMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTtBZihiLGYpO2lmKG51bGwhPT1nKXt2YXIgaD1nLnZhbHVlO2Y9aD09PWYmJigwIT09aHx8MS9oPT09MS9mKXx8aCE9PWgmJmYhPT1mPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDA7aWYoMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhSy5jdXJyZW50KXtiPXJnKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihnPWIuY2hpbGQsbnVsbCE9PWcmJihnLnJldHVybj1iKTtudWxsIT09Zzspe2g9Zy5maXJzdENvbnRleHREZXBlbmRlbmN5O2lmKG51bGwhPT1oKXtkb3tpZihoLmNvbnRleHQ9PT1kJiYwIT09KGgub2JzZXJ2ZWRCaXRzJmYpKXtpZigxPT09Zy50YWcpe3ZhciBrPW1mKGMpO2sudGFnPTI7b2YoZyxrKX1nLmV4cGlyYXRpb25UaW1lPFxuYyYmKGcuZXhwaXJhdGlvblRpbWU9Yyk7az1nLmFsdGVybmF0ZTtudWxsIT09ayYmay5leHBpcmF0aW9uVGltZTxjJiYoay5leHBpcmF0aW9uVGltZT1jKTtmb3IodmFyIGw9Zy5yZXR1cm47bnVsbCE9PWw7KXtrPWwuYWx0ZXJuYXRlO2lmKGwuY2hpbGRFeHBpcmF0aW9uVGltZTxjKWwuY2hpbGRFeHBpcmF0aW9uVGltZT1jLG51bGwhPT1rJiZrLmNoaWxkRXhwaXJhdGlvblRpbWU8YyYmKGsuY2hpbGRFeHBpcmF0aW9uVGltZT1jKTtlbHNlIGlmKG51bGwhPT1rJiZrLmNoaWxkRXhwaXJhdGlvblRpbWU8YylrLmNoaWxkRXhwaXJhdGlvblRpbWU9YztlbHNlIGJyZWFrO2w9bC5yZXR1cm59fWs9Zy5jaGlsZDtoPWgubmV4dH13aGlsZShudWxsIT09aCl9ZWxzZSBrPTEwPT09Zy50YWc/Zy50eXBlPT09Yi50eXBlP251bGw6Zy5jaGlsZDpnLmNoaWxkO2lmKG51bGwhPT1rKWsucmV0dXJuPWc7ZWxzZSBmb3Ioaz1nO251bGwhPT1rOyl7aWYoaz09PWIpe2s9bnVsbDticmVha31nPWsuc2libGluZztcbmlmKG51bGwhPT1nKXtnLnJldHVybj1rLnJldHVybjtrPWc7YnJlYWt9az1rLnJldHVybn1nPWt9fVAoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4sQ2YoYixjKSxlPURmKGUsZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmVmZmVjdFRhZ3w9MSxQKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1PKGUudHlwZSxiLnBlbmRpbmdQcm9wcykscGcoYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIHFnKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpPKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLGIudGFnPTEsTChkKT8oYT0hMCxRZShiKSk6XG5hPSExLENmKGIsYyksV2YoYixkLGUsYyksWWYoYixkLGUsYyksdmcobnVsbCxiLGQsITAsYSxjKTtkZWZhdWx0OnQoXCIxNTZcIil9fWZ1bmN0aW9uIHpnKGEpe2EuZWZmZWN0VGFnfD00fXZhciBBZz12b2lkIDAsQmc9dm9pZCAwLEZnPXZvaWQgMCxHZz12b2lkIDA7QWc9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O0JnPWZ1bmN0aW9uKCl7fTtcbkZnPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKGYhPT1kKXt2YXIgZz1iLnN0YXRlTm9kZTtIZihOLmN1cnJlbnQpO2E9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Zj1BYyhnLGYpO2Q9QWMoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPWVlKGcsZik7ZD1lZShnLGQpO2E9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmY9bih7fSxmLHt2YWx1ZTp2b2lkIDB9KTtkPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7YT1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpmPWdlKGcsZik7ZD1nZShnLGQpO2E9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZi5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoZy5vbmNsaWNrPXllKX12ZShjLGQpO2c9Yz12b2lkIDA7dmFyIGg9bnVsbDtmb3IoYyBpbiBmKWlmKCFkLmhhc093blByb3BlcnR5KGMpJiZmLmhhc093blByb3BlcnR5KGMpJiZudWxsIT1mW2NdKWlmKFwic3R5bGVcIj09PVxuYyl7dmFyIGs9ZltjXTtmb3IoZyBpbiBrKWsuaGFzT3duUHJvcGVydHkoZykmJihofHwoaD17fSksaFtnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09YyYmXCJjaGlsZHJlblwiIT09YyYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWMmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1jJiZcImF1dG9Gb2N1c1wiIT09YyYmKHNhLmhhc093blByb3BlcnR5KGMpP2F8fChhPVtdKTooYT1hfHxbXSkucHVzaChjLG51bGwpKTtmb3IoYyBpbiBkKXt2YXIgbD1kW2NdO2s9bnVsbCE9Zj9mW2NdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGMpJiZsIT09ayYmKG51bGwhPWx8fG51bGwhPWspKWlmKFwic3R5bGVcIj09PWMpaWYoayl7Zm9yKGcgaW4gaykhay5oYXNPd25Qcm9wZXJ0eShnKXx8bCYmbC5oYXNPd25Qcm9wZXJ0eShnKXx8KGh8fChoPXt9KSxoW2ddPVwiXCIpO2ZvcihnIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShnKSYma1tnXSE9PWxbZ10mJihofHxcbihoPXt9KSxoW2ddPWxbZ10pfWVsc2UgaHx8KGF8fChhPVtdKSxhLnB1c2goYyxoKSksaD1sO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1jPyhsPWw/bC5fX2h0bWw6dm9pZCAwLGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9bCYmayE9PWwmJihhPWF8fFtdKS5wdXNoKGMsXCJcIitsKSk6XCJjaGlsZHJlblwiPT09Yz9rPT09bHx8XCJzdHJpbmdcIiE9PXR5cGVvZiBsJiZcIm51bWJlclwiIT09dHlwZW9mIGx8fChhPWF8fFtdKS5wdXNoKGMsXCJcIitsKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWMmJihzYS5oYXNPd25Qcm9wZXJ0eShjKT8obnVsbCE9bCYmeGUoZSxjKSxhfHxrPT09bHx8KGE9W10pKTooYT1hfHxbXSkucHVzaChjLGwpKX1oJiYoYT1hfHxbXSkucHVzaChcInN0eWxlXCIsaCk7ZT1hOyhiLnVwZGF0ZVF1ZXVlPWUpJiZ6ZyhiKX19O0dnPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiZ6ZyhiKX07XG5mdW5jdGlvbiBIZyhhLGIpe3ZhciBjPWIuc291cmNlLGQ9Yi5zdGFjaztudWxsPT09ZCYmbnVsbCE9PWMmJihkPW5jKGMpKTtudWxsIT09YyYmbWMoYy50eXBlKTtiPWIudmFsdWU7bnVsbCE9PWEmJjE9PT1hLnRhZyYmbWMoYS50eXBlKTt0cnl7Y29uc29sZS5lcnJvcihiKX1jYXRjaChlKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgZTt9KX19ZnVuY3Rpb24gSWcoYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpdHJ5e2IobnVsbCl9Y2F0Y2goYyl7SmcoYSxjKX1lbHNlIGIuY3VycmVudD1udWxsfVxuZnVuY3Rpb24gS2coYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIFRlJiZUZShhKTtzd2l0Y2goYS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTp2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iJiYoYj1iLmxhc3RFZmZlY3QsbnVsbCE9PWIpKXt2YXIgYz1iPWIubmV4dDtkb3t2YXIgZD1jLmRlc3Ryb3k7aWYobnVsbCE9PWQpe3ZhciBlPWE7dHJ5e2QoKX1jYXRjaChmKXtKZyhlLGYpfX1jPWMubmV4dH13aGlsZShjIT09Yil9YnJlYWs7Y2FzZSAxOklnKGEpO2I9YS5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2IucHJvcHM9YS5tZW1vaXplZFByb3BzLGIuc3RhdGU9YS5tZW1vaXplZFN0YXRlLGIuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChmKXtKZyhhLGYpfWJyZWFrO2Nhc2UgNTpJZyhhKTticmVhaztjYXNlIDQ6TGcoYSl9fVxuZnVuY3Rpb24gTWcoYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBOZyhhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZihNZyhiKSl7dmFyIGM9YjticmVhayBhfWI9Yi5yZXR1cm59dChcIjE2MFwiKTtjPXZvaWQgMH12YXIgZD1iPXZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpiPWMuc3RhdGVOb2RlO2Q9ITE7YnJlYWs7Y2FzZSAzOmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnQoXCIxNjFcIil9Yy5lZmZlY3RUYWcmMTYmJihwZShiLFwiXCIpLGMuZWZmZWN0VGFnJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8TWcoYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnOyl7aWYoYy5lZmZlY3RUYWcmMiljb250aW51ZSBiO1xuaWYobnVsbD09PWMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmVmZmVjdFRhZyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1mb3IodmFyIGU9YTs7KXtpZig1PT09ZS50YWd8fDY9PT1lLnRhZylpZihjKWlmKGQpe3ZhciBmPWIsZz1lLnN0YXRlTm9kZSxoPWM7OD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShnLGgpOmYuaW5zZXJ0QmVmb3JlKGcsaCl9ZWxzZSBiLmluc2VydEJlZm9yZShlLnN0YXRlTm9kZSxjKTtlbHNlIGQ/KGc9YixoPWUuc3RhdGVOb2RlLDg9PT1nLm5vZGVUeXBlPyhmPWcucGFyZW50Tm9kZSxmLmluc2VydEJlZm9yZShoLGcpKTooZj1nLGYuYXBwZW5kQ2hpbGQoaCkpLGc9Zy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1nJiZ2b2lkIDAhPT1nfHxudWxsIT09Zi5vbmNsaWNrfHwoZi5vbmNsaWNrPXllKSk6Yi5hcHBlbmRDaGlsZChlLnN0YXRlTm9kZSk7XG5lbHNlIGlmKDQhPT1lLnRhZyYmbnVsbCE9PWUuY2hpbGQpe2UuY2hpbGQucmV0dXJuPWU7ZT1lLmNoaWxkO2NvbnRpbnVlfWlmKGU9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWUuc2libGluZzspe2lmKG51bGw9PT1lLnJldHVybnx8ZS5yZXR1cm49PT1hKXJldHVybjtlPWUucmV0dXJufWUuc2libGluZy5yZXR1cm49ZS5yZXR1cm47ZT1lLnNpYmxpbmd9fVxuZnVuY3Rpb24gTGcoYSl7Zm9yKHZhciBiPWEsYz0hMSxkPXZvaWQgMCxlPXZvaWQgMDs7KXtpZighYyl7Yz1iLnJldHVybjthOmZvcig7Oyl7bnVsbD09PWM/dChcIjE2MFwiKTp2b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6ZD1jLnN0YXRlTm9kZTtlPSExO2JyZWFrIGE7Y2FzZSAzOmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrIGE7Y2FzZSA0OmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrIGF9Yz1jLnJldHVybn1jPSEwfWlmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXthOmZvcih2YXIgZj1iLGc9Zjs7KWlmKEtnKGcpLG51bGwhPT1nLmNoaWxkJiY0IT09Zy50YWcpZy5jaGlsZC5yZXR1cm49ZyxnPWcuY2hpbGQ7ZWxzZXtpZihnPT09ZilicmVhaztmb3IoO251bGw9PT1nLnNpYmxpbmc7KXtpZihudWxsPT09Zy5yZXR1cm58fGcucmV0dXJuPT09ZilicmVhayBhO2c9Zy5yZXR1cm59Zy5zaWJsaW5nLnJldHVybj1nLnJldHVybjtnPWcuc2libGluZ31lP1xuKGY9ZCxnPWIuc3RhdGVOb2RlLDg9PT1mLm5vZGVUeXBlP2YucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChnKTpmLnJlbW92ZUNoaWxkKGcpKTpkLnJlbW92ZUNoaWxkKGIuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1iLnRhZz8oZD1iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLGU9ITApOktnKGIpLG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm47Yj1iLnJldHVybjs0PT09Yi50YWcmJihjPSExKX1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1cbmZ1bmN0aW9uIE9nKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6YnJlYWs7Y2FzZSAxOmJyZWFrO2Nhc2UgNTp2YXIgYz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXt2YXIgZD1iLm1lbW9pemVkUHJvcHMsZT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDthPWIudHlwZTt2YXIgZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09Zil7Y1tIYV09ZDtcImlucHV0XCI9PT1hJiZcInJhZGlvXCI9PT1kLnR5cGUmJm51bGwhPWQubmFtZSYmQ2MoYyxkKTt3ZShhLGUpO2I9d2UoYSxkKTtmb3IoZT0wO2U8Zi5sZW5ndGg7ZSs9Mil7dmFyIGc9ZltlXSxoPWZbZSsxXTtcInN0eWxlXCI9PT1nP3RlKGMsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9vZShjLGgpOlwiY2hpbGRyZW5cIj09PWc/cGUoYyxoKTp5YyhjLGcsaCxiKX1zd2l0Y2goYSl7Y2FzZSBcImlucHV0XCI6RGMoYyxkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjppZShjLFxuZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWQubXVsdGlwbGUsYT1kLnZhbHVlLG51bGwhPWE/ZmUoYywhIWQubXVsdGlwbGUsYSwhMSk6YiE9PSEhZC5tdWx0aXBsZSYmKG51bGwhPWQuZGVmYXVsdFZhbHVlP2ZlKGMsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTpmZShjLCEhZC5tdWx0aXBsZSxkLm11bHRpcGxlP1tdOlwiXCIsITEpKX19fWJyZWFrO2Nhc2UgNjpudWxsPT09Yi5zdGF0ZU5vZGU/dChcIjE2MlwiKTp2b2lkIDA7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPWIubWVtb2l6ZWRQcm9wczticmVhaztjYXNlIDM6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmM9Yi5tZW1vaXplZFN0YXRlO2E9YjtudWxsPT09Yz9kPSExOihkPSEwLGE9Yi5jaGlsZCwwPT09Yy50aW1lZE91dEF0JiYoYy50aW1lZE91dEF0PVFmKCkpKTtpZihudWxsIT09YSlhOmZvcihiPWM9YTs7KXtpZig1PT09XG5iLnRhZylhPWIuc3RhdGVOb2RlLGQ/YS5zdHlsZS5kaXNwbGF5PVwibm9uZVwiOihhPWIuc3RhdGVOb2RlLGY9Yi5tZW1vaXplZFByb3BzLnN0eWxlLGY9dm9pZCAwIT09ZiYmbnVsbCE9PWYmJmYuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2YuZGlzcGxheTpudWxsLGEuc3R5bGUuZGlzcGxheT1zZShcImRpc3BsYXlcIixmKSk7ZWxzZSBpZig2PT09Yi50YWcpYi5zdGF0ZU5vZGUubm9kZVZhbHVlPWQ/XCJcIjpiLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigxMz09PWIudGFnJiZudWxsIT09Yi5tZW1vaXplZFN0YXRlKXthPWIuY2hpbGQuc2libGluZzthLnJldHVybj1iO2I9YTtjb250aW51ZX1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YylicmVhayBhO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1jKWJyZWFrIGE7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPVxuYi5yZXR1cm47Yj1iLnNpYmxpbmd9YnJlYWs7Y2FzZSAxNzpicmVhaztkZWZhdWx0OnQoXCIxNjNcIil9fWZ1bmN0aW9uIFBnKGEsYixjKXtjPW1mKGMpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe1FnKGQpO0hnKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gUmcoYSxiLGMpe2M9bWYoYyk7Yy50YWc9Mzt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09U2c/U2c9bmV3IFNldChbdGhpc10pOlNnLmFkZCh0aGlzKSk7dmFyIGM9Yi52YWx1ZSxlPWIuc3RhY2s7SGcoYSxiKTt0aGlzLmNvbXBvbmVudERpZENhdGNoKGMse2NvbXBvbmVudFN0YWNrOm51bGwhPT1lP2U6XCJcIn0pfSk7cmV0dXJuIGN9XG5mdW5jdGlvbiBUZyhhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpMKGEudHlwZSkmJk1lKGEpO3ZhciBiPWEuZWZmZWN0VGFnO3JldHVybiBiJjIwNDg/KGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYSk6bnVsbDtjYXNlIDM6cmV0dXJuIEpmKGEpLE5lKGEpLGI9YS5lZmZlY3RUYWcsMCE9PShiJjY0KT90KFwiMjg1XCIpOnZvaWQgMCxhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGE7Y2FzZSA1OnJldHVybiBMZihhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIGI9YS5lZmZlY3RUYWcsYiYyMDQ4PyhhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGEpOm51bGw7Y2FzZSA0OnJldHVybiBKZihhKSxudWxsO2Nhc2UgMTA6cmV0dXJuIEJmKGEpLG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgVWc9e3JlYWRDb250ZXh0OkRmfSxWZz1YYi5SZWFjdEN1cnJlbnRPd25lcixXZz0xMDczNzQxODIyLFhnPTAsWWc9ITEsUj1udWxsLFM9bnVsbCxUPTAsWmc9LTEsJGc9ITEsVT1udWxsLGFoPSExLGJoPW51bGwsY2g9bnVsbCxTZz1udWxsO2Z1bmN0aW9uIGRoKCl7aWYobnVsbCE9PVIpZm9yKHZhciBhPVIucmV0dXJuO251bGwhPT1hOyl7dmFyIGI9YTtzd2l0Y2goYi50YWcpe2Nhc2UgMTp2YXIgYz1iLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWMmJnZvaWQgMCE9PWMmJk1lKGIpO2JyZWFrO2Nhc2UgMzpKZihiKTtOZShiKTticmVhaztjYXNlIDU6TGYoYik7YnJlYWs7Y2FzZSA0OkpmKGIpO2JyZWFrO2Nhc2UgMTA6QmYoYil9YT1hLnJldHVybn1TPW51bGw7VD0wO1pnPS0xOyRnPSExO1I9bnVsbH1mdW5jdGlvbiBTZigpe251bGwhPT1jaCYmKGJhLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrKGJoKSxjaCgpKX1cbmZ1bmN0aW9uIGVoKGEpe2Zvcig7Oyl7dmFyIGI9YS5hbHRlcm5hdGUsYz1hLnJldHVybixkPWEuc2libGluZztpZigwPT09KGEuZWZmZWN0VGFnJjEwMjQpKXtSPWE7YTp7dmFyIGU9YjtiPWE7dmFyIGY9VDt2YXIgZz1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMjpicmVhaztjYXNlIDE2OmJyZWFrO2Nhc2UgMTU6Y2FzZSAwOmJyZWFrO2Nhc2UgMTpMKGIudHlwZSkmJk1lKGIpO2JyZWFrO2Nhc2UgMzpKZihiKTtOZShiKTtnPWIuc3RhdGVOb2RlO2cucGVuZGluZ0NvbnRleHQmJihnLmNvbnRleHQ9Zy5wZW5kaW5nQ29udGV4dCxnLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1lfHxudWxsPT09ZS5jaGlsZClsZyhiKSxiLmVmZmVjdFRhZyY9LTM7QmcoYik7YnJlYWs7Y2FzZSA1OkxmKGIpO3ZhciBoPUhmKEdmLmN1cnJlbnQpO2Y9Yi50eXBlO2lmKG51bGwhPT1lJiZudWxsIT1iLnN0YXRlTm9kZSlGZyhlLGIsZixnLGgpLGUucmVmIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9XG4xMjgpO2Vsc2UgaWYoZyl7dmFyIGs9SGYoTi5jdXJyZW50KTtpZihsZyhiKSl7Zz1iO2U9Zy5zdGF0ZU5vZGU7dmFyIGw9Zy50eXBlLG09Zy5tZW1vaXplZFByb3BzLHE9aDtlW0dhXT1nO2VbSGFdPW07Zj12b2lkIDA7aD1sO3N3aXRjaChoKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOkcoXCJsb2FkXCIsZSk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGw9MDtsPGJiLmxlbmd0aDtsKyspRyhiYltsXSxlKTticmVhaztjYXNlIFwic291cmNlXCI6RyhcImVycm9yXCIsZSk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RyhcImVycm9yXCIsZSk7RyhcImxvYWRcIixlKTticmVhaztjYXNlIFwiZm9ybVwiOkcoXCJyZXNldFwiLGUpO0coXCJzdWJtaXRcIixlKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkcoXCJ0b2dnbGVcIixlKTticmVhaztjYXNlIFwiaW5wdXRcIjpCYyhlLG0pO0coXCJpbnZhbGlkXCIsZSk7eGUocSxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjplLl93cmFwcGVyU3RhdGU9XG57d2FzTXVsdGlwbGU6ISFtLm11bHRpcGxlfTtHKFwiaW52YWxpZFwiLGUpO3hlKHEsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoZShlLG0pLEcoXCJpbnZhbGlkXCIsZSkseGUocSxcIm9uQ2hhbmdlXCIpfXZlKGgsbSk7bD1udWxsO2ZvcihmIGluIG0pbS5oYXNPd25Qcm9wZXJ0eShmKSYmKGs9bVtmXSxcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2Ygaz9lLnRleHRDb250ZW50IT09ayYmKGw9W1wiY2hpbGRyZW5cIixrXSk6XCJudW1iZXJcIj09PXR5cGVvZiBrJiZlLnRleHRDb250ZW50IT09XCJcIitrJiYobD1bXCJjaGlsZHJlblwiLFwiXCIra10pOnNhLmhhc093blByb3BlcnR5KGYpJiZudWxsIT1rJiZ4ZShxLGYpKTtzd2l0Y2goaCl7Y2FzZSBcImlucHV0XCI6VmIoZSk7RmMoZSxtLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYihlKTtqZShlLG0pO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgbS5vbkNsaWNrJiZcbihlLm9uY2xpY2s9eWUpfWY9bDtnLnVwZGF0ZVF1ZXVlPWY7Zz1udWxsIT09Zj8hMDohMTtnJiZ6ZyhiKX1lbHNle209YjtlPWY7cT1nO2w9OT09PWgubm9kZVR5cGU/aDpoLm93bmVyRG9jdW1lbnQ7az09PWtlLmh0bWwmJihrPWxlKGUpKTtrPT09a2UuaHRtbD9cInNjcmlwdFwiPT09ZT8oZT1sLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksZS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixsPWUucmVtb3ZlQ2hpbGQoZS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBxLmlzP2w9bC5jcmVhdGVFbGVtZW50KGUse2lzOnEuaXN9KToobD1sLmNyZWF0ZUVsZW1lbnQoZSksXCJzZWxlY3RcIj09PWUmJnEubXVsdGlwbGUmJihsLm11bHRpcGxlPSEwKSk6bD1sLmNyZWF0ZUVsZW1lbnROUyhrLGUpO2U9bDtlW0dhXT1tO2VbSGFdPWc7QWcoZSxiLCExLCExKTtxPWU7bD1mO209Zzt2YXIgeD1oLHo9d2UobCxtKTtzd2l0Y2gobCl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpHKFwibG9hZFwiLFxucSk7aD1tO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihoPTA7aDxiYi5sZW5ndGg7aCsrKUcoYmJbaF0scSk7aD1tO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpHKFwiZXJyb3JcIixxKTtoPW07YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RyhcImVycm9yXCIscSk7RyhcImxvYWRcIixxKTtoPW07YnJlYWs7Y2FzZSBcImZvcm1cIjpHKFwicmVzZXRcIixxKTtHKFwic3VibWl0XCIscSk7aD1tO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RyhcInRvZ2dsZVwiLHEpO2g9bTticmVhaztjYXNlIFwiaW5wdXRcIjpCYyhxLG0pO2g9QWMocSxtKTtHKFwiaW52YWxpZFwiLHEpO3hlKHgsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwib3B0aW9uXCI6aD1lZShxLG0pO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpxLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhbS5tdWx0aXBsZX07aD1uKHt9LG0se3ZhbHVlOnZvaWQgMH0pO0coXCJpbnZhbGlkXCIscSk7eGUoeCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhlKHEsXG5tKTtoPWdlKHEsbSk7RyhcImludmFsaWRcIixxKTt4ZSh4LFwib25DaGFuZ2VcIik7YnJlYWs7ZGVmYXVsdDpoPW19dmUobCxoKTtrPXZvaWQgMDt2YXIgQj1sLFE9cSx2PWg7Zm9yKGsgaW4gdilpZih2Lmhhc093blByb3BlcnR5KGspKXt2YXIgcj12W2tdO1wic3R5bGVcIj09PWs/dGUoUSxyKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1rPyhyPXI/ci5fX2h0bWw6dm9pZCAwLG51bGwhPXImJm9lKFEscikpOlwiY2hpbGRyZW5cIj09PWs/XCJzdHJpbmdcIj09PXR5cGVvZiByPyhcInRleHRhcmVhXCIhPT1CfHxcIlwiIT09cikmJnBlKFEscik6XCJudW1iZXJcIj09PXR5cGVvZiByJiZwZShRLFwiXCIrcik6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWsmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1rJiZcImF1dG9Gb2N1c1wiIT09ayYmKHNhLmhhc093blByb3BlcnR5KGspP251bGwhPXImJnhlKHgsayk6bnVsbCE9ciYmeWMoUSxrLHIseikpfXN3aXRjaChsKXtjYXNlIFwiaW5wdXRcIjpWYihxKTtcbkZjKHEsbSwhMSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmIocSk7amUocSxtKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9bS52YWx1ZSYmcS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIremMobS52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpoPXE7aC5tdWx0aXBsZT0hIW0ubXVsdGlwbGU7cT1tLnZhbHVlO251bGwhPXE/ZmUoaCwhIW0ubXVsdGlwbGUscSwhMSk6bnVsbCE9bS5kZWZhdWx0VmFsdWUmJmZlKGgsISFtLm11bHRpcGxlLG0uZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBoLm9uQ2xpY2smJihxLm9uY2xpY2s9eWUpfShnPUJlKGYsZykpJiZ6ZyhiKTtiLnN0YXRlTm9kZT1lfW51bGwhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpfWVsc2UgbnVsbD09PWIuc3RhdGVOb2RlP3QoXCIxNjZcIik6dm9pZCAwO2JyZWFrO2Nhc2UgNjplJiZudWxsIT1iLnN0YXRlTm9kZT9HZyhlLGIsZS5tZW1vaXplZFByb3BzLGcpOihcInN0cmluZ1wiIT09XG50eXBlb2YgZyYmKG51bGw9PT1iLnN0YXRlTm9kZT90KFwiMTY2XCIpOnZvaWQgMCksZT1IZihHZi5jdXJyZW50KSxIZihOLmN1cnJlbnQpLGxnKGIpPyhnPWIsZj1nLnN0YXRlTm9kZSxlPWcubWVtb2l6ZWRQcm9wcyxmW0dhXT1nLChnPWYubm9kZVZhbHVlIT09ZSkmJnpnKGIpKTooZj1iLGc9KDk9PT1lLm5vZGVUeXBlP2U6ZS5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShnKSxnW0dhXT1iLGYuc3RhdGVOb2RlPWcpKTticmVhaztjYXNlIDExOmJyZWFrO2Nhc2UgMTM6Zz1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpe2IuZXhwaXJhdGlvblRpbWU9ZjtSPWI7YnJlYWsgYX1nPW51bGwhPT1nO2Y9bnVsbCE9PWUmJm51bGwhPT1lLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJiFnJiZmJiYoZT1lLmNoaWxkLnNpYmxpbmcsbnVsbCE9PWUmJihoPWIuZmlyc3RFZmZlY3QsbnVsbCE9PWg/KGIuZmlyc3RFZmZlY3Q9ZSxlLm5leHRFZmZlY3Q9aCk6KGIuZmlyc3RFZmZlY3Q9XG5iLmxhc3RFZmZlY3Q9ZSxlLm5leHRFZmZlY3Q9bnVsbCksZS5lZmZlY3RUYWc9OCkpO2lmKGchPT1mfHwwPT09KGIuZWZmZWN0VGFnJjEpJiZnKWIuZWZmZWN0VGFnfD00O2JyZWFrO2Nhc2UgNzpicmVhaztjYXNlIDg6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDQ6SmYoYik7QmcoYik7YnJlYWs7Y2FzZSAxMDpCZihiKTticmVhaztjYXNlIDk6YnJlYWs7Y2FzZSAxNDpicmVhaztjYXNlIDE3OkwoYi50eXBlKSYmTWUoYik7YnJlYWs7ZGVmYXVsdDp0KFwiMTU2XCIpfVI9bnVsbH1iPWE7aWYoMT09PVR8fDEhPT1iLmNoaWxkRXhwaXJhdGlvblRpbWUpe2c9MDtmb3IoZj1iLmNoaWxkO251bGwhPT1mOyllPWYuZXhwaXJhdGlvblRpbWUsaD1mLmNoaWxkRXhwaXJhdGlvblRpbWUsZT5nJiYoZz1lKSxoPmcmJihnPWgpLGY9Zi5zaWJsaW5nO2IuY2hpbGRFeHBpcmF0aW9uVGltZT1nfWlmKG51bGwhPT1SKXJldHVybiBSO251bGwhPT1jJiYwPT09KGMuZWZmZWN0VGFnJjEwMjQpJiYobnVsbD09PVxuYy5maXJzdEVmZmVjdCYmKGMuZmlyc3RFZmZlY3Q9YS5maXJzdEVmZmVjdCksbnVsbCE9PWEubGFzdEVmZmVjdCYmKG51bGwhPT1jLmxhc3RFZmZlY3QmJihjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxjLmxhc3RFZmZlY3Q9YS5sYXN0RWZmZWN0KSwxPGEuZWZmZWN0VGFnJiYobnVsbCE9PWMubGFzdEVmZmVjdD9jLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hOmMuZmlyc3RFZmZlY3Q9YSxjLmxhc3RFZmZlY3Q9YSkpfWVsc2V7YT1UZyhhLFQpO2lmKG51bGwhPT1hKXJldHVybiBhLmVmZmVjdFRhZyY9MTAyMyxhO251bGwhPT1jJiYoYy5maXJzdEVmZmVjdD1jLmxhc3RFZmZlY3Q9bnVsbCxjLmVmZmVjdFRhZ3w9MTAyNCl9aWYobnVsbCE9PWQpcmV0dXJuIGQ7aWYobnVsbCE9PWMpYT1jO2Vsc2UgYnJlYWt9cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBmaChhKXt2YXIgYj15ZyhhLmFsdGVybmF0ZSxhLFQpO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09YiYmKGI9ZWgoYSkpO1ZnLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1cbmZ1bmN0aW9uIGdoKGEsYil7WWc/dChcIjI0M1wiKTp2b2lkIDA7U2YoKTtZZz0hMDtWZy5jdXJyZW50RGlzcGF0Y2hlcj1VZzt2YXIgYz1hLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uO2lmKGMhPT1UfHxhIT09U3x8bnVsbD09PVIpZGgoKSxTPWEsVD1jLFI9WmUoUy5jdXJyZW50LG51bGwsVCksYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDt2YXIgZD0hMTtkb3t0cnl7aWYoYilmb3IoO251bGwhPT1SJiYhaGgoKTspUj1maChSKTtlbHNlIGZvcig7bnVsbCE9PVI7KVI9ZmgoUil9Y2F0Y2goQil7aWYoemY9eWY9eGY9bnVsbCxudWxsPT09UilkPSEwLFFnKEIpO2Vsc2V7bnVsbD09PVI/dChcIjI3MVwiKTp2b2lkIDA7dmFyIGU9UixmPWUucmV0dXJuO2lmKG51bGw9PT1mKWQ9ITAsUWcoQik7ZWxzZXthOnt2YXIgZz1hLGg9ZixrPWUsbD1CO2Y9VDtrLmVmZmVjdFRhZ3w9MTAyNDtrLmZpcnN0RWZmZWN0PWsubGFzdEVmZmVjdD1udWxsO2lmKG51bGwhPT1sJiZcIm9iamVjdFwiPT09XG50eXBlb2YgbCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGwudGhlbil7dmFyIG09bDtsPWg7dmFyIHE9LTEseD0tMTtkb3tpZigxMz09PWwudGFnKXt2YXIgej1sLmFsdGVybmF0ZTtpZihudWxsIT09eiYmKHo9ei5tZW1vaXplZFN0YXRlLG51bGwhPT16KSl7eD0xMCooMTA3Mzc0MTgyMi16LnRpbWVkT3V0QXQpO2JyZWFrfXo9bC5wZW5kaW5nUHJvcHMubWF4RHVyYXRpb247aWYoXCJudW1iZXJcIj09PXR5cGVvZiB6KWlmKDA+PXopcT0wO2Vsc2UgaWYoLTE9PT1xfHx6PHEpcT16fWw9bC5yZXR1cm59d2hpbGUobnVsbCE9PWwpO2w9aDtkb3tpZih6PTEzPT09bC50YWcpej12b2lkIDA9PT1sLm1lbW9pemVkUHJvcHMuZmFsbGJhY2s/ITE6bnVsbD09PWwubWVtb2l6ZWRTdGF0ZTtpZih6KXtoPWloLmJpbmQobnVsbCxnLGwsaywwPT09KGwubW9kZSYxKT8xMDczNzQxODIzOmYpO20udGhlbihoLGgpO2lmKDA9PT0obC5tb2RlJjEpKXtsLmVmZmVjdFRhZ3w9NjQ7ay5lZmZlY3RUYWcmPS0xOTU3O1xuMT09PWsudGFnJiZudWxsPT09ay5hbHRlcm5hdGUmJihrLnRhZz0xNyk7ay5leHBpcmF0aW9uVGltZT1mO2JyZWFrIGF9LTE9PT1xP2c9MTA3Mzc0MTgyMzooLTE9PT14JiYoeD0xMCooMTA3Mzc0MTgyMi1oZihnLGYpKS01RTMpLGc9eCtxKTswPD1nJiZaZzxnJiYoWmc9Zyk7bC5lZmZlY3RUYWd8PTIwNDg7bC5leHBpcmF0aW9uVGltZT1mO2JyZWFrIGF9bD1sLnJldHVybn13aGlsZShudWxsIT09bCk7bD1FcnJvcigobWMoay50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcIiBzdXNwZW5kZWQgd2hpbGUgcmVuZGVyaW5nLCBidXQgbm8gZmFsbGJhY2sgVUkgd2FzIHNwZWNpZmllZC5cXG5cXG5BZGQgYSA8U3VzcGVuc2UgZmFsbGJhY2s9Li4uPiBjb21wb25lbnQgaGlnaGVyIGluIHRoZSB0cmVlIHRvIHByb3ZpZGUgYSBsb2FkaW5nIGluZGljYXRvciBvciBwbGFjZWhvbGRlciB0byBkaXNwbGF5LlwiK25jKGspKX0kZz0hMDtsPXZmKGwsayk7Zz1oO2Rve3N3aXRjaChnLnRhZyl7Y2FzZSAzOms9XG5sO2cuZWZmZWN0VGFnfD0yMDQ4O2cuZXhwaXJhdGlvblRpbWU9ZjtmPVBnKGcsayxmKTtwZihnLGYpO2JyZWFrIGE7Y2FzZSAxOmlmKGs9bCxoPWcudHlwZSxtPWcuc3RhdGVOb2RlLDA9PT0oZy5lZmZlY3RUYWcmNjQpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGguZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09bSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIG0uY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09U2d8fCFTZy5oYXMobSkpKSl7Zy5lZmZlY3RUYWd8PTIwNDg7Zy5leHBpcmF0aW9uVGltZT1mO2Y9UmcoZyxrLGYpO3BmKGcsZik7YnJlYWsgYX19Zz1nLnJldHVybn13aGlsZShudWxsIT09Zyl9Uj1laChlKTtjb250aW51ZX19fWJyZWFrfXdoaWxlKDEpO1lnPSExO3pmPXlmPXhmPVZnLmN1cnJlbnREaXNwYXRjaGVyPW51bGw7aWYoZClTPW51bGwsYS5maW5pc2hlZFdvcms9bnVsbDtlbHNlIGlmKG51bGwhPT1SKWEuZmluaXNoZWRXb3JrPW51bGw7ZWxzZXtkPWEuY3VycmVudC5hbHRlcm5hdGU7XG5udWxsPT09ZD90KFwiMjgxXCIpOnZvaWQgMDtTPW51bGw7aWYoJGcpe2U9YS5sYXRlc3RQZW5kaW5nVGltZTtmPWEubGF0ZXN0U3VzcGVuZGVkVGltZTtnPWEubGF0ZXN0UGluZ2VkVGltZTtpZigwIT09ZSYmZTxjfHwwIT09ZiYmZjxjfHwwIT09ZyYmZzxjKXtnZihhLGMpO2poKGEsZCxjLGEuZXhwaXJhdGlvblRpbWUsLTEpO3JldHVybn1pZighYS5kaWRFcnJvciYmYil7YS5kaWRFcnJvcj0hMDtjPWEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249YztiPWEuZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMztqaChhLGQsYyxiLC0xKTtyZXR1cm59fWImJi0xIT09Wmc/KGdmKGEsYyksYj0xMCooMTA3Mzc0MTgyMi1oZihhLGMpKSxiPFpnJiYoWmc9YiksYj0xMCooMTA3Mzc0MTgyMi1RZigpKSxiPVpnLWIsamgoYSxkLGMsYS5leHBpcmF0aW9uVGltZSwwPmI/MDpiKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWMsYS5maW5pc2hlZFdvcms9ZCl9fVxuZnVuY3Rpb24gSmcoYSxiKXtmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtzd2l0Y2goYy50YWcpe2Nhc2UgMTp2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09U2d8fCFTZy5oYXMoZCkpKXthPXZmKGIsYSk7YT1SZyhjLGEsMTA3Mzc0MTgyMyk7b2YoYyxhKTtUZihjLDEwNzM3NDE4MjMpO3JldHVybn1icmVhaztjYXNlIDM6YT12ZihiLGEpO2E9UGcoYyxhLDEwNzM3NDE4MjMpO29mKGMsYSk7VGYoYywxMDczNzQxODIzKTtyZXR1cm59Yz1jLnJldHVybn0zPT09YS50YWcmJihjPXZmKGIsYSksYz1QZyhhLGMsMTA3Mzc0MTgyMyksb2YoYSxjKSxUZihhLDEwNzM3NDE4MjMpKX1cbmZ1bmN0aW9uIFJmKGEsYil7MCE9PVhnP2E9WGc6WWc/YT1haD8xMDczNzQxODIzOlQ6Yi5tb2RlJjE/KGE9a2g/MTA3Mzc0MTgyMi0xMCooKCgxMDczNzQxODIyLWErMTUpLzEwfDApKzEpOjEwNzM3NDE4MjItMjUqKCgoMTA3Mzc0MTgyMi1hKzUwMCkvMjV8MCkrMSksbnVsbCE9PVMmJmE9PT1UJiYtLWEpOmE9MTA3Mzc0MTgyMztraCYmKDA9PT1saHx8YTxsaCkmJihsaD1hKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIGloKGEsYixjLGQpe3ZhciBlPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lO3ZhciBmPWEubGF0ZXN0U3VzcGVuZGVkVGltZTtpZigwIT09ZSYmZDw9ZSYmZD49Zil7Zj1lPWQ7YS5kaWRFcnJvcj0hMTt2YXIgZz1hLmxhdGVzdFBpbmdlZFRpbWU7aWYoMD09PWd8fGc+ZilhLmxhdGVzdFBpbmdlZFRpbWU9ZjtmZihmLGEpfWVsc2UgZT1RZigpLGU9UmYoZSxiKSxlZihhLGUpOzAhPT0oYi5tb2RlJjEpJiZhPT09UyYmVD09PWQmJihTPW51bGwpO21oKGIsZSk7MD09PShiLm1vZGUmMSkmJihtaChjLGUpLDE9PT1jLnRhZyYmbnVsbCE9PWMuc3RhdGVOb2RlJiYoYj1tZihlKSxiLnRhZz0yLG9mKGMsYikpKTtjPWEuZXhwaXJhdGlvblRpbWU7MCE9PWMmJm5oKGEsYyl9XG5mdW5jdGlvbiBtaChhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGQ9YS5yZXR1cm4sZT1udWxsO2lmKG51bGw9PT1kJiYzPT09YS50YWcpZT1hLnN0YXRlTm9kZTtlbHNlIGZvcig7bnVsbCE9PWQ7KXtjPWQuYWx0ZXJuYXRlO2QuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoZC5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO251bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09ZC5yZXR1cm4mJjM9PT1kLnRhZyl7ZT1kLnN0YXRlTm9kZTticmVha31kPWQucmV0dXJufXJldHVybiBlfVxuZnVuY3Rpb24gVGYoYSxiKXthPW1oKGEsYik7bnVsbCE9PWEmJighWWcmJjAhPT1UJiZiPlQmJmRoKCksZWYoYSxiKSxZZyYmIWFoJiZTPT09YXx8bmgoYSxhLmV4cGlyYXRpb25UaW1lKSxvaD5waCYmKG9oPTAsdChcIjE4NVwiKSkpfWZ1bmN0aW9uIHFoKGEsYixjLGQsZSl7dmFyIGY9WGc7WGc9MTA3Mzc0MTgyMzt0cnl7cmV0dXJuIGEoYixjLGQsZSl9ZmluYWxseXtYZz1mfX12YXIgcmg9bnVsbCxWPW51bGwsc2g9MCx0aD12b2lkIDAsVz0hMSx1aD1udWxsLFg9MCxsaD0wLHZoPSExLHdoPW51bGwsWj0hMSx4aD0hMSxraD0hMSx5aD1udWxsLHpoPWJhLnVuc3RhYmxlX25vdygpLEFoPTEwNzM3NDE4MjItKHpoLzEwfDApLEJoPUFoLHBoPTUwLG9oPTAsQ2g9bnVsbDtmdW5jdGlvbiBEaCgpe0FoPTEwNzM3NDE4MjItKChiYS51bnN0YWJsZV9ub3coKS16aCkvMTB8MCl9XG5mdW5jdGlvbiBFaChhLGIpe2lmKDAhPT1zaCl7aWYoYjxzaClyZXR1cm47bnVsbCE9PXRoJiZiYS51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayh0aCl9c2g9YjthPWJhLnVuc3RhYmxlX25vdygpLXpoO3RoPWJhLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soRmgse3RpbWVvdXQ6MTAqKDEwNzM3NDE4MjItYiktYX0pfWZ1bmN0aW9uIGpoKGEsYixjLGQsZSl7YS5leHBpcmF0aW9uVGltZT1kOzAhPT1lfHxoaCgpPzA8ZSYmKGEudGltZW91dEhhbmRsZT1EZShHaC5iaW5kKG51bGwsYSxiLGMpLGUpKTooYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9YyxhLmZpbmlzaGVkV29yaz1iKX1mdW5jdGlvbiBHaChhLGIsYyl7YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9YzthLmZpbmlzaGVkV29yaz1iO0RoKCk7Qmg9QWg7SGgoYSxjKX1mdW5jdGlvbiBRZigpe2lmKFcpcmV0dXJuIEJoO0loKCk7aWYoMD09PVh8fDE9PT1YKURoKCksQmg9QWg7cmV0dXJuIEJofVxuZnVuY3Rpb24gbmgoYSxiKXtudWxsPT09YS5uZXh0U2NoZWR1bGVkUm9vdD8oYS5leHBpcmF0aW9uVGltZT1iLG51bGw9PT1WPyhyaD1WPWEsYS5uZXh0U2NoZWR1bGVkUm9vdD1hKTooVj1WLm5leHRTY2hlZHVsZWRSb290PWEsVi5uZXh0U2NoZWR1bGVkUm9vdD1yaCkpOmI+YS5leHBpcmF0aW9uVGltZSYmKGEuZXhwaXJhdGlvblRpbWU9Yik7V3x8KFo/eGgmJih1aD1hLFg9MTA3Mzc0MTgyMyxKaChhLDEwNzM3NDE4MjMsITEpKToxMDczNzQxODIzPT09Yj9LaCgxMDczNzQxODIzLCExKTpFaChhLGIpKX1cbmZ1bmN0aW9uIEloKCl7dmFyIGE9MCxiPW51bGw7aWYobnVsbCE9PVYpZm9yKHZhciBjPVYsZD1yaDtudWxsIT09ZDspe3ZhciBlPWQuZXhwaXJhdGlvblRpbWU7aWYoMD09PWUpe251bGw9PT1jfHxudWxsPT09Vj90KFwiMjQ0XCIpOnZvaWQgMDtpZihkPT09ZC5uZXh0U2NoZWR1bGVkUm9vdCl7cmg9Vj1kLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBpZihkPT09cmgpcmg9ZT1kLm5leHRTY2hlZHVsZWRSb290LFYubmV4dFNjaGVkdWxlZFJvb3Q9ZSxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZWxzZSBpZihkPT09Vil7Vj1jO1YubmV4dFNjaGVkdWxlZFJvb3Q9cmg7ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgYy5uZXh0U2NoZWR1bGVkUm9vdD1kLm5leHRTY2hlZHVsZWRSb290LGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtkPWMubmV4dFNjaGVkdWxlZFJvb3R9ZWxzZXtlPmEmJihhPWUsYj1kKTtpZihkPT09VilicmVhaztpZigxMDczNzQxODIzPT09XG5hKWJyZWFrO2M9ZDtkPWQubmV4dFNjaGVkdWxlZFJvb3R9fXVoPWI7WD1hfXZhciBMaD0hMTtmdW5jdGlvbiBoaCgpe3JldHVybiBMaD8hMDpiYS51bnN0YWJsZV9zaG91bGRZaWVsZCgpP0xoPSEwOiExfWZ1bmN0aW9uIEZoKCl7dHJ5e2lmKCFoaCgpJiZudWxsIT09cmgpe0RoKCk7dmFyIGE9cmg7ZG97dmFyIGI9YS5leHBpcmF0aW9uVGltZTswIT09YiYmQWg8PWImJihhLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPUFoKTthPWEubmV4dFNjaGVkdWxlZFJvb3R9d2hpbGUoYSE9PXJoKX1LaCgwLCEwKX1maW5hbGx5e0xoPSExfX1cbmZ1bmN0aW9uIEtoKGEsYil7SWgoKTtpZihiKWZvcihEaCgpLEJoPUFoO251bGwhPT11aCYmMCE9PVgmJmE8PVgmJiEoTGgmJkFoPlgpOylKaCh1aCxYLEFoPlgpLEloKCksRGgoKSxCaD1BaDtlbHNlIGZvcig7bnVsbCE9PXVoJiYwIT09WCYmYTw9WDspSmgodWgsWCwhMSksSWgoKTtiJiYoc2g9MCx0aD1udWxsKTswIT09WCYmRWgodWgsWCk7b2g9MDtDaD1udWxsO2lmKG51bGwhPT15aClmb3IoYT15aCx5aD1udWxsLGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTt0cnl7Yy5fb25Db21wbGV0ZSgpfWNhdGNoKGQpe3ZofHwodmg9ITAsd2g9ZCl9fWlmKHZoKXRocm93IGE9d2gsd2g9bnVsbCx2aD0hMSxhO31mdW5jdGlvbiBIaChhLGIpe1c/dChcIjI1M1wiKTp2b2lkIDA7dWg9YTtYPWI7SmgoYSxiLCExKTtLaCgxMDczNzQxODIzLCExKX1cbmZ1bmN0aW9uIEpoKGEsYixjKXtXP3QoXCIyNDVcIik6dm9pZCAwO1c9ITA7aWYoYyl7dmFyIGQ9YS5maW5pc2hlZFdvcms7bnVsbCE9PWQ/TWgoYSxkLGIpOihhLmZpbmlzaGVkV29yaz1udWxsLGQ9YS50aW1lb3V0SGFuZGxlLC0xIT09ZCYmKGEudGltZW91dEhhbmRsZT0tMSxFZShkKSksZ2goYSxjKSxkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kJiYoaGgoKT9hLmZpbmlzaGVkV29yaz1kOk1oKGEsZCxiKSkpfWVsc2UgZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZD9NaChhLGQsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1hLnRpbWVvdXRIYW5kbGUsLTEhPT1kJiYoYS50aW1lb3V0SGFuZGxlPS0xLEVlKGQpKSxnaChhLGMpLGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQmJk1oKGEsZCxiKSk7Vz0hMX1cbmZ1bmN0aW9uIE1oKGEsYixjKXt2YXIgZD1hLmZpcnN0QmF0Y2g7aWYobnVsbCE9PWQmJmQuX2V4cGlyYXRpb25UaW1lPj1jJiYobnVsbD09PXloP3loPVtkXTp5aC5wdXNoKGQpLGQuX2RlZmVyKSl7YS5maW5pc2hlZFdvcms9YjthLmV4cGlyYXRpb25UaW1lPTA7cmV0dXJufWEuZmluaXNoZWRXb3JrPW51bGw7YT09PUNoP29oKys6KENoPWEsb2g9MCk7YWg9WWc9ITA7YS5jdXJyZW50PT09Yj90KFwiMTc3XCIpOnZvaWQgMDtjPWEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOzA9PT1jP3QoXCIyNjFcIik6dm9pZCAwO2EucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPTA7ZD1iLmV4cGlyYXRpb25UaW1lO3ZhciBlPWIuY2hpbGRFeHBpcmF0aW9uVGltZTtkPWU+ZD9lOmQ7YS5kaWRFcnJvcj0hMTswPT09ZD8oYS5lYXJsaWVzdFBlbmRpbmdUaW1lPTAsYS5sYXRlc3RQZW5kaW5nVGltZT0wLGEuZWFybGllc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RQaW5nZWRUaW1lPVxuMCk6KGU9YS5sYXRlc3RQZW5kaW5nVGltZSwwIT09ZSYmKGU+ZD9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZT0wOmEuZWFybGllc3RQZW5kaW5nVGltZT5kJiYoYS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWUpKSxlPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lLDA9PT1lP2VmKGEsZCk6ZDxhLmxhdGVzdFN1c3BlbmRlZFRpbWU/KGEuZWFybGllc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RQaW5nZWRUaW1lPTAsZWYoYSxkKSk6ZD5lJiZlZihhLGQpKTtmZigwLGEpO1ZnLmN1cnJlbnQ9bnVsbDsxPGIuZWZmZWN0VGFnP251bGwhPT1iLmxhc3RFZmZlY3Q/KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWIsZD1iLmZpcnN0RWZmZWN0KTpkPWI6ZD1iLmZpcnN0RWZmZWN0O3plPUhkO2U9VGQoKTtpZihVZChlKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gZSl2YXIgZj17c3RhcnQ6ZS5zZWxlY3Rpb25TdGFydCxcbmVuZDplLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntmPShmPWUub3duZXJEb2N1bWVudCkmJmYuZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgZz1mLmdldFNlbGVjdGlvbiYmZi5nZXRTZWxlY3Rpb24oKTtpZihnJiYwIT09Zy5yYW5nZUNvdW50KXtmPWcuYW5jaG9yTm9kZTt2YXIgaD1nLmFuY2hvck9mZnNldCxrPWcuZm9jdXNOb2RlO2c9Zy5mb2N1c09mZnNldDt0cnl7Zi5ub2RlVHlwZSxrLm5vZGVUeXBlfWNhdGNoKGRiKXtmPW51bGw7YnJlYWsgYX12YXIgbD0wLG09LTEscT0tMSx4PTAsej0wLEI9ZSxRPW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgdjs7KXtCIT09Znx8MCE9PWgmJjMhPT1CLm5vZGVUeXBlfHwobT1sK2gpO0IhPT1rfHwwIT09ZyYmMyE9PUIubm9kZVR5cGV8fChxPWwrZyk7Mz09PUIubm9kZVR5cGUmJihsKz1CLm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0odj1CLmZpcnN0Q2hpbGQpKWJyZWFrO1E9QjtCPXZ9Zm9yKDs7KXtpZihCPT09ZSlicmVhayBiO1E9PT1mJiZcbisreD09PWgmJihtPWwpO1E9PT1rJiYrK3o9PT1nJiYocT1sKTtpZihudWxsIT09KHY9Qi5uZXh0U2libGluZykpYnJlYWs7Qj1RO1E9Qi5wYXJlbnROb2RlfUI9dn1mPS0xPT09bXx8LTE9PT1xP251bGw6e3N0YXJ0Om0sZW5kOnF9fWVsc2UgZj1udWxsfWY9Znx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgZj1udWxsO0FlPXtmb2N1c2VkRWxlbTplLHNlbGVjdGlvblJhbmdlOmZ9O0hkPSExO2ZvcihVPWQ7bnVsbCE9PVU7KXtlPSExO2Y9dm9pZCAwO3RyeXtmb3IoO251bGwhPT1VOyl7aWYoVS5lZmZlY3RUYWcmMjU2KWE6e3ZhciByPVUuYWx0ZXJuYXRlO2g9VTtzd2l0Y2goaC50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6YnJlYWsgYTtjYXNlIDE6aWYoaC5lZmZlY3RUYWcmMjU2JiZudWxsIT09cil7dmFyIHU9ci5tZW1vaXplZFByb3BzLHk9ci5tZW1vaXplZFN0YXRlLFk9aC5zdGF0ZU5vZGUsVGg9WS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShoLmVsZW1lbnRUeXBlPT09aC50eXBlP1xudTpPKGgudHlwZSx1KSx5KTtZLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPVRofWJyZWFrIGE7Y2FzZSAzOmNhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6YnJlYWsgYTtkZWZhdWx0OnQoXCIxNjNcIil9fVU9VS5uZXh0RWZmZWN0fX1jYXRjaChkYil7ZT0hMCxmPWRifWUmJihudWxsPT09VT90KFwiMTc4XCIpOnZvaWQgMCxKZyhVLGYpLG51bGwhPT1VJiYoVT1VLm5leHRFZmZlY3QpKX1mb3IoVT1kO251bGwhPT1VOyl7cj0hMTt1PXZvaWQgMDt0cnl7Zm9yKDtudWxsIT09VTspe3ZhciB3PVUuZWZmZWN0VGFnO3cmMTYmJnBlKFUuc3RhdGVOb2RlLFwiXCIpO2lmKHcmMTI4KXt2YXIgQz1VLmFsdGVybmF0ZTtpZihudWxsIT09Qyl7dmFyIHA9Qy5yZWY7bnVsbCE9PXAmJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgcD9wKG51bGwpOnAuY3VycmVudD1udWxsKX19c3dpdGNoKHcmMTQpe2Nhc2UgMjpOZyhVKTtVLmVmZmVjdFRhZyY9LTM7YnJlYWs7Y2FzZSA2Ok5nKFUpO1UuZWZmZWN0VGFnJj1cbi0zO09nKFUuYWx0ZXJuYXRlLFUpO2JyZWFrO2Nhc2UgNDpPZyhVLmFsdGVybmF0ZSxVKTticmVhaztjYXNlIDg6eT1VLExnKHkpLHkucmV0dXJuPW51bGwseS5jaGlsZD1udWxsLHkuYWx0ZXJuYXRlJiYoeS5hbHRlcm5hdGUuY2hpbGQ9bnVsbCx5LmFsdGVybmF0ZS5yZXR1cm49bnVsbCl9VT1VLm5leHRFZmZlY3R9fWNhdGNoKGRiKXtyPSEwLHU9ZGJ9ciYmKG51bGw9PT1VP3QoXCIxNzhcIik6dm9pZCAwLEpnKFUsdSksbnVsbCE9PVUmJihVPVUubmV4dEVmZmVjdCkpfXA9QWU7Qz1UZCgpO3c9cC5mb2N1c2VkRWxlbTt1PXAuc2VsZWN0aW9uUmFuZ2U7aWYoQyE9PXcmJncmJncub3duZXJEb2N1bWVudCYmU2Qody5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCx3KSl7bnVsbCE9PXUmJlVkKHcpJiYoQz11LnN0YXJ0LHA9dS5lbmQsdm9pZCAwPT09cCYmKHA9QyksXCJzZWxlY3Rpb25TdGFydFwiaW4gdz8ody5zZWxlY3Rpb25TdGFydD1DLHcuc2VsZWN0aW9uRW5kPU1hdGgubWluKHAsXG53LnZhbHVlLmxlbmd0aCkpOihwPShDPXcub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZDLmRlZmF1bHRWaWV3fHx3aW5kb3cscC5nZXRTZWxlY3Rpb24mJihwPXAuZ2V0U2VsZWN0aW9uKCkseT13LnRleHRDb250ZW50Lmxlbmd0aCxyPU1hdGgubWluKHUuc3RhcnQseSksdT12b2lkIDA9PT11LmVuZD9yOk1hdGgubWluKHUuZW5kLHkpLCFwLmV4dGVuZCYmcj51JiYoeT11LHU9cixyPXkpLHk9UmQodyxyKSxZPVJkKHcsdSkseSYmWSYmKDEhPT1wLnJhbmdlQ291bnR8fHAuYW5jaG9yTm9kZSE9PXkubm9kZXx8cC5hbmNob3JPZmZzZXQhPT15Lm9mZnNldHx8cC5mb2N1c05vZGUhPT1ZLm5vZGV8fHAuZm9jdXNPZmZzZXQhPT1ZLm9mZnNldCkmJihDPUMuY3JlYXRlUmFuZ2UoKSxDLnNldFN0YXJ0KHkubm9kZSx5Lm9mZnNldCkscC5yZW1vdmVBbGxSYW5nZXMoKSxyPnU/KHAuYWRkUmFuZ2UoQykscC5leHRlbmQoWS5ub2RlLFkub2Zmc2V0KSk6KEMuc2V0RW5kKFkubm9kZSxZLm9mZnNldCksXG5wLmFkZFJhbmdlKEMpKSkpKSk7Qz1bXTtmb3IocD13O3A9cC5wYXJlbnROb2RlOykxPT09cC5ub2RlVHlwZSYmQy5wdXNoKHtlbGVtZW50OnAsbGVmdDpwLnNjcm9sbExlZnQsdG9wOnAuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIHcuZm9jdXMmJncuZm9jdXMoKTtmb3Iodz0wO3c8Qy5sZW5ndGg7dysrKXA9Q1t3XSxwLmVsZW1lbnQuc2Nyb2xsTGVmdD1wLmxlZnQscC5lbGVtZW50LnNjcm9sbFRvcD1wLnRvcH1BZT1udWxsO0hkPSEhemU7emU9bnVsbDthLmN1cnJlbnQ9Yjtmb3IoVT1kO251bGwhPT1VOyl7ZD0hMTt3PXZvaWQgMDt0cnl7Zm9yKEM9YztudWxsIT09VTspe3ZhciBGYj1VLmVmZmVjdFRhZztpZihGYiYzNil7dmFyIEdiPVUuYWx0ZXJuYXRlO3A9VTtyPUM7c3dpdGNoKHAudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmJyZWFrO2Nhc2UgMTp2YXIgd2M9cC5zdGF0ZU5vZGU7aWYocC5lZmZlY3RUYWcmNClpZihudWxsPT09R2Ipd2MuY29tcG9uZW50RGlkTW91bnQoKTtcbmVsc2V7dmFyIGNpPXAuZWxlbWVudFR5cGU9PT1wLnR5cGU/R2IubWVtb2l6ZWRQcm9wczpPKHAudHlwZSxHYi5tZW1vaXplZFByb3BzKTt3Yy5jb21wb25lbnREaWRVcGRhdGUoY2ksR2IubWVtb2l6ZWRTdGF0ZSx3Yy5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9dmFyIENnPXAudXBkYXRlUXVldWU7bnVsbCE9PUNnJiZ0ZihwLENnLHdjLHIpO2JyZWFrO2Nhc2UgMzp2YXIgRGc9cC51cGRhdGVRdWV1ZTtpZihudWxsIT09RGcpe3U9bnVsbDtpZihudWxsIT09cC5jaGlsZClzd2l0Y2gocC5jaGlsZC50YWcpe2Nhc2UgNTp1PXAuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTp1PXAuY2hpbGQuc3RhdGVOb2RlfXRmKHAsRGcsdSxyKX1icmVhaztjYXNlIDU6dmFyIGRpPXAuc3RhdGVOb2RlO251bGw9PT1HYiYmcC5lZmZlY3RUYWcmNCYmQmUocC50eXBlLHAubWVtb2l6ZWRQcm9wcykmJmRpLmZvY3VzKCk7YnJlYWs7Y2FzZSA2OmJyZWFrO2Nhc2UgNDpicmVhaztcbmNhc2UgMTI6YnJlYWs7Y2FzZSAxMzpicmVhaztjYXNlIDE3OmJyZWFrO2RlZmF1bHQ6dChcIjE2M1wiKX19aWYoRmImMTI4KXt2YXIgSWM9VS5yZWY7aWYobnVsbCE9PUljKXt2YXIgRWc9VS5zdGF0ZU5vZGU7c3dpdGNoKFUudGFnKXtjYXNlIDU6dmFyIGNlPUVnO2JyZWFrO2RlZmF1bHQ6Y2U9RWd9XCJmdW5jdGlvblwiPT09dHlwZW9mIEljP0ljKGNlKTpJYy5jdXJyZW50PWNlfX1VPVUubmV4dEVmZmVjdH19Y2F0Y2goZGIpe2Q9ITAsdz1kYn1kJiYobnVsbD09PVU/dChcIjE3OFwiKTp2b2lkIDAsSmcoVSx3KSxudWxsIT09VSYmKFU9VS5uZXh0RWZmZWN0KSl9WWc9YWg9ITE7XCJmdW5jdGlvblwiPT09dHlwZW9mIFNlJiZTZShiLnN0YXRlTm9kZSk7RmI9Yi5leHBpcmF0aW9uVGltZTtiPWIuY2hpbGRFeHBpcmF0aW9uVGltZTtiPWI+RmI/YjpGYjswPT09YiYmKFNnPW51bGwpO2EuZXhwaXJhdGlvblRpbWU9YjthLmZpbmlzaGVkV29yaz1udWxsfVxuZnVuY3Rpb24gUWcoYSl7bnVsbD09PXVoP3QoXCIyNDZcIik6dm9pZCAwO3VoLmV4cGlyYXRpb25UaW1lPTA7dmh8fCh2aD0hMCx3aD1hKX1mdW5jdGlvbiBOaChhLGIpe3ZhciBjPVo7Wj0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXsoWj1jKXx8V3x8S2goMTA3Mzc0MTgyMywhMSl9fWZ1bmN0aW9uIE9oKGEsYil7aWYoWiYmIXhoKXt4aD0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXt4aD0hMX19cmV0dXJuIGEoYil9ZnVuY3Rpb24gUGgoYSxiLGMpe2lmKGtoKXJldHVybiBhKGIsYyk7Wnx8V3x8MD09PWxofHwoS2gobGgsITEpLGxoPTApO3ZhciBkPWtoLGU9WjtaPWtoPSEwO3RyeXtyZXR1cm4gYShiLGMpfWZpbmFsbHl7a2g9ZCwoWj1lKXx8V3x8S2goMTA3Mzc0MTgyMywhMSl9fVxuZnVuY3Rpb24gUWgoYSxiLGMsZCxlKXt2YXIgZj1iLmN1cnJlbnQ7YTppZihjKXtjPWMuX3JlYWN0SW50ZXJuYWxGaWJlcjtiOnsyPT09a2QoYykmJjE9PT1jLnRhZz92b2lkIDA6dChcIjE3MFwiKTt2YXIgZz1jO2Rve3N3aXRjaChnLnRhZyl7Y2FzZSAzOmc9Zy5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihMKGcudHlwZSkpe2c9Zy5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn19Zz1nLnJldHVybn13aGlsZShudWxsIT09Zyk7dChcIjE3MVwiKTtnPXZvaWQgMH1pZigxPT09Yy50YWcpe3ZhciBoPWMudHlwZTtpZihMKGgpKXtjPVBlKGMsaCxnKTticmVhayBhfX1jPWd9ZWxzZSBjPUplO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9ZTtlPW1mKGQpO2UucGF5bG9hZD17ZWxlbWVudDphfTtiPXZvaWQgMD09PWI/bnVsbDpiO251bGwhPT1iJiYoZS5jYWxsYmFjaz1iKTtcblNmKCk7b2YoZixlKTtUZihmLGQpO3JldHVybiBkfWZ1bmN0aW9uIFJoKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPVFmKCk7ZT1SZihmLGUpO3JldHVybiBRaChhLGIsYyxlLGQpfWZ1bmN0aW9uIFNoKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gVWgoYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjokYixrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbkNiPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6RGMoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPUxhKGQpO2U/dm9pZCAwOnQoXCI5MFwiKTtXYihkKTtEYyhkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aWUoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJmZlKGEsISFjLm11bHRpcGxlLGIsITEpfX07XG5mdW5jdGlvbiBWaChhKXt2YXIgYj0xMDczNzQxODIyLTI1KigoKDEwNzM3NDE4MjItUWYoKSs1MDApLzI1fDApKzEpO2I+PVdnJiYoYj1XZy0xKTt0aGlzLl9leHBpcmF0aW9uVGltZT1XZz1iO3RoaXMuX3Jvb3Q9YTt0aGlzLl9jYWxsYmFja3M9dGhpcy5fbmV4dD1udWxsO3RoaXMuX2hhc0NoaWxkcmVuPXRoaXMuX2RpZENvbXBsZXRlPSExO3RoaXMuX2NoaWxkcmVuPW51bGw7dGhpcy5fZGVmZXI9ITB9VmgucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhKXt0aGlzLl9kZWZlcj92b2lkIDA6dChcIjI1MFwiKTt0aGlzLl9oYXNDaGlsZHJlbj0hMDt0aGlzLl9jaGlsZHJlbj1hO3ZhciBiPXRoaXMuX3Jvb3QuX2ludGVybmFsUm9vdCxjPXRoaXMuX2V4cGlyYXRpb25UaW1lLGQ9bmV3IFdoO1FoKGEsYixudWxsLGMsZC5fb25Db21taXQpO3JldHVybiBkfTtcblZoLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGEpe2lmKHRoaXMuX2RpZENvbXBsZXRlKWEoKTtlbHNle3ZhciBiPXRoaXMuX2NhbGxiYWNrcztudWxsPT09YiYmKGI9dGhpcy5fY2FsbGJhY2tzPVtdKTtiLnB1c2goYSl9fTtcblZoLnByb3RvdHlwZS5jb21taXQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9yb290Ll9pbnRlcm5hbFJvb3QsYj1hLmZpcnN0QmF0Y2g7dGhpcy5fZGVmZXImJm51bGwhPT1iP3ZvaWQgMDp0KFwiMjUxXCIpO2lmKHRoaXMuX2hhc0NoaWxkcmVuKXt2YXIgYz10aGlzLl9leHBpcmF0aW9uVGltZTtpZihiIT09dGhpcyl7dGhpcy5faGFzQ2hpbGRyZW4mJihjPXRoaXMuX2V4cGlyYXRpb25UaW1lPWIuX2V4cGlyYXRpb25UaW1lLHRoaXMucmVuZGVyKHRoaXMuX2NoaWxkcmVuKSk7Zm9yKHZhciBkPW51bGwsZT1iO2UhPT10aGlzOylkPWUsZT1lLl9uZXh0O251bGw9PT1kP3QoXCIyNTFcIik6dm9pZCAwO2QuX25leHQ9ZS5fbmV4dDt0aGlzLl9uZXh0PWI7YS5maXJzdEJhdGNoPXRoaXN9dGhpcy5fZGVmZXI9ITE7SGgoYSxjKTtiPXRoaXMuX25leHQ7dGhpcy5fbmV4dD1udWxsO2I9YS5maXJzdEJhdGNoPWI7bnVsbCE9PWImJmIuX2hhc0NoaWxkcmVuJiZiLnJlbmRlcihiLl9jaGlsZHJlbil9ZWxzZSB0aGlzLl9uZXh0PVxubnVsbCx0aGlzLl9kZWZlcj0hMX07VmgucHJvdG90eXBlLl9vbkNvbXBsZXRlPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbXBsZXRlKXt0aGlzLl9kaWRDb21wbGV0ZT0hMDt2YXIgYT10aGlzLl9jYWxsYmFja3M7aWYobnVsbCE9PWEpZm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspKDAsYVtiXSkoKX19O2Z1bmN0aW9uIFdoKCl7dGhpcy5fY2FsbGJhY2tzPW51bGw7dGhpcy5fZGlkQ29tbWl0PSExO3RoaXMuX29uQ29tbWl0PXRoaXMuX29uQ29tbWl0LmJpbmQodGhpcyl9V2gucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tbWl0KWEoKTtlbHNle3ZhciBiPXRoaXMuX2NhbGxiYWNrcztudWxsPT09YiYmKGI9dGhpcy5fY2FsbGJhY2tzPVtdKTtiLnB1c2goYSl9fTtcbldoLnByb3RvdHlwZS5fb25Db21taXQ9ZnVuY3Rpb24oKXtpZighdGhpcy5fZGlkQ29tbWl0KXt0aGlzLl9kaWRDb21taXQ9ITA7dmFyIGE9dGhpcy5fY2FsbGJhY2tzO2lmKG51bGwhPT1hKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3QoXCIxOTFcIixjKTp2b2lkIDA7YygpfX19O1xuZnVuY3Rpb24gWGgoYSxiLGMpe2I9TSgzLG51bGwsbnVsbCxiPzM6MCk7YT17Y3VycmVudDpiLGNvbnRhaW5lckluZm86YSxwZW5kaW5nQ2hpbGRyZW46bnVsbCxlYXJsaWVzdFBlbmRpbmdUaW1lOjAsbGF0ZXN0UGVuZGluZ1RpbWU6MCxlYXJsaWVzdFN1c3BlbmRlZFRpbWU6MCxsYXRlc3RTdXNwZW5kZWRUaW1lOjAsbGF0ZXN0UGluZ2VkVGltZTowLGRpZEVycm9yOiExLHBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZTowLGZpbmlzaGVkV29yazpudWxsLHRpbWVvdXRIYW5kbGU6LTEsY29udGV4dDpudWxsLHBlbmRpbmdDb250ZXh0Om51bGwsaHlkcmF0ZTpjLG5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uOjAsZXhwaXJhdGlvblRpbWU6MCxmaXJzdEJhdGNoOm51bGwsbmV4dFNjaGVkdWxlZFJvb3Q6bnVsbH07dGhpcy5faW50ZXJuYWxSb290PWIuc3RhdGVOb2RlPWF9XG5YaC5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5faW50ZXJuYWxSb290LGQ9bmV3IFdoO2I9dm9pZCAwPT09Yj9udWxsOmI7bnVsbCE9PWImJmQudGhlbihiKTtSaChhLGMsbnVsbCxkLl9vbkNvbW1pdCk7cmV0dXJuIGR9O1hoLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuX2ludGVybmFsUm9vdCxjPW5ldyBXaDthPXZvaWQgMD09PWE/bnVsbDphO251bGwhPT1hJiZjLnRoZW4oYSk7UmgobnVsbCxiLG51bGwsYy5fb25Db21taXQpO3JldHVybiBjfTtYaC5wcm90b3R5cGUubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzLl9pbnRlcm5hbFJvb3QsZT1uZXcgV2g7Yz12b2lkIDA9PT1jP251bGw6YztudWxsIT09YyYmZS50aGVuKGMpO1JoKGIsZCxhLGUuX29uQ29tbWl0KTtyZXR1cm4gZX07XG5YaC5wcm90b3R5cGUuY3JlYXRlQmF0Y2g9ZnVuY3Rpb24oKXt2YXIgYT1uZXcgVmgodGhpcyksYj1hLl9leHBpcmF0aW9uVGltZSxjPXRoaXMuX2ludGVybmFsUm9vdCxkPWMuZmlyc3RCYXRjaDtpZihudWxsPT09ZCljLmZpcnN0QmF0Y2g9YSxhLl9uZXh0PW51bGw7ZWxzZXtmb3IoYz1udWxsO251bGwhPT1kJiZkLl9leHBpcmF0aW9uVGltZT49YjspYz1kLGQ9ZC5fbmV4dDthLl9uZXh0PWQ7bnVsbCE9PWMmJihjLl9uZXh0PWEpfXJldHVybiBhfTtmdW5jdGlvbiBZaChhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9S2I9Tmg7TGI9UGg7TWI9ZnVuY3Rpb24oKXtXfHwwPT09bGh8fChLaChsaCwhMSksbGg9MCl9O1xuZnVuY3Rpb24gWmgoYSxiKXtifHwoYj1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsLGI9ISghYnx8MSE9PWIubm9kZVR5cGV8fCFiLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKSk7aWYoIWIpZm9yKHZhciBjO2M9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIG5ldyBYaChhLCExLGIpfVxuZnVuY3Rpb24gJGgoYSxiLGMsZCxlKXtZaChjKT92b2lkIDA6dChcIjIwMFwiKTt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBnPWU7ZT1mdW5jdGlvbigpe3ZhciBhPVNoKGYuX2ludGVybmFsUm9vdCk7Zy5jYWxsKGEpfX1udWxsIT1hP2YubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyKGEsYixlKTpmLnJlbmRlcihiLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9WmgoYyxkKTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9U2goZi5faW50ZXJuYWxSb290KTtoLmNhbGwoYSl9fU9oKGZ1bmN0aW9uKCl7bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX0pfXJldHVybiBTaChmLl9pbnRlcm5hbFJvb3QpfVxuZnVuY3Rpb24gYWkoYSxiKXt2YXIgYz0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbDtZaChiKT92b2lkIDA6dChcIjIwMFwiKTtyZXR1cm4gVWgoYSxiLG51bGwsYyl9XG52YXIgYmk9e2NyZWF0ZVBvcnRhbDphaSxmaW5kRE9NTm9kZTpmdW5jdGlvbihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKDE9PT1hLm5vZGVUeXBlKXJldHVybiBhO3ZhciBiPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2b2lkIDA9PT1iJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyP3QoXCIxODhcIik6dChcIjI2OFwiLE9iamVjdC5rZXlzKGEpKSk7YT1uZChiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9LGh5ZHJhdGU6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiAkaChudWxsLGEsYiwhMCxjKX0scmVuZGVyOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gJGgobnVsbCxhLGIsITEsYyl9LHVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyOmZ1bmN0aW9uKGEsYixjLGQpe251bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxGaWJlcj90KFwiMzhcIik6dm9pZCAwO3JldHVybiAkaChhLGIsYywhMSxkKX0sdW5tb3VudENvbXBvbmVudEF0Tm9kZTpmdW5jdGlvbihhKXtZaChhKT9cbnZvaWQgMDp0KFwiNDBcIik7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oT2goZnVuY3Rpb24oKXskaChudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsfSl9KSwhMCk6ITF9LHVuc3RhYmxlX2NyZWF0ZVBvcnRhbDpmdW5jdGlvbigpe3JldHVybiBhaS5hcHBseSh2b2lkIDAsYXJndW1lbnRzKX0sdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM6TmgsdW5zdGFibGVfaW50ZXJhY3RpdmVVcGRhdGVzOlBoLGZsdXNoU3luYzpmdW5jdGlvbihhLGIpe1c/dChcIjE4N1wiKTp2b2lkIDA7dmFyIGM9WjtaPSEwO3RyeXtyZXR1cm4gcWgoYSxiKX1maW5hbGx5e1o9YyxLaCgxMDczNzQxODIzLCExKX19LHVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZDpmdW5jdGlvbihhKXt2YXIgYj1aO1o9ITA7dHJ5e3FoKGEpfWZpbmFsbHl7KFo9Yil8fFd8fEtoKDEwNzM3NDE4MjMsITEpfX0sX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e0V2ZW50czpbSmEsXG5LYSxMYSxDYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUscWEsUmEsZnVuY3Rpb24oYSl7emEoYSxRYSl9LEliLEpiLEpkLEVhXX0sdW5zdGFibGVfY3JlYXRlUm9vdDpmdW5jdGlvbihhLGIpe1loKGEpP3ZvaWQgMDp0KFwiMjk5XCIsXCJ1bnN0YWJsZV9jcmVhdGVSb290XCIpO3JldHVybiBuZXcgWGgoYSwhMCxudWxsIT1iJiYhMD09PWIuaHlkcmF0ZSl9fTsoZnVuY3Rpb24oYSl7dmFyIGI9YS5maW5kRmliZXJCeUhvc3RJbnN0YW5jZTtyZXR1cm4gVmUobih7fSxhLHtmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPW5kKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4gYj9iKGEpOm51bGx9fSkpfSkoe2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOklhLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTYuNi4zXCIscmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifSk7XG52YXIgZWk9e2RlZmF1bHQ6Yml9LGZpPWVpJiZiaXx8ZWk7bW9kdWxlLmV4cG9ydHM9ZmkuZGVmYXVsdHx8Zmk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi42LjFcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgZD1udWxsLGY9ITEsaD0zLGs9LTEsbD0tMSxtPSExLG49ITE7ZnVuY3Rpb24gcCgpe2lmKCFtKXt2YXIgYT1kLmV4cGlyYXRpb25UaW1lO24/cSgpOm49ITA7cih0LGEpfX1cbmZ1bmN0aW9uIHUoKXt2YXIgYT1kLGI9ZC5uZXh0O2lmKGQ9PT1iKWQ9bnVsbDtlbHNle3ZhciBjPWQucHJldmlvdXM7ZD1jLm5leHQ9YjtiLnByZXZpb3VzPWN9YS5uZXh0PWEucHJldmlvdXM9bnVsbDtjPWEuY2FsbGJhY2s7Yj1hLmV4cGlyYXRpb25UaW1lO2E9YS5wcmlvcml0eUxldmVsO3ZhciBlPWgsUT1sO2g9YTtsPWI7dHJ5e3ZhciBnPWMoKX1maW5hbGx5e2g9ZSxsPVF9aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcpaWYoZz17Y2FsbGJhY2s6Zyxwcmlvcml0eUxldmVsOmEsZXhwaXJhdGlvblRpbWU6YixuZXh0Om51bGwscHJldmlvdXM6bnVsbH0sbnVsbD09PWQpZD1nLm5leHQ9Zy5wcmV2aW91cz1nO2Vsc2V7Yz1udWxsO2E9ZDtkb3tpZihhLmV4cGlyYXRpb25UaW1lPj1iKXtjPWE7YnJlYWt9YT1hLm5leHR9d2hpbGUoYSE9PWQpO251bGw9PT1jP2M9ZDpjPT09ZCYmKGQ9ZyxwKCkpO2I9Yy5wcmV2aW91cztiLm5leHQ9Yy5wcmV2aW91cz1nO2cubmV4dD1jO2cucHJldmlvdXM9XG5ifX1mdW5jdGlvbiB2KCl7aWYoLTE9PT1rJiZudWxsIT09ZCYmMT09PWQucHJpb3JpdHlMZXZlbCl7bT0hMDt0cnl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiYxPT09ZC5wcmlvcml0eUxldmVsKX1maW5hbGx5e209ITEsbnVsbCE9PWQ/cCgpOm49ITF9fX1mdW5jdGlvbiB0KGEpe209ITA7dmFyIGI9ZjtmPWE7dHJ5e2lmKGEpZm9yKDtudWxsIT09ZDspe3ZhciBjPWV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoZC5leHBpcmF0aW9uVGltZTw9Yyl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiZkLmV4cGlyYXRpb25UaW1lPD1jKX1lbHNlIGJyZWFrfWVsc2UgaWYobnVsbCE9PWQpe2RvIHUoKTt3aGlsZShudWxsIT09ZCYmIXcoKSl9fWZpbmFsbHl7bT0hMSxmPWIsbnVsbCE9PWQ/cCgpOm49ITEsdigpfX1cbnZhciB4PURhdGUseT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCx6PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMCxBPVwiZnVuY3Rpb25cIj09PXR5cGVvZiByZXF1ZXN0QW5pbWF0aW9uRnJhbWU/cmVxdWVzdEFuaW1hdGlvbkZyYW1lOnZvaWQgMCxCPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjYW5jZWxBbmltYXRpb25GcmFtZT9jYW5jZWxBbmltYXRpb25GcmFtZTp2b2lkIDAsQyxEO2Z1bmN0aW9uIEUoYSl7Qz1BKGZ1bmN0aW9uKGIpe3ooRCk7YShiKX0pO0Q9eShmdW5jdGlvbigpe0IoQyk7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sMTAwKX1cbmlmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBGPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIEYubm93KCl9fWVsc2UgZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4geC5ub3coKX07dmFyIHIscSx3O1xuaWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiB3aW5kb3cmJndpbmRvdy5fc2NoZWRNb2NrKXt2YXIgRz13aW5kb3cuX3NjaGVkTW9jaztyPUdbMF07cT1HWzFdO3c9R1syXX1lbHNlIGlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2Ygd2luZG93LmFkZEV2ZW50TGlzdGVuZXIpe3ZhciBIPW51bGwsST0tMSxKPWZ1bmN0aW9uKGEsYil7aWYobnVsbCE9PUgpe3ZhciBjPUg7SD1udWxsO3RyeXtJPWIsYyhhKX1maW5hbGx5e0k9LTF9fX07cj1mdW5jdGlvbihhLGIpey0xIT09ST9zZXRUaW1lb3V0KHIsMCxhLGIpOihIPWEsc2V0VGltZW91dChKLGIsITAsYiksc2V0VGltZW91dChKLDEwNzM3NDE4MjMsITEsMTA3Mzc0MTgyMykpfTtxPWZ1bmN0aW9uKCl7SD1udWxsfTt3PWZ1bmN0aW9uKCl7cmV0dXJuITF9O2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuLTE9PT1JPzA6SX19ZWxzZXtcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUmJlxuKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBBJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBCJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIikpO3ZhciBLPW51bGwsTD0hMSxNPS0xLE49ITEsTz0hMSxQPTAsUj0zMyxTPTMzO3c9ZnVuY3Rpb24oKXtyZXR1cm4gUDw9ZXhwb3J0cy51bnN0YWJsZV9ub3coKX07dmFyIFQ9XCJfX3JlYWN0SWRsZUNhbGxiYWNrJFwiK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpO1xud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsZnVuY3Rpb24oYSl7aWYoYS5zb3VyY2U9PT13aW5kb3cmJmEuZGF0YT09PVQpe0w9ITE7YT1LO3ZhciBiPU07Sz1udWxsO009LTE7dmFyIGM9ZXhwb3J0cy51bnN0YWJsZV9ub3coKSxlPSExO2lmKDA+PVAtYylpZigtMSE9PWImJmI8PWMpZT0hMDtlbHNle058fChOPSEwLEUoVSkpO0s9YTtNPWI7cmV0dXJufWlmKG51bGwhPT1hKXtPPSEwO3RyeXthKGUpfWZpbmFsbHl7Tz0hMX19fX0sITEpO3ZhciBVPWZ1bmN0aW9uKGEpe2lmKG51bGwhPT1LKXtFKFUpO3ZhciBiPWEtUCtTO2I8UyYmUjxTPyg4PmImJihiPTgpLFM9YjxSP1I6Yik6Uj1iO1A9YStTO0x8fChMPSEwLHdpbmRvdy5wb3N0TWVzc2FnZShULFwiKlwiKSl9ZWxzZSBOPSExfTtyPWZ1bmN0aW9uKGEsYil7Sz1hO009YjtPfHwwPmI/d2luZG93LnBvc3RNZXNzYWdlKFQsXCIqXCIpOk58fChOPSEwLEUoVSkpfTtxPWZ1bmN0aW9uKCl7Sz1udWxsO0w9ITE7TT0tMX19XG5leHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPWgsZT1rO2g9YTtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtoPWMsaz1lLHYoKX19O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7dmFyIGM9LTEhPT1rP2s6ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iJiZcIm51bWJlclwiPT09dHlwZW9mIGIudGltZW91dCliPWMrYi50aW1lb3V0O2Vsc2Ugc3dpdGNoKGgpe2Nhc2UgMTpiPWMrLTE7YnJlYWs7Y2FzZSAyOmI9YysyNTA7YnJlYWs7Y2FzZSA1OmI9YysxMDczNzQxODIzO2JyZWFrO2Nhc2UgNDpiPWMrMUU0O2JyZWFrO2RlZmF1bHQ6Yj1jKzVFM31hPXtjYWxsYmFjazphLHByaW9yaXR5TGV2ZWw6aCxleHBpcmF0aW9uVGltZTpiLG5leHQ6bnVsbCxwcmV2aW91czpudWxsfTtpZihudWxsPT09ZClkPWEubmV4dD1hLnByZXZpb3VzPWEscCgpO2Vsc2V7Yz1udWxsO3ZhciBlPWQ7ZG97aWYoZS5leHBpcmF0aW9uVGltZT5iKXtjPWU7YnJlYWt9ZT1lLm5leHR9d2hpbGUoZSE9PWQpO251bGw9PT1jP2M9ZDpjPT09ZCYmKGQ9YSxwKCkpO1xuYj1jLnByZXZpb3VzO2IubmV4dD1jLnByZXZpb3VzPWE7YS5uZXh0PWM7YS5wcmV2aW91cz1ifXJldHVybiBhfTtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPWEubmV4dDtpZihudWxsIT09Yil7aWYoYj09PWEpZD1udWxsO2Vsc2V7YT09PWQmJihkPWIpO3ZhciBjPWEucHJldmlvdXM7Yy5uZXh0PWI7Yi5wcmV2aW91cz1jfWEubmV4dD1hLnByZXZpb3VzPW51bGx9fTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1oO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPWgsZT1rO2g9YjtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e2g9YyxrPWUsdigpfX19O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gaH07XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuIWYmJihudWxsIT09ZCYmZC5leHBpcmF0aW9uVGltZTxsfHx3KCkpfTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW1cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcyA9IGVtcHR5RnVuY3Rpb247XG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG4ndXNlIHN0cmljdCc7XG5cbi8vIElmIG9iai5oYXNPd25Qcm9wZXJ0eSBoYXMgYmVlbiBvdmVycmlkZGVuLCB0aGVuIGNhbGxpbmdcbi8vIG9iai5oYXNPd25Qcm9wZXJ0eShwcm9wKSB3aWxsIGJyZWFrLlxuLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vam95ZW50L25vZGUvaXNzdWVzLzE3MDdcbmZ1bmN0aW9uIGhhc093blByb3BlcnR5KG9iaiwgcHJvcCkge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ocXMsIHNlcCwgZXEsIG9wdGlvbnMpIHtcbiAgc2VwID0gc2VwIHx8ICcmJztcbiAgZXEgPSBlcSB8fCAnPSc7XG4gIHZhciBvYmogPSB7fTtcblxuICBpZiAodHlwZW9mIHFzICE9PSAnc3RyaW5nJyB8fCBxcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gb2JqO1xuICB9XG5cbiAgdmFyIHJlZ2V4cCA9IC9cXCsvZztcbiAgcXMgPSBxcy5zcGxpdChzZXApO1xuXG4gIHZhciBtYXhLZXlzID0gMTAwMDtcbiAgaWYgKG9wdGlvbnMgJiYgdHlwZW9mIG9wdGlvbnMubWF4S2V5cyA9PT0gJ251bWJlcicpIHtcbiAgICBtYXhLZXlzID0gb3B0aW9ucy5tYXhLZXlzO1xuICB9XG5cbiAgdmFyIGxlbiA9IHFzLmxlbmd0aDtcbiAgLy8gbWF4S2V5cyA8PSAwIG1lYW5zIHRoYXQgd2Ugc2hvdWxkIG5vdCBsaW1pdCBrZXlzIGNvdW50XG4gIGlmIChtYXhLZXlzID4gMCAmJiBsZW4gPiBtYXhLZXlzKSB7XG4gICAgbGVuID0gbWF4S2V5cztcbiAgfVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyArK2kpIHtcbiAgICB2YXIgeCA9IHFzW2ldLnJlcGxhY2UocmVnZXhwLCAnJTIwJyksXG4gICAgICAgIGlkeCA9IHguaW5kZXhPZihlcSksXG4gICAgICAgIGtzdHIsIHZzdHIsIGssIHY7XG5cbiAgICBpZiAoaWR4ID49IDApIHtcbiAgICAgIGtzdHIgPSB4LnN1YnN0cigwLCBpZHgpO1xuICAgICAgdnN0ciA9IHguc3Vic3RyKGlkeCArIDEpO1xuICAgIH0gZWxzZSB7XG4gICAgICBrc3RyID0geDtcbiAgICAgIHZzdHIgPSAnJztcbiAgICB9XG5cbiAgICBrID0gZGVjb2RlVVJJQ29tcG9uZW50KGtzdHIpO1xuICAgIHYgPSBkZWNvZGVVUklDb21wb25lbnQodnN0cik7XG5cbiAgICBpZiAoIWhhc093blByb3BlcnR5KG9iaiwgaykpIHtcbiAgICAgIG9ialtrXSA9IHY7XG4gICAgfSBlbHNlIGlmIChpc0FycmF5KG9ialtrXSkpIHtcbiAgICAgIG9ialtrXS5wdXNoKHYpO1xuICAgIH0gZWxzZSB7XG4gICAgICBvYmpba10gPSBbb2JqW2tdLCB2XTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gb2JqO1xufTtcblxudmFyIGlzQXJyYXkgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uICh4cykge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHhzKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgc3RyaW5naWZ5UHJpbWl0aXZlID0gZnVuY3Rpb24odikge1xuICBzd2l0Y2ggKHR5cGVvZiB2KSB7XG4gICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgIHJldHVybiB2O1xuXG4gICAgY2FzZSAnYm9vbGVhbic6XG4gICAgICByZXR1cm4gdiA/ICd0cnVlJyA6ICdmYWxzZSc7XG5cbiAgICBjYXNlICdudW1iZXInOlxuICAgICAgcmV0dXJuIGlzRmluaXRlKHYpID8gdiA6ICcnO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiAnJztcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvYmosIHNlcCwgZXEsIG5hbWUpIHtcbiAgc2VwID0gc2VwIHx8ICcmJztcbiAgZXEgPSBlcSB8fCAnPSc7XG4gIGlmIChvYmogPT09IG51bGwpIHtcbiAgICBvYmogPSB1bmRlZmluZWQ7XG4gIH1cblxuICBpZiAodHlwZW9mIG9iaiA9PT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gbWFwKG9iamVjdEtleXMob2JqKSwgZnVuY3Rpb24oaykge1xuICAgICAgdmFyIGtzID0gZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShrKSkgKyBlcTtcbiAgICAgIGlmIChpc0FycmF5KG9ialtrXSkpIHtcbiAgICAgICAgcmV0dXJuIG1hcChvYmpba10sIGZ1bmN0aW9uKHYpIHtcbiAgICAgICAgICByZXR1cm4ga3MgKyBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKHYpKTtcbiAgICAgICAgfSkuam9pbihzZXApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGtzICsgZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShvYmpba10pKTtcbiAgICAgIH1cbiAgICB9KS5qb2luKHNlcCk7XG5cbiAgfVxuXG4gIGlmICghbmFtZSkgcmV0dXJuICcnO1xuICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShuYW1lKSkgKyBlcSArXG4gICAgICAgICBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKG9iaikpO1xufTtcblxudmFyIGlzQXJyYXkgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uICh4cykge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHhzKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG5cbmZ1bmN0aW9uIG1hcCAoeHMsIGYpIHtcbiAgaWYgKHhzLm1hcCkgcmV0dXJuIHhzLm1hcChmKTtcbiAgdmFyIHJlcyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHhzLmxlbmd0aDsgaSsrKSB7XG4gICAgcmVzLnB1c2goZih4c1tpXSwgaSkpO1xuICB9XG4gIHJldHVybiByZXM7XG59XG5cbnZhciBvYmplY3RLZXlzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24gKG9iaikge1xuICB2YXIgcmVzID0gW107XG4gIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgcmVzLnB1c2goa2V5KTtcbiAgfVxuICByZXR1cm4gcmVzO1xufTtcbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikodHJ1ZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuXzF5RzZPQVc3SGVlMWMwVGVHVFQtM1Ige1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGhlaWdodDogMmVtO1xcbiAgd2lkdGg6IDEwMHZ3O1xcbn1cXG5cXG4gIC5fMXlHNk9BVzdIZWUxYzBUZUdUVC0zUiBidXR0b24ge1xcbiAgICB3aWR0aDogMTAwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGJsdWU7XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG4gIH1cXG5cIiwgXCJcIiwge1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wiL1VzZXJzL3J5YW5sdXJhcy9kZXYvYWxjaGVteS9mdWxsc3RhY2svYXJ0aXN0LXNlYXJjaC9zcmMvY29tcG9uZW50cy9wYWdpbmcvUGFnaW5nLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGNBQWM7RUFDZCw4QkFBOEI7RUFDOUIsb0JBQW9CO0VBQ3BCLFlBQVk7RUFDWixhQUFhO0NBT2Q7O0VBTEM7SUFDRSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLGFBQWE7R0FDZFwiLFwiZmlsZVwiOlwiUGFnaW5nLmNzc1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIucGFnaW5nIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBoZWlnaHQ6IDJlbTtcXG4gIHdpZHRoOiAxMDB2dztcXG5cXG4gIGJ1dHRvbiB7XFxuICAgIHdpZHRoOiAxMDBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgfVxcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwicGFnaW5nXCI6IFwiXzF5RzZPQVc3SGVlMWMwVGVHVFQtM1JcIlxufTsiLCIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXNlU291cmNlTWFwKSB7XG5cdHZhciBsaXN0ID0gW107XG5cblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXHRsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG5cdFx0XHR2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblx0XHRcdGlmKGl0ZW1bMl0pIHtcblx0XHRcdFx0cmV0dXJuIFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgY29udGVudCArIFwifVwiO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdFx0XHR9XG5cdFx0fSkuam9pbihcIlwiKTtcblx0fTtcblxuXHQvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXHRsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXG5cdFx0XHRtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG5cdFx0dmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGlkID0gdGhpc1tpXVswXTtcblx0XHRcdGlmKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIilcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuXHRcdH1cblx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XG5cdFx0XHQvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG5cdFx0XHQvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cblx0XHRcdC8vICBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cdFx0XHRpZih0eXBlb2YgaXRlbVswXSAhPT0gXCJudW1iZXJcIiB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IG1lZGlhUXVlcnk7XG5cdFx0XHRcdH0gZWxzZSBpZihtZWRpYVF1ZXJ5KSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGxpc3QucHVzaChpdGVtKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcblx0dmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnO1xuXHR2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cdGlmICghY3NzTWFwcGluZykge1xuXHRcdHJldHVybiBjb250ZW50O1xuXHR9XG5cblx0aWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuXHRcdHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG5cdFx0XHRyZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nXG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcblx0fVxuXG5cdHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59XG5cbi8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG5cdHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuXHR2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuXG5cdHJldHVybiAnLyojICcgKyBkYXRhICsgJyAqLyc7XG59XG4iLCIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuXG52YXIgc3R5bGVzSW5Eb20gPSB7fTtcblxudmFyXHRtZW1vaXplID0gZnVuY3Rpb24gKGZuKSB7XG5cdHZhciBtZW1vO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoKSB7XG5cdFx0aWYgKHR5cGVvZiBtZW1vID09PSBcInVuZGVmaW5lZFwiKSBtZW1vID0gZm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblx0XHRyZXR1cm4gbWVtbztcblx0fTtcbn07XG5cbnZhciBpc09sZElFID0gbWVtb2l6ZShmdW5jdGlvbiAoKSB7XG5cdC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG5cdC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcblx0Ly8gVGVzdHMgZm9yIGV4aXN0ZW5jZSBvZiBzdGFuZGFyZCBnbG9iYWxzIGlzIHRvIGFsbG93IHN0eWxlLWxvYWRlclxuXHQvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcblx0Ly8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG5cdHJldHVybiB3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYjtcbn0pO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gKHRhcmdldCwgcGFyZW50KSB7XG4gIGlmIChwYXJlbnQpe1xuICAgIHJldHVybiBwYXJlbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuICB9XG4gIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG59O1xuXG52YXIgZ2V0RWxlbWVudCA9IChmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW8gPSB7fTtcblxuXHRyZXR1cm4gZnVuY3Rpb24odGFyZ2V0LCBwYXJlbnQpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiBwYXNzaW5nIGZ1bmN0aW9uIGluIG9wdGlvbnMsIHRoZW4gdXNlIGl0IGZvciByZXNvbHZlIFwiaGVhZFwiIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgLy8gVXNlZnVsIGZvciBTaGFkb3cgUm9vdCBzdHlsZSBpLmVcbiAgICAgICAgICAgICAgICAvLyB7XG4gICAgICAgICAgICAgICAgLy8gICBpbnNlcnRJbnRvOiBmdW5jdGlvbiAoKSB7IHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zvb1wiKS5zaGFkb3dSb290IH1cbiAgICAgICAgICAgICAgICAvLyB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0YXJnZXQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcblx0XHRcdHZhciBzdHlsZVRhcmdldCA9IGdldFRhcmdldC5jYWxsKHRoaXMsIHRhcmdldCwgcGFyZW50KTtcblx0XHRcdC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cdFx0XHRpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0Ly8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcblx0XHRcdFx0XHQvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuXHRcdFx0XHRcdHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG5cdFx0XHRcdH0gY2F0Y2goZSkge1xuXHRcdFx0XHRcdHN0eWxlVGFyZ2V0ID0gbnVsbDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0bWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG5cdFx0fVxuXHRcdHJldHVybiBtZW1vW3RhcmdldF1cblx0fTtcbn0pKCk7XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyXHRzaW5nbGV0b25Db3VudGVyID0gMDtcbnZhclx0c3R5bGVzSW5zZXJ0ZWRBdFRvcCA9IFtdO1xuXG52YXJcdGZpeFVybHMgPSByZXF1aXJlKFwiLi91cmxzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGxpc3QsIG9wdGlvbnMpIHtcblx0aWYgKHR5cGVvZiBERUJVRyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBERUJVRykge1xuXHRcdGlmICh0eXBlb2YgZG9jdW1lbnQgIT09IFwib2JqZWN0XCIpIHRocm93IG5ldyBFcnJvcihcIlRoZSBzdHlsZS1sb2FkZXIgY2Fubm90IGJlIHVzZWQgaW4gYSBub24tYnJvd3NlciBlbnZpcm9ubWVudFwiKTtcblx0fVxuXG5cdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG5cdG9wdGlvbnMuYXR0cnMgPSB0eXBlb2Ygb3B0aW9ucy5hdHRycyA9PT0gXCJvYmplY3RcIiA/IG9wdGlvbnMuYXR0cnMgOiB7fTtcblxuXHQvLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cblx0Ly8gdGFncyBpdCB3aWxsIGFsbG93IG9uIGEgcGFnZVxuXHRpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gXCJib29sZWFuXCIpIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIDxoZWFkPiBlbGVtZW50XG4gICAgICAgIGlmICghb3B0aW9ucy5pbnNlcnRJbnRvKSBvcHRpb25zLmluc2VydEludG8gPSBcImhlYWRcIjtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSBib3R0b20gb2YgdGhlIHRhcmdldFxuXHRpZiAoIW9wdGlvbnMuaW5zZXJ0QXQpIG9wdGlvbnMuaW5zZXJ0QXQgPSBcImJvdHRvbVwiO1xuXG5cdHZhciBzdHlsZXMgPSBsaXN0VG9TdHlsZXMobGlzdCwgb3B0aW9ucyk7XG5cblx0YWRkU3R5bGVzVG9Eb20oc3R5bGVzLCBvcHRpb25zKTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gdXBkYXRlIChuZXdMaXN0KSB7XG5cdFx0dmFyIG1heVJlbW92ZSA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRcdGRvbVN0eWxlLnJlZnMtLTtcblx0XHRcdG1heVJlbW92ZS5wdXNoKGRvbVN0eWxlKTtcblx0XHR9XG5cblx0XHRpZihuZXdMaXN0KSB7XG5cdFx0XHR2YXIgbmV3U3R5bGVzID0gbGlzdFRvU3R5bGVzKG5ld0xpc3QsIG9wdGlvbnMpO1xuXHRcdFx0YWRkU3R5bGVzVG9Eb20obmV3U3R5bGVzLCBvcHRpb25zKTtcblx0XHR9XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG1heVJlbW92ZS5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gbWF5UmVtb3ZlW2ldO1xuXG5cdFx0XHRpZihkb21TdHlsZS5yZWZzID09PSAwKSB7XG5cdFx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIGRvbVN0eWxlLnBhcnRzW2pdKCk7XG5cblx0XHRcdFx0ZGVsZXRlIHN0eWxlc0luRG9tW2RvbVN0eWxlLmlkXTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG59O1xuXG5mdW5jdGlvbiBhZGRTdHlsZXNUb0RvbSAoc3R5bGVzLCBvcHRpb25zKSB7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRpZihkb21TdHlsZSkge1xuXHRcdFx0ZG9tU3R5bGUucmVmcysrO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHNbal0oaXRlbS5wYXJ0c1tqXSk7XG5cdFx0XHR9XG5cblx0XHRcdGZvcig7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHR2YXIgcGFydHMgPSBbXTtcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0cGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cblx0XHRcdHN0eWxlc0luRG9tW2l0ZW0uaWRdID0ge2lkOiBpdGVtLmlkLCByZWZzOiAxLCBwYXJ0czogcGFydHN9O1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBsaXN0VG9TdHlsZXMgKGxpc3QsIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlcyA9IFtdO1xuXHR2YXIgbmV3U3R5bGVzID0ge307XG5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBsaXN0W2ldO1xuXHRcdHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuXHRcdHZhciBjc3MgPSBpdGVtWzFdO1xuXHRcdHZhciBtZWRpYSA9IGl0ZW1bMl07XG5cdFx0dmFyIHNvdXJjZU1hcCA9IGl0ZW1bM107XG5cdFx0dmFyIHBhcnQgPSB7Y3NzOiBjc3MsIG1lZGlhOiBtZWRpYSwgc291cmNlTWFwOiBzb3VyY2VNYXB9O1xuXG5cdFx0aWYoIW5ld1N0eWxlc1tpZF0pIHN0eWxlcy5wdXNoKG5ld1N0eWxlc1tpZF0gPSB7aWQ6IGlkLCBwYXJ0czogW3BhcnRdfSk7XG5cdFx0ZWxzZSBuZXdTdHlsZXNbaWRdLnBhcnRzLnB1c2gocGFydCk7XG5cdH1cblxuXHRyZXR1cm4gc3R5bGVzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQgKG9wdGlvbnMsIHN0eWxlKSB7XG5cdHZhciB0YXJnZXQgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0SW50bylcblxuXHRpZiAoIXRhcmdldCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0SW50bycgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuXHR9XG5cblx0dmFyIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcFtzdHlsZXNJbnNlcnRlZEF0VG9wLmxlbmd0aCAtIDFdO1xuXG5cdGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcInRvcFwiKSB7XG5cdFx0aWYgKCFsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCkge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgdGFyZ2V0LmZpcnN0Q2hpbGQpO1xuXHRcdH0gZWxzZSBpZiAobGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0XHR9XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5wdXNoKHN0eWxlKTtcblx0fSBlbHNlIGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcImJvdHRvbVwiKSB7XG5cdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0fSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJvYmplY3RcIiAmJiBvcHRpb25zLmluc2VydEF0LmJlZm9yZSkge1xuXHRcdHZhciBuZXh0U2libGluZyA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUsIHRhcmdldCk7XG5cdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbmV4dFNpYmxpbmcpO1xuXHR9IGVsc2Uge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIltTdHlsZSBMb2FkZXJdXFxuXFxuIEludmFsaWQgdmFsdWUgZm9yIHBhcmFtZXRlciAnaW5zZXJ0QXQnICgnb3B0aW9ucy5pbnNlcnRBdCcpIGZvdW5kLlxcbiBNdXN0IGJlICd0b3AnLCAnYm90dG9tJywgb3IgT2JqZWN0LlxcbiAoaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIjaW5zZXJ0YXQpXFxuXCIpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudCAoc3R5bGUpIHtcblx0aWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHJldHVybiBmYWxzZTtcblx0c3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG5cblx0dmFyIGlkeCA9IHN0eWxlc0luc2VydGVkQXRUb3AuaW5kZXhPZihzdHlsZSk7XG5cdGlmKGlkeCA+PSAwKSB7XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5zcGxpY2UoaWR4LCAxKTtcblx0fVxufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHlsZUVsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuXG5cdGlmKG9wdGlvbnMuYXR0cnMudHlwZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0b3B0aW9ucy5hdHRycy50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuXHR9XG5cblx0aWYob3B0aW9ucy5hdHRycy5ub25jZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dmFyIG5vbmNlID0gZ2V0Tm9uY2UoKTtcblx0XHRpZiAobm9uY2UpIHtcblx0XHRcdG9wdGlvbnMuYXR0cnMubm9uY2UgPSBub25jZTtcblx0XHR9XG5cdH1cblxuXHRhZGRBdHRycyhzdHlsZSwgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBzdHlsZSk7XG5cblx0cmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMaW5rRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIpO1xuXG5cdGlmKG9wdGlvbnMuYXR0cnMudHlwZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0b3B0aW9ucy5hdHRycy50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuXHR9XG5cdG9wdGlvbnMuYXR0cnMucmVsID0gXCJzdHlsZXNoZWV0XCI7XG5cblx0YWRkQXR0cnMobGluaywgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBsaW5rKTtcblxuXHRyZXR1cm4gbGluaztcbn1cblxuZnVuY3Rpb24gYWRkQXR0cnMgKGVsLCBhdHRycykge1xuXHRPYmplY3Qua2V5cyhhdHRycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0ZWwuc2V0QXR0cmlidXRlKGtleSwgYXR0cnNba2V5XSk7XG5cdH0pO1xufVxuXG5mdW5jdGlvbiBnZXROb25jZSgpIHtcblx0aWYgKHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyA9PT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdHJldHVybiBfX3dlYnBhY2tfbm9uY2VfXztcbn1cblxuZnVuY3Rpb24gYWRkU3R5bGUgKG9iaiwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGUsIHVwZGF0ZSwgcmVtb3ZlLCByZXN1bHQ7XG5cblx0Ly8gSWYgYSB0cmFuc2Zvcm0gZnVuY3Rpb24gd2FzIGRlZmluZWQsIHJ1biBpdCBvbiB0aGUgY3NzXG5cdGlmIChvcHRpb25zLnRyYW5zZm9ybSAmJiBvYmouY3NzKSB7XG5cdCAgICByZXN1bHQgPSB0eXBlb2Ygb3B0aW9ucy50cmFuc2Zvcm0gPT09ICdmdW5jdGlvbidcblx0XHQgPyBvcHRpb25zLnRyYW5zZm9ybShvYmouY3NzKSBcblx0XHQgOiBvcHRpb25zLnRyYW5zZm9ybS5kZWZhdWx0KG9iai5jc3MpO1xuXG5cdCAgICBpZiAocmVzdWx0KSB7XG5cdCAgICBcdC8vIElmIHRyYW5zZm9ybSByZXR1cm5zIGEgdmFsdWUsIHVzZSB0aGF0IGluc3RlYWQgb2YgdGhlIG9yaWdpbmFsIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgcnVubmluZyBydW50aW1lIHRyYW5zZm9ybWF0aW9ucyBvbiB0aGUgY3NzLlxuXHQgICAgXHRvYmouY3NzID0gcmVzdWx0O1xuXHQgICAgfSBlbHNlIHtcblx0ICAgIFx0Ly8gSWYgdGhlIHRyYW5zZm9ybSBmdW5jdGlvbiByZXR1cm5zIGEgZmFsc3kgdmFsdWUsIGRvbid0IGFkZCB0aGlzIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgY29uZGl0aW9uYWwgbG9hZGluZyBvZiBjc3Ncblx0ICAgIFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHQgICAgXHRcdC8vIG5vb3Bcblx0ICAgIFx0fTtcblx0ICAgIH1cblx0fVxuXG5cdGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuXHRcdHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuXG5cdFx0c3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKSk7XG5cblx0XHR1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcblx0XHRyZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIHRydWUpO1xuXG5cdH0gZWxzZSBpZiAoXG5cdFx0b2JqLnNvdXJjZU1hcCAmJlxuXHRcdHR5cGVvZiBVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwuY3JlYXRlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgVVJMLnJldm9rZU9iamVjdFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIEJsb2IgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCJcblx0KSB7XG5cdFx0c3R5bGUgPSBjcmVhdGVMaW5rRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSB1cGRhdGVMaW5rLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cblx0XHRcdGlmKHN0eWxlLmhyZWYpIFVSTC5yZXZva2VPYmplY3RVUkwoc3R5bGUuaHJlZik7XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHRzdHlsZSA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cdFx0fTtcblx0fVxuXG5cdHVwZGF0ZShvYmopO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZSAobmV3T2JqKSB7XG5cdFx0aWYgKG5ld09iaikge1xuXHRcdFx0aWYgKFxuXHRcdFx0XHRuZXdPYmouY3NzID09PSBvYmouY3NzICYmXG5cdFx0XHRcdG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmXG5cdFx0XHRcdG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXBcblx0XHRcdCkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdHVwZGF0ZShvYmogPSBuZXdPYmopO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZW1vdmUoKTtcblx0XHR9XG5cdH07XG59XG5cbnZhciByZXBsYWNlVGV4dCA9IChmdW5jdGlvbiAoKSB7XG5cdHZhciB0ZXh0U3RvcmUgPSBbXTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gKGluZGV4LCByZXBsYWNlbWVudCkge1xuXHRcdHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcblxuXHRcdHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuXHR9O1xufSkoKTtcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyAoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuXHR2YXIgY3NzID0gcmVtb3ZlID8gXCJcIiA6IG9iai5jc3M7XG5cblx0aWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcblx0fSBlbHNlIHtcblx0XHR2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG5cdFx0dmFyIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuXG5cdFx0aWYgKGNoaWxkTm9kZXNbaW5kZXhdKSBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XG5cblx0XHRpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcblx0XHRcdHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnIChzdHlsZSwgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG5cblx0aWYobWVkaWEpIHtcblx0XHRzdHlsZS5zZXRBdHRyaWJ1dGUoXCJtZWRpYVwiLCBtZWRpYSlcblx0fVxuXG5cdGlmKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG5cdH0gZWxzZSB7XG5cdFx0d2hpbGUoc3R5bGUuZmlyc3RDaGlsZCkge1xuXHRcdFx0c3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG5cdFx0fVxuXG5cdFx0c3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gdXBkYXRlTGluayAobGluaywgb3B0aW9ucywgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuXHQvKlxuXHRcdElmIGNvbnZlcnRUb0Fic29sdXRlVXJscyBpc24ndCBkZWZpbmVkLCBidXQgc291cmNlbWFwcyBhcmUgZW5hYmxlZFxuXHRcdGFuZCB0aGVyZSBpcyBubyBwdWJsaWNQYXRoIGRlZmluZWQgdGhlbiBsZXRzIHR1cm4gY29udmVydFRvQWJzb2x1dGVVcmxzXG5cdFx0b24gYnkgZGVmYXVsdC4gIE90aGVyd2lzZSBkZWZhdWx0IHRvIHRoZSBjb252ZXJ0VG9BYnNvbHV0ZVVybHMgb3B0aW9uXG5cdFx0ZGlyZWN0bHlcblx0Ki9cblx0dmFyIGF1dG9GaXhVcmxzID0gb3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgPT09IHVuZGVmaW5lZCAmJiBzb3VyY2VNYXA7XG5cblx0aWYgKG9wdGlvbnMuY29udmVydFRvQWJzb2x1dGVVcmxzIHx8IGF1dG9GaXhVcmxzKSB7XG5cdFx0Y3NzID0gZml4VXJscyhjc3MpO1xuXHR9XG5cblx0aWYgKHNvdXJjZU1hcCkge1xuXHRcdC8vIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzI2NjAzODc1XG5cdFx0Y3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIiArIGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSkgKyBcIiAqL1wiO1xuXHR9XG5cblx0dmFyIGJsb2IgPSBuZXcgQmxvYihbY3NzXSwgeyB0eXBlOiBcInRleHQvY3NzXCIgfSk7XG5cblx0dmFyIG9sZFNyYyA9IGxpbmsuaHJlZjtcblxuXHRsaW5rLmhyZWYgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuXG5cdGlmKG9sZFNyYykgVVJMLnJldm9rZU9iamVjdFVSTChvbGRTcmMpO1xufVxuIiwiXG4vKipcbiAqIFdoZW4gc291cmNlIG1hcHMgYXJlIGVuYWJsZWQsIGBzdHlsZS1sb2FkZXJgIHVzZXMgYSBsaW5rIGVsZW1lbnQgd2l0aCBhIGRhdGEtdXJpIHRvXG4gKiBlbWJlZCB0aGUgY3NzIG9uIHRoZSBwYWdlLiBUaGlzIGJyZWFrcyBhbGwgcmVsYXRpdmUgdXJscyBiZWNhdXNlIG5vdyB0aGV5IGFyZSByZWxhdGl2ZSB0byBhXG4gKiBidW5kbGUgaW5zdGVhZCBvZiB0aGUgY3VycmVudCBwYWdlLlxuICpcbiAqIE9uZSBzb2x1dGlvbiBpcyB0byBvbmx5IHVzZSBmdWxsIHVybHMsIGJ1dCB0aGF0IG1heSBiZSBpbXBvc3NpYmxlLlxuICpcbiAqIEluc3RlYWQsIHRoaXMgZnVuY3Rpb24gXCJmaXhlc1wiIHRoZSByZWxhdGl2ZSB1cmxzIHRvIGJlIGFic29sdXRlIGFjY29yZGluZyB0byB0aGUgY3VycmVudCBwYWdlIGxvY2F0aW9uLlxuICpcbiAqIEEgcnVkaW1lbnRhcnkgdGVzdCBzdWl0ZSBpcyBsb2NhdGVkIGF0IGB0ZXN0L2ZpeFVybHMuanNgIGFuZCBjYW4gYmUgcnVuIHZpYSB0aGUgYG5wbSB0ZXN0YCBjb21tYW5kLlxuICpcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3MpIHtcbiAgLy8gZ2V0IGN1cnJlbnQgbG9jYXRpb25cbiAgdmFyIGxvY2F0aW9uID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cubG9jYXRpb247XG5cbiAgaWYgKCFsb2NhdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihcImZpeFVybHMgcmVxdWlyZXMgd2luZG93LmxvY2F0aW9uXCIpO1xuICB9XG5cblx0Ly8gYmxhbmsgb3IgbnVsbD9cblx0aWYgKCFjc3MgfHwgdHlwZW9mIGNzcyAhPT0gXCJzdHJpbmdcIikge1xuXHQgIHJldHVybiBjc3M7XG4gIH1cblxuICB2YXIgYmFzZVVybCA9IGxvY2F0aW9uLnByb3RvY29sICsgXCIvL1wiICsgbG9jYXRpb24uaG9zdDtcbiAgdmFyIGN1cnJlbnREaXIgPSBiYXNlVXJsICsgbG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXFwvW15cXC9dKiQvLCBcIi9cIik7XG5cblx0Ly8gY29udmVydCBlYWNoIHVybCguLi4pXG5cdC8qXG5cdFRoaXMgcmVndWxhciBleHByZXNzaW9uIGlzIGp1c3QgYSB3YXkgdG8gcmVjdXJzaXZlbHkgbWF0Y2ggYnJhY2tldHMgd2l0aGluXG5cdGEgc3RyaW5nLlxuXG5cdCAvdXJsXFxzKlxcKCAgPSBNYXRjaCBvbiB0aGUgd29yZCBcInVybFwiIHdpdGggYW55IHdoaXRlc3BhY2UgYWZ0ZXIgaXQgYW5kIHRoZW4gYSBwYXJlbnNcblx0ICAgKCAgPSBTdGFydCBhIGNhcHR1cmluZyBncm91cFxuXHQgICAgICg/OiAgPSBTdGFydCBhIG5vbi1jYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAgICAgW14pKF0gID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICg/OiAgPSBTdGFydCBhbm90aGVyIG5vbi1jYXB0dXJpbmcgZ3JvdXBzXG5cdCAgICAgICAgICAgICAgICAgW14pKF0rICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgICAgICBbXikoXSogID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgXFwpICA9IE1hdGNoIGEgZW5kIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICApICA9IEVuZCBHcm91cFxuICAgICAgICAgICAgICAqXFwpID0gTWF0Y2ggYW55dGhpbmcgYW5kIHRoZW4gYSBjbG9zZSBwYXJlbnNcbiAgICAgICAgICApICA9IENsb3NlIG5vbi1jYXB0dXJpbmcgZ3JvdXBcbiAgICAgICAgICAqICA9IE1hdGNoIGFueXRoaW5nXG4gICAgICAgKSAgPSBDbG9zZSBjYXB0dXJpbmcgZ3JvdXBcblx0IFxcKSAgPSBNYXRjaCBhIGNsb3NlIHBhcmVuc1xuXG5cdCAvZ2kgID0gR2V0IGFsbCBtYXRjaGVzLCBub3QgdGhlIGZpcnN0LiAgQmUgY2FzZSBpbnNlbnNpdGl2ZS5cblx0ICovXG5cdHZhciBmaXhlZENzcyA9IGNzcy5yZXBsYWNlKC91cmxcXHMqXFwoKCg/OlteKShdfFxcKCg/OlteKShdK3xcXChbXikoXSpcXCkpKlxcKSkqKVxcKS9naSwgZnVuY3Rpb24oZnVsbE1hdGNoLCBvcmlnVXJsKSB7XG5cdFx0Ly8gc3RyaXAgcXVvdGVzIChpZiB0aGV5IGV4aXN0KVxuXHRcdHZhciB1bnF1b3RlZE9yaWdVcmwgPSBvcmlnVXJsXG5cdFx0XHQudHJpbSgpXG5cdFx0XHQucmVwbGFjZSgvXlwiKC4qKVwiJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KVxuXHRcdFx0LnJlcGxhY2UoL14nKC4qKSckLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pO1xuXG5cdFx0Ly8gYWxyZWFkeSBhIGZ1bGwgdXJsPyBubyBjaGFuZ2Vcblx0XHRpZiAoL14oI3xkYXRhOnxodHRwOlxcL1xcL3xodHRwczpcXC9cXC98ZmlsZTpcXC9cXC9cXC98XFxzKiQpL2kudGVzdCh1bnF1b3RlZE9yaWdVcmwpKSB7XG5cdFx0ICByZXR1cm4gZnVsbE1hdGNoO1xuXHRcdH1cblxuXHRcdC8vIGNvbnZlcnQgdGhlIHVybCB0byBhIGZ1bGwgdXJsXG5cdFx0dmFyIG5ld1VybDtcblxuXHRcdGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi8vXCIpID09PSAwKSB7XG5cdFx0ICBcdC8vVE9ETzogc2hvdWxkIHdlIGFkZCBwcm90b2NvbD9cblx0XHRcdG5ld1VybCA9IHVucXVvdGVkT3JpZ1VybDtcblx0XHR9IGVsc2UgaWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiL1wiKSA9PT0gMCkge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gdGhlIGJhc2UgdXJsXG5cdFx0XHRuZXdVcmwgPSBiYXNlVXJsICsgdW5xdW90ZWRPcmlnVXJsOyAvLyBhbHJlYWR5IHN0YXJ0cyB3aXRoICcvJ1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byBjdXJyZW50IGRpcmVjdG9yeVxuXHRcdFx0bmV3VXJsID0gY3VycmVudERpciArIHVucXVvdGVkT3JpZ1VybC5yZXBsYWNlKC9eXFwuXFwvLywgXCJcIik7IC8vIFN0cmlwIGxlYWRpbmcgJy4vJ1xuXHRcdH1cblxuXHRcdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgdXJsKC4uLilcblx0XHRyZXR1cm4gXCJ1cmwoXCIgKyBKU09OLnN0cmluZ2lmeShuZXdVcmwpICsgXCIpXCI7XG5cdH0pO1xuXG5cdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgY3NzXG5cdHJldHVybiBmaXhlZENzcztcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCJmdW5jdGlvbiBpc0Fic29sdXRlKHBhdGhuYW1lKSB7XG4gIHJldHVybiBwYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJztcbn1cblxuLy8gQWJvdXQgMS41eCBmYXN0ZXIgdGhhbiB0aGUgdHdvLWFyZyB2ZXJzaW9uIG9mIEFycmF5I3NwbGljZSgpXG5mdW5jdGlvbiBzcGxpY2VPbmUobGlzdCwgaW5kZXgpIHtcbiAgZm9yICh2YXIgaSA9IGluZGV4LCBrID0gaSArIDEsIG4gPSBsaXN0Lmxlbmd0aDsgayA8IG47IGkgKz0gMSwgayArPSAxKSB7XG4gICAgbGlzdFtpXSA9IGxpc3Rba107XG4gIH1cblxuICBsaXN0LnBvcCgpO1xufVxuXG4vLyBUaGlzIGltcGxlbWVudGF0aW9uIGlzIGJhc2VkIGhlYXZpbHkgb24gbm9kZSdzIHVybC5wYXJzZVxuZnVuY3Rpb24gcmVzb2x2ZVBhdGhuYW1lKHRvKSB7XG4gIHZhciBmcm9tID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAnJztcblxuICB2YXIgdG9QYXJ0cyA9IHRvICYmIHRvLnNwbGl0KCcvJykgfHwgW107XG4gIHZhciBmcm9tUGFydHMgPSBmcm9tICYmIGZyb20uc3BsaXQoJy8nKSB8fCBbXTtcblxuICB2YXIgaXNUb0FicyA9IHRvICYmIGlzQWJzb2x1dGUodG8pO1xuICB2YXIgaXNGcm9tQWJzID0gZnJvbSAmJiBpc0Fic29sdXRlKGZyb20pO1xuICB2YXIgbXVzdEVuZEFicyA9IGlzVG9BYnMgfHwgaXNGcm9tQWJzO1xuXG4gIGlmICh0byAmJiBpc0Fic29sdXRlKHRvKSkge1xuICAgIC8vIHRvIGlzIGFic29sdXRlXG4gICAgZnJvbVBhcnRzID0gdG9QYXJ0cztcbiAgfSBlbHNlIGlmICh0b1BhcnRzLmxlbmd0aCkge1xuICAgIC8vIHRvIGlzIHJlbGF0aXZlLCBkcm9wIHRoZSBmaWxlbmFtZVxuICAgIGZyb21QYXJ0cy5wb3AoKTtcbiAgICBmcm9tUGFydHMgPSBmcm9tUGFydHMuY29uY2F0KHRvUGFydHMpO1xuICB9XG5cbiAgaWYgKCFmcm9tUGFydHMubGVuZ3RoKSByZXR1cm4gJy8nO1xuXG4gIHZhciBoYXNUcmFpbGluZ1NsYXNoID0gdm9pZCAwO1xuICBpZiAoZnJvbVBhcnRzLmxlbmd0aCkge1xuICAgIHZhciBsYXN0ID0gZnJvbVBhcnRzW2Zyb21QYXJ0cy5sZW5ndGggLSAxXTtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gbGFzdCA9PT0gJy4nIHx8IGxhc3QgPT09ICcuLicgfHwgbGFzdCA9PT0gJyc7XG4gIH0gZWxzZSB7XG4gICAgaGFzVHJhaWxpbmdTbGFzaCA9IGZhbHNlO1xuICB9XG5cbiAgdmFyIHVwID0gMDtcbiAgZm9yICh2YXIgaSA9IGZyb21QYXJ0cy5sZW5ndGg7IGkgPj0gMDsgaS0tKSB7XG4gICAgdmFyIHBhcnQgPSBmcm9tUGFydHNbaV07XG5cbiAgICBpZiAocGFydCA9PT0gJy4nKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICB9IGVsc2UgaWYgKHBhcnQgPT09ICcuLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXArKztcbiAgICB9IGVsc2UgaWYgKHVwKSB7XG4gICAgICBzcGxpY2VPbmUoZnJvbVBhcnRzLCBpKTtcbiAgICAgIHVwLS07XG4gICAgfVxuICB9XG5cbiAgaWYgKCFtdXN0RW5kQWJzKSBmb3IgKDsgdXAtLTsgdXApIHtcbiAgICBmcm9tUGFydHMudW5zaGlmdCgnLi4nKTtcbiAgfWlmIChtdXN0RW5kQWJzICYmIGZyb21QYXJ0c1swXSAhPT0gJycgJiYgKCFmcm9tUGFydHNbMF0gfHwgIWlzQWJzb2x1dGUoZnJvbVBhcnRzWzBdKSkpIGZyb21QYXJ0cy51bnNoaWZ0KCcnKTtcblxuICB2YXIgcmVzdWx0ID0gZnJvbVBhcnRzLmpvaW4oJy8nKTtcblxuICBpZiAoaGFzVHJhaWxpbmdTbGFzaCAmJiByZXN1bHQuc3Vic3RyKC0xKSAhPT0gJy8nKSByZXN1bHQgKz0gJy8nO1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJlc29sdmVQYXRobmFtZTsiLCJ2YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbmZ1bmN0aW9uIHZhbHVlRXF1YWwoYSwgYikge1xuICBpZiAoYSA9PT0gYikgcmV0dXJuIHRydWU7XG5cbiAgaWYgKGEgPT0gbnVsbCB8fCBiID09IG51bGwpIHJldHVybiBmYWxzZTtcblxuICBpZiAoQXJyYXkuaXNBcnJheShhKSkge1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGIpICYmIGEubGVuZ3RoID09PSBiLmxlbmd0aCAmJiBhLmV2ZXJ5KGZ1bmN0aW9uIChpdGVtLCBpbmRleCkge1xuICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoaXRlbSwgYltpbmRleF0pO1xuICAgIH0pO1xuICB9XG5cbiAgdmFyIGFUeXBlID0gdHlwZW9mIGEgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKGEpO1xuICB2YXIgYlR5cGUgPSB0eXBlb2YgYiA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoYik7XG5cbiAgaWYgKGFUeXBlICE9PSBiVHlwZSkgcmV0dXJuIGZhbHNlO1xuXG4gIGlmIChhVHlwZSA9PT0gJ29iamVjdCcpIHtcbiAgICB2YXIgYVZhbHVlID0gYS52YWx1ZU9mKCk7XG4gICAgdmFyIGJWYWx1ZSA9IGIudmFsdWVPZigpO1xuXG4gICAgaWYgKGFWYWx1ZSAhPT0gYSB8fCBiVmFsdWUgIT09IGIpIHJldHVybiB2YWx1ZUVxdWFsKGFWYWx1ZSwgYlZhbHVlKTtcblxuICAgIHZhciBhS2V5cyA9IE9iamVjdC5rZXlzKGEpO1xuICAgIHZhciBiS2V5cyA9IE9iamVjdC5rZXlzKGIpO1xuXG4gICAgaWYgKGFLZXlzLmxlbmd0aCAhPT0gYktleXMubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG5cbiAgICByZXR1cm4gYUtleXMuZXZlcnkoZnVuY3Rpb24gKGtleSkge1xuICAgICAgcmV0dXJuIHZhbHVlRXF1YWwoYVtrZXldLCBiW2tleV0pO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2YWx1ZUVxdWFsOyIsImV4cG9ydCB2YXIgYWRkTGVhZGluZ1NsYXNoID0gZnVuY3Rpb24gYWRkTGVhZGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnLycgPyBwYXRoIDogJy8nICsgcGF0aDtcbn07XG5cbmV4cG9ydCB2YXIgc3RyaXBMZWFkaW5nU2xhc2ggPSBmdW5jdGlvbiBzdHJpcExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xufTtcblxuZXhwb3J0IHZhciBoYXNCYXNlbmFtZSA9IGZ1bmN0aW9uIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gbmV3IFJlZ0V4cCgnXicgKyBwcmVmaXggKyAnKFxcXFwvfFxcXFw/fCN8JCknLCAnaScpLnRlc3QocGF0aCk7XG59O1xuXG5leHBvcnQgdmFyIHN0cmlwQmFzZW5hbWUgPSBmdW5jdGlvbiBzdHJpcEJhc2VuYW1lKHBhdGgsIHByZWZpeCkge1xuICByZXR1cm4gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSA/IHBhdGguc3Vic3RyKHByZWZpeC5sZW5ndGgpIDogcGF0aDtcbn07XG5cbmV4cG9ydCB2YXIgc3RyaXBUcmFpbGluZ1NsYXNoID0gZnVuY3Rpb24gc3RyaXBUcmFpbGluZ1NsYXNoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguY2hhckF0KHBhdGgubGVuZ3RoIC0gMSkgPT09ICcvJyA/IHBhdGguc2xpY2UoMCwgLTEpIDogcGF0aDtcbn07XG5cbmV4cG9ydCB2YXIgcGFyc2VQYXRoID0gZnVuY3Rpb24gcGFyc2VQYXRoKHBhdGgpIHtcbiAgdmFyIHBhdGhuYW1lID0gcGF0aCB8fCAnLyc7XG4gIHZhciBzZWFyY2ggPSAnJztcbiAgdmFyIGhhc2ggPSAnJztcblxuICB2YXIgaGFzaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignIycpO1xuICBpZiAoaGFzaEluZGV4ICE9PSAtMSkge1xuICAgIGhhc2ggPSBwYXRobmFtZS5zdWJzdHIoaGFzaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBoYXNoSW5kZXgpO1xuICB9XG5cbiAgdmFyIHNlYXJjaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignPycpO1xuICBpZiAoc2VhcmNoSW5kZXggIT09IC0xKSB7XG4gICAgc2VhcmNoID0gcGF0aG5hbWUuc3Vic3RyKHNlYXJjaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBzZWFyY2hJbmRleCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcbiAgICBzZWFyY2g6IHNlYXJjaCA9PT0gJz8nID8gJycgOiBzZWFyY2gsXG4gICAgaGFzaDogaGFzaCA9PT0gJyMnID8gJycgOiBoYXNoXG4gIH07XG59O1xuXG5leHBvcnQgdmFyIGNyZWF0ZVBhdGggPSBmdW5jdGlvbiBjcmVhdGVQYXRoKGxvY2F0aW9uKSB7XG4gIHZhciBwYXRobmFtZSA9IGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgc2VhcmNoID0gbG9jYXRpb24uc2VhcmNoLFxuICAgICAgaGFzaCA9IGxvY2F0aW9uLmhhc2g7XG5cblxuICB2YXIgcGF0aCA9IHBhdGhuYW1lIHx8ICcvJztcblxuICBpZiAoc2VhcmNoICYmIHNlYXJjaCAhPT0gJz8nKSBwYXRoICs9IHNlYXJjaC5jaGFyQXQoMCkgPT09ICc/JyA/IHNlYXJjaCA6ICc/JyArIHNlYXJjaDtcblxuICBpZiAoaGFzaCAmJiBoYXNoICE9PSAnIycpIHBhdGggKz0gaGFzaC5jaGFyQXQoMCkgPT09ICcjJyA/IGhhc2ggOiAnIycgKyBoYXNoO1xuXG4gIHJldHVybiBwYXRoO1xufTsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5pbXBvcnQgcmVzb2x2ZVBhdGhuYW1lIGZyb20gJ3Jlc29sdmUtcGF0aG5hbWUnO1xuaW1wb3J0IHZhbHVlRXF1YWwgZnJvbSAndmFsdWUtZXF1YWwnO1xuaW1wb3J0IHsgcGFyc2VQYXRoIH0gZnJvbSAnLi9QYXRoVXRpbHMnO1xuXG5leHBvcnQgdmFyIGNyZWF0ZUxvY2F0aW9uID0gZnVuY3Rpb24gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSwgY3VycmVudExvY2F0aW9uKSB7XG4gIHZhciBsb2NhdGlvbiA9IHZvaWQgMDtcbiAgaWYgKHR5cGVvZiBwYXRoID09PSAnc3RyaW5nJykge1xuICAgIC8vIFR3by1hcmcgZm9ybTogcHVzaChwYXRoLCBzdGF0ZSlcbiAgICBsb2NhdGlvbiA9IHBhcnNlUGF0aChwYXRoKTtcbiAgICBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9IGVsc2Uge1xuICAgIC8vIE9uZS1hcmcgZm9ybTogcHVzaChsb2NhdGlvbilcbiAgICBsb2NhdGlvbiA9IF9leHRlbmRzKHt9LCBwYXRoKTtcblxuICAgIGlmIChsb2NhdGlvbi5wYXRobmFtZSA9PT0gdW5kZWZpbmVkKSBsb2NhdGlvbi5wYXRobmFtZSA9ICcnO1xuXG4gICAgaWYgKGxvY2F0aW9uLnNlYXJjaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLnNlYXJjaC5jaGFyQXQoMCkgIT09ICc/JykgbG9jYXRpb24uc2VhcmNoID0gJz8nICsgbG9jYXRpb24uc2VhcmNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5zZWFyY2ggPSAnJztcbiAgICB9XG5cbiAgICBpZiAobG9jYXRpb24uaGFzaCkge1xuICAgICAgaWYgKGxvY2F0aW9uLmhhc2guY2hhckF0KDApICE9PSAnIycpIGxvY2F0aW9uLmhhc2ggPSAnIycgKyBsb2NhdGlvbi5oYXNoO1xuICAgIH0gZWxzZSB7XG4gICAgICBsb2NhdGlvbi5oYXNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKHN0YXRlICE9PSB1bmRlZmluZWQgJiYgbG9jYXRpb24uc3RhdGUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24uc3RhdGUgPSBzdGF0ZTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgbG9jYXRpb24ucGF0aG5hbWUgPSBkZWNvZGVVUkkobG9jYXRpb24ucGF0aG5hbWUpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiBVUklFcnJvcikge1xuICAgICAgdGhyb3cgbmV3IFVSSUVycm9yKCdQYXRobmFtZSBcIicgKyBsb2NhdGlvbi5wYXRobmFtZSArICdcIiBjb3VsZCBub3QgYmUgZGVjb2RlZC4gJyArICdUaGlzIGlzIGxpa2VseSBjYXVzZWQgYnkgYW4gaW52YWxpZCBwZXJjZW50LWVuY29kaW5nLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgfVxuXG4gIGlmIChrZXkpIGxvY2F0aW9uLmtleSA9IGtleTtcblxuICBpZiAoY3VycmVudExvY2F0aW9uKSB7XG4gICAgLy8gUmVzb2x2ZSBpbmNvbXBsZXRlL3JlbGF0aXZlIHBhdGhuYW1lIHJlbGF0aXZlIHRvIGN1cnJlbnQgbG9jYXRpb24uXG4gICAgaWYgKCFsb2NhdGlvbi5wYXRobmFtZSkge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWU7XG4gICAgfSBlbHNlIGlmIChsb2NhdGlvbi5wYXRobmFtZS5jaGFyQXQoMCkgIT09ICcvJykge1xuICAgICAgbG9jYXRpb24ucGF0aG5hbWUgPSByZXNvbHZlUGF0aG5hbWUobG9jYXRpb24ucGF0aG5hbWUsIGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIFdoZW4gdGhlcmUgaXMgbm8gcHJpb3IgbG9jYXRpb24gYW5kIHBhdGhuYW1lIGlzIGVtcHR5LCBzZXQgaXQgdG8gL1xuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gJy8nO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBsb2NhdGlvbjtcbn07XG5cbmV4cG9ydCB2YXIgbG9jYXRpb25zQXJlRXF1YWwgPSBmdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbChhLCBiKSB7XG4gIHJldHVybiBhLnBhdGhuYW1lID09PSBiLnBhdGhuYW1lICYmIGEuc2VhcmNoID09PSBiLnNlYXJjaCAmJiBhLmhhc2ggPT09IGIuaGFzaCAmJiBhLmtleSA9PT0gYi5rZXkgJiYgdmFsdWVFcXVhbChhLnN0YXRlLCBiLnN0YXRlKTtcbn07IiwiaW1wb3J0IHdhcm5pbmcgZnJvbSAnd2FybmluZyc7XG5cbnZhciBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlciA9IGZ1bmN0aW9uIGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyKCkge1xuICB2YXIgcHJvbXB0ID0gbnVsbDtcblxuICB2YXIgc2V0UHJvbXB0ID0gZnVuY3Rpb24gc2V0UHJvbXB0KG5leHRQcm9tcHQpIHtcbiAgICB3YXJuaW5nKHByb21wdCA9PSBudWxsLCAnQSBoaXN0b3J5IHN1cHBvcnRzIG9ubHkgb25lIHByb21wdCBhdCBhIHRpbWUnKTtcblxuICAgIHByb21wdCA9IG5leHRQcm9tcHQ7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHByb21wdCA9PT0gbmV4dFByb21wdCkgcHJvbXB0ID0gbnVsbDtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBjb25maXJtVHJhbnNpdGlvblRvID0gZnVuY3Rpb24gY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBjYWxsYmFjaykge1xuICAgIC8vIFRPRE86IElmIGFub3RoZXIgdHJhbnNpdGlvbiBzdGFydHMgd2hpbGUgd2UncmUgc3RpbGwgY29uZmlybWluZ1xuICAgIC8vIHRoZSBwcmV2aW91cyBvbmUsIHdlIG1heSBlbmQgdXAgaW4gYSB3ZWlyZCBzdGF0ZS4gRmlndXJlIG91dCB0aGVcbiAgICAvLyBiZXN0IHdheSB0byBoYW5kbGUgdGhpcy5cbiAgICBpZiAocHJvbXB0ICE9IG51bGwpIHtcbiAgICAgIHZhciByZXN1bHQgPSB0eXBlb2YgcHJvbXB0ID09PSAnZnVuY3Rpb24nID8gcHJvbXB0KGxvY2F0aW9uLCBhY3Rpb24pIDogcHJvbXB0O1xuXG4gICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBnZXRVc2VyQ29uZmlybWF0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbihyZXN1bHQsIGNhbGxiYWNrKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB3YXJuaW5nKGZhbHNlLCAnQSBoaXN0b3J5IG5lZWRzIGEgZ2V0VXNlckNvbmZpcm1hdGlvbiBmdW5jdGlvbiBpbiBvcmRlciB0byB1c2UgYSBwcm9tcHQgbWVzc2FnZScpO1xuXG4gICAgICAgICAgY2FsbGJhY2sodHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFJldHVybiBmYWxzZSBmcm9tIGEgdHJhbnNpdGlvbiBob29rIHRvIGNhbmNlbCB0aGUgdHJhbnNpdGlvbi5cbiAgICAgICAgY2FsbGJhY2socmVzdWx0ICE9PSBmYWxzZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgbGlzdGVuZXJzID0gW107XG5cbiAgdmFyIGFwcGVuZExpc3RlbmVyID0gZnVuY3Rpb24gYXBwZW5kTGlzdGVuZXIoZm4pIHtcbiAgICB2YXIgaXNBY3RpdmUgPSB0cnVlO1xuXG4gICAgdmFyIGxpc3RlbmVyID0gZnVuY3Rpb24gbGlzdGVuZXIoKSB7XG4gICAgICBpZiAoaXNBY3RpdmUpIGZuLmFwcGx5KHVuZGVmaW5lZCwgYXJndW1lbnRzKTtcbiAgICB9O1xuXG4gICAgbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlzQWN0aXZlID0gZmFsc2U7XG4gICAgICBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIHJldHVybiBpdGVtICE9PSBsaXN0ZW5lcjtcbiAgICAgIH0pO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIG5vdGlmeUxpc3RlbmVycyA9IGZ1bmN0aW9uIG5vdGlmeUxpc3RlbmVycygpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgIHJldHVybiBsaXN0ZW5lci5hcHBseSh1bmRlZmluZWQsIGFyZ3MpO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiB7XG4gICAgc2V0UHJvbXB0OiBzZXRQcm9tcHQsXG4gICAgY29uZmlybVRyYW5zaXRpb25UbzogY29uZmlybVRyYW5zaXRpb25UbyxcbiAgICBhcHBlbmRMaXN0ZW5lcjogYXBwZW5kTGlzdGVuZXIsXG4gICAgbm90aWZ5TGlzdGVuZXJzOiBub3RpZnlMaXN0ZW5lcnNcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyOyIsImV4cG9ydCB2YXIgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcblxuZXhwb3J0IHZhciBhZGRFdmVudExpc3RlbmVyID0gZnVuY3Rpb24gYWRkRXZlbnRMaXN0ZW5lcihub2RlLCBldmVudCwgbGlzdGVuZXIpIHtcbiAgcmV0dXJuIG5vZGUuYWRkRXZlbnRMaXN0ZW5lciA/IG5vZGUuYWRkRXZlbnRMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIsIGZhbHNlKSA6IG5vZGUuYXR0YWNoRXZlbnQoJ29uJyArIGV2ZW50LCBsaXN0ZW5lcik7XG59O1xuXG5leHBvcnQgdmFyIHJlbW92ZUV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbiByZW1vdmVFdmVudExpc3RlbmVyKG5vZGUsIGV2ZW50LCBsaXN0ZW5lcikge1xuICByZXR1cm4gbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyID8gbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lciwgZmFsc2UpIDogbm9kZS5kZXRhY2hFdmVudCgnb24nICsgZXZlbnQsIGxpc3RlbmVyKTtcbn07XG5cbmV4cG9ydCB2YXIgZ2V0Q29uZmlybWF0aW9uID0gZnVuY3Rpb24gZ2V0Q29uZmlybWF0aW9uKG1lc3NhZ2UsIGNhbGxiYWNrKSB7XG4gIHJldHVybiBjYWxsYmFjayh3aW5kb3cuY29uZmlybShtZXNzYWdlKSk7XG59OyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWFsZXJ0XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpcyBzdXBwb3J0ZWQuIFRha2VuIGZyb20gTW9kZXJuaXpyLlxuICpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb2Rlcm5penIvTW9kZXJuaXpyL2Jsb2IvbWFzdGVyL2ZlYXR1cmUtZGV0ZWN0cy9oaXN0b3J5LmpzXG4gKiBjaGFuZ2VkIHRvIGF2b2lkIGZhbHNlIG5lZ2F0aXZlcyBmb3IgV2luZG93cyBQaG9uZXM6IGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JlYWN0LXJvdXRlci9pc3N1ZXMvNTg2XG4gKi9cbmV4cG9ydCB2YXIgc3VwcG9ydHNIaXN0b3J5ID0gZnVuY3Rpb24gc3VwcG9ydHNIaXN0b3J5KCkge1xuICB2YXIgdWEgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudDtcblxuICBpZiAoKHVhLmluZGV4T2YoJ0FuZHJvaWQgMi4nKSAhPT0gLTEgfHwgdWEuaW5kZXhPZignQW5kcm9pZCA0LjAnKSAhPT0gLTEpICYmIHVhLmluZGV4T2YoJ01vYmlsZSBTYWZhcmknKSAhPT0gLTEgJiYgdWEuaW5kZXhPZignQ2hyb21lJykgPT09IC0xICYmIHVhLmluZGV4T2YoJ1dpbmRvd3MgUGhvbmUnKSA9PT0gLTEpIHJldHVybiBmYWxzZTtcblxuICByZXR1cm4gd2luZG93Lmhpc3RvcnkgJiYgJ3B1c2hTdGF0ZScgaW4gd2luZG93Lmhpc3Rvcnk7XG59O1xuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBicm93c2VyIGZpcmVzIHBvcHN0YXRlIG9uIGhhc2ggY2hhbmdlLlxuICogSUUxMCBhbmQgSUUxMSBkbyBub3QuXG4gKi9cbmV4cG9ydCB2YXIgc3VwcG9ydHNQb3BTdGF0ZU9uSGFzaENoYW5nZSA9IGZ1bmN0aW9uIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdUcmlkZW50JykgPT09IC0xO1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIGZhbHNlIGlmIHVzaW5nIGdvKG4pIHdpdGggaGFzaCBoaXN0b3J5IGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQuXG4gKi9cbmV4cG9ydCB2YXIgc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2ggPSBmdW5jdGlvbiBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpIHtcbiAgcmV0dXJuIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ0ZpcmVmb3gnKSA9PT0gLTE7XG59O1xuXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiBhIGdpdmVuIHBvcHN0YXRlIGV2ZW50IGlzIGFuIGV4dHJhbmVvdXMgV2ViS2l0IGV2ZW50LlxuICogQWNjb3VudHMgZm9yIHRoZSBmYWN0IHRoYXQgQ2hyb21lIG9uIGlPUyBmaXJlcyByZWFsIHBvcHN0YXRlIGV2ZW50c1xuICogY29udGFpbmluZyB1bmRlZmluZWQgc3RhdGUgd2hlbiBwcmVzc2luZyB0aGUgYmFjayBidXR0b24uXG4gKi9cbmV4cG9ydCB2YXIgaXNFeHRyYW5lb3VzUG9wc3RhdGVFdmVudCA9IGZ1bmN0aW9uIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuIGV2ZW50LnN0YXRlID09PSB1bmRlZmluZWQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdDcmlPUycpID09PSAtMTtcbn07IiwidmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5pbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAnaW52YXJpYW50JztcbmltcG9ydCB7IGNyZWF0ZUxvY2F0aW9uIH0gZnJvbSAnLi9Mb2NhdGlvblV0aWxzJztcbmltcG9ydCB7IGFkZExlYWRpbmdTbGFzaCwgc3RyaXBUcmFpbGluZ1NsYXNoLCBoYXNCYXNlbmFtZSwgc3RyaXBCYXNlbmFtZSwgY3JlYXRlUGF0aCB9IGZyb20gJy4vUGF0aFV0aWxzJztcbmltcG9ydCBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlciBmcm9tICcuL2NyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyJztcbmltcG9ydCB7IGNhblVzZURPTSwgYWRkRXZlbnRMaXN0ZW5lciwgcmVtb3ZlRXZlbnRMaXN0ZW5lciwgZ2V0Q29uZmlybWF0aW9uLCBzdXBwb3J0c0hpc3RvcnksIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UsIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQgfSBmcm9tICcuL0RPTVV0aWxzJztcblxudmFyIFBvcFN0YXRlRXZlbnQgPSAncG9wc3RhdGUnO1xudmFyIEhhc2hDaGFuZ2VFdmVudCA9ICdoYXNoY2hhbmdlJztcblxudmFyIGdldEhpc3RvcnlTdGF0ZSA9IGZ1bmN0aW9uIGdldEhpc3RvcnlTdGF0ZSgpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gd2luZG93Lmhpc3Rvcnkuc3RhdGUgfHwge307XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBJRSAxMSBzb21ldGltZXMgdGhyb3dzIHdoZW4gYWNjZXNzaW5nIHdpbmRvdy5oaXN0b3J5LnN0YXRlXG4gICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9SZWFjdFRyYWluaW5nL2hpc3RvcnkvcHVsbC8yODlcbiAgICByZXR1cm4ge307XG4gIH1cbn07XG5cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgdXNlcyB0aGUgSFRNTDUgaGlzdG9yeSBBUEkgaW5jbHVkaW5nXG4gKiBwdXNoU3RhdGUsIHJlcGxhY2VTdGF0ZSwgYW5kIHRoZSBwb3BzdGF0ZSBldmVudC5cbiAqL1xudmFyIGNyZWF0ZUJyb3dzZXJIaXN0b3J5ID0gZnVuY3Rpb24gY3JlYXRlQnJvd3Nlckhpc3RvcnkoKSB7XG4gIHZhciBwcm9wcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG5cbiAgaW52YXJpYW50KGNhblVzZURPTSwgJ0Jyb3dzZXIgaGlzdG9yeSBuZWVkcyBhIERPTScpO1xuXG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Vc2VIaXN0b3J5ID0gc3VwcG9ydHNIaXN0b3J5KCk7XG4gIHZhciBuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lciA9ICFzdXBwb3J0c1BvcFN0YXRlT25IYXNoQ2hhbmdlKCk7XG5cbiAgdmFyIF9wcm9wcyRmb3JjZVJlZnJlc2ggPSBwcm9wcy5mb3JjZVJlZnJlc2gsXG4gICAgICBmb3JjZVJlZnJlc2ggPSBfcHJvcHMkZm9yY2VSZWZyZXNoID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IF9wcm9wcyRmb3JjZVJlZnJlc2gsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBwcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdW5kZWZpbmVkID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IHByb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHVuZGVmaW5lZCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuXG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG5cbiAgdmFyIGdldERPTUxvY2F0aW9uID0gZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oaGlzdG9yeVN0YXRlKSB7XG4gICAgdmFyIF9yZWYgPSBoaXN0b3J5U3RhdGUgfHwge30sXG4gICAgICAgIGtleSA9IF9yZWYua2V5LFxuICAgICAgICBzdGF0ZSA9IF9yZWYuc3RhdGU7XG5cbiAgICB2YXIgX3dpbmRvdyRsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbixcbiAgICAgICAgcGF0aG5hbWUgPSBfd2luZG93JGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgICBzZWFyY2ggPSBfd2luZG93JGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgICAgaGFzaCA9IF93aW5kb3ckbG9jYXRpb24uaGFzaDtcblxuXG4gICAgdmFyIHBhdGggPSBwYXRobmFtZSArIHNlYXJjaCArIGhhc2g7XG5cbiAgICB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpO1xuXG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG5cbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGtleSk7XG4gIH07XG5cbiAgdmFyIGNyZWF0ZUtleSA9IGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH07XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICB2YXIgc2V0U3RhdGUgPSBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH07XG5cbiAgdmFyIGhhbmRsZVBvcFN0YXRlID0gZnVuY3Rpb24gaGFuZGxlUG9wU3RhdGUoZXZlbnQpIHtcbiAgICAvLyBJZ25vcmUgZXh0cmFuZW91cyBwb3BzdGF0ZSBldmVudHMgaW4gV2ViS2l0LlxuICAgIGlmIChpc0V4dHJhbmVvdXNQb3BzdGF0ZUV2ZW50KGV2ZW50KSkgcmV0dXJuO1xuXG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGV2ZW50LnN0YXRlKSk7XG4gIH07XG5cbiAgdmFyIGhhbmRsZUhhc2hDaGFuZ2UgPSBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSkpO1xuICB9O1xuXG4gIHZhciBmb3JjZU5leHRQb3AgPSBmYWxzZTtcblxuICB2YXIgaGFuZGxlUG9wID0gZnVuY3Rpb24gaGFuZGxlUG9wKGxvY2F0aW9uKSB7XG4gICAgaWYgKGZvcmNlTmV4dFBvcCkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gICAgICBzZXRTdGF0ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG5cbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIHJldmVydFBvcCA9IGZ1bmN0aW9uIHJldmVydFBvcChmcm9tTG9jYXRpb24pIHtcbiAgICB2YXIgdG9Mb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG5cbiAgICAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIGtleXMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3Iga2V5cyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxLZXlzLmluZGV4T2YodG9Mb2NhdGlvbi5rZXkpO1xuXG4gICAgaWYgKHRvSW5kZXggPT09IC0xKSB0b0luZGV4ID0gMDtcblxuICAgIHZhciBmcm9tSW5kZXggPSBhbGxLZXlzLmluZGV4T2YoZnJvbUxvY2F0aW9uLmtleSk7XG5cbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcblxuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSk7XG4gIHZhciBhbGxLZXlzID0gW2luaXRpYWxMb2NhdGlvbi5rZXldO1xuXG4gIC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICB2YXIgY3JlYXRlSHJlZiA9IGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICByZXR1cm4gYmFzZW5hbWUgKyBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgfTtcblxuICB2YXIgcHVzaCA9IGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKCEoKHR5cGVvZiBwYXRoID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihwYXRoKSkgPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgaHJlZiA9IGNyZWF0ZUhyZWYobG9jYXRpb24pO1xuICAgICAgdmFyIGtleSA9IGxvY2F0aW9uLmtleSxcbiAgICAgICAgICBzdGF0ZSA9IGxvY2F0aW9uLnN0YXRlO1xuXG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucHVzaFN0YXRlKHsga2V5OiBrZXksIHN0YXRlOiBzdGF0ZSB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuICAgICAgICAgIHZhciBuZXh0S2V5cyA9IGFsbEtleXMuc2xpY2UoMCwgcHJldkluZGV4ID09PSAtMSA/IDAgOiBwcmV2SW5kZXggKyAxKTtcblxuICAgICAgICAgIG5leHRLZXlzLnB1c2gobG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBhbGxLZXlzID0gbmV4dEtleXM7XG5cbiAgICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0Jyb3dzZXIgaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZSBpbiBicm93c2VycyB0aGF0IGRvIG5vdCBzdXBwb3J0IEhUTUw1IGhpc3RvcnknKTtcblxuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIHJlcGxhY2UgPSBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgd2FybmluZyghKCh0eXBlb2YgcGF0aCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YocGF0aCkpID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuXG4gICAgICBpZiAoY2FuVXNlSGlzdG9yeSkge1xuICAgICAgICBnbG9iYWxIaXN0b3J5LnJlcGxhY2VTdGF0ZSh7IGtleToga2V5LCBzdGF0ZTogc3RhdGUgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxLZXlzLmluZGV4T2YoaGlzdG9yeS5sb2NhdGlvbi5rZXkpO1xuXG4gICAgICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbEtleXNbcHJldkluZGV4XSA9IGxvY2F0aW9uLmtleTtcblxuICAgICAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpO1xuXG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIHZhciBnbyA9IGZ1bmN0aW9uIGdvKG4pIHtcbiAgICBnbG9iYWxIaXN0b3J5LmdvKG4pO1xuICB9O1xuXG4gIHZhciBnb0JhY2sgPSBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgcmV0dXJuIGdvKC0xKTtcbiAgfTtcblxuICB2YXIgZ29Gb3J3YXJkID0gZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIHJldHVybiBnbygxKTtcbiAgfTtcblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgdmFyIGNoZWNrRE9NTGlzdGVuZXJzID0gZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEpIHtcbiAgICAgIGFkZEV2ZW50TGlzdGVuZXIod2luZG93LCBQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG5cbiAgICAgIGlmIChuZWVkc0hhc2hDaGFuZ2VMaXN0ZW5lcikgYWRkRXZlbnRMaXN0ZW5lcih3aW5kb3csIEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICByZW1vdmVFdmVudExpc3RlbmVyKHdpbmRvdywgUG9wU3RhdGVFdmVudCwgaGFuZGxlUG9wU3RhdGUpO1xuXG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIHJlbW92ZUV2ZW50TGlzdGVuZXIod2luZG93LCBIYXNoQ2hhbmdlRXZlbnQsIGhhbmRsZUhhc2hDaGFuZ2UpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgdmFyIGJsb2NrID0gZnVuY3Rpb24gYmxvY2soKSB7XG4gICAgdmFyIHByb21wdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogZmFsc2U7XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGxpc3RlbiA9IGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIHZhciB1bmxpc3RlbiA9IHRyYW5zaXRpb25NYW5hZ2VyLmFwcGVuZExpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH07XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBnbG9iYWxIaXN0b3J5Lmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBpbml0aWFsTG9jYXRpb24sXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuXG4gIHJldHVybiBoaXN0b3J5O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlQnJvd3Nlckhpc3Rvcnk7IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgd2FybmluZyBmcm9tIFwid2FybmluZ1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwiaW52YXJpYW50XCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHB1dHRpbmcgaGlzdG9yeSBvbiBjb250ZXh0LlxuICovXG5cbnZhciBSb3V0ZXIgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBSb3V0ZXIoKSB7XG4gICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSb3V0ZXIpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLnN0YXRlID0ge1xuICAgICAgbWF0Y2g6IF90aGlzLmNvbXB1dGVNYXRjaChfdGhpcy5wcm9wcy5oaXN0b3J5LmxvY2F0aW9uLnBhdGhuYW1lKVxuICAgIH0sIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICB9XG5cbiAgUm91dGVyLnByb3RvdHlwZS5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJvdXRlcjogX2V4dGVuZHMoe30sIHRoaXMuY29udGV4dC5yb3V0ZXIsIHtcbiAgICAgICAgaGlzdG9yeTogdGhpcy5wcm9wcy5oaXN0b3J5LFxuICAgICAgICByb3V0ZToge1xuICAgICAgICAgIGxvY2F0aW9uOiB0aGlzLnByb3BzLmhpc3RvcnkubG9jYXRpb24sXG4gICAgICAgICAgbWF0Y2g6IHRoaXMuc3RhdGUubWF0Y2hcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9O1xuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcHV0ZU1hdGNoID0gZnVuY3Rpb24gY29tcHV0ZU1hdGNoKHBhdGhuYW1lKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGg6IFwiL1wiLFxuICAgICAgdXJsOiBcIi9cIixcbiAgICAgIHBhcmFtczoge30sXG4gICAgICBpc0V4YWN0OiBwYXRobmFtZSA9PT0gXCIvXCJcbiAgICB9O1xuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUuY29tcG9uZW50V2lsbE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbE1vdW50KCkge1xuICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgdmFyIF9wcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGNoaWxkcmVuID0gX3Byb3BzLmNoaWxkcmVuLFxuICAgICAgICBoaXN0b3J5ID0gX3Byb3BzLmhpc3Rvcnk7XG5cblxuICAgIGludmFyaWFudChjaGlsZHJlbiA9PSBudWxsIHx8IFJlYWN0LkNoaWxkcmVuLmNvdW50KGNoaWxkcmVuKSA9PT0gMSwgXCJBIDxSb3V0ZXI+IG1heSBoYXZlIG9ubHkgb25lIGNoaWxkIGVsZW1lbnRcIik7XG5cbiAgICAvLyBEbyB0aGlzIGhlcmUgc28gd2UgY2FuIHNldFN0YXRlIHdoZW4gYSA8UmVkaXJlY3Q+IGNoYW5nZXMgdGhlXG4gICAgLy8gbG9jYXRpb24gaW4gY29tcG9uZW50V2lsbE1vdW50LiBUaGlzIGhhcHBlbnMgZS5nLiB3aGVuIGRvaW5nXG4gICAgLy8gc2VydmVyIHJlbmRlcmluZyB1c2luZyBhIDxTdGF0aWNSb3V0ZXI+LlxuICAgIHRoaXMudW5saXN0ZW4gPSBoaXN0b3J5Lmxpc3RlbihmdW5jdGlvbiAoKSB7XG4gICAgICBfdGhpczIuc2V0U3RhdGUoe1xuICAgICAgICBtYXRjaDogX3RoaXMyLmNvbXB1dGVNYXRjaChoaXN0b3J5LmxvY2F0aW9uLnBhdGhuYW1lKVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICB3YXJuaW5nKHRoaXMucHJvcHMuaGlzdG9yeSA9PT0gbmV4dFByb3BzLmhpc3RvcnksIFwiWW91IGNhbm5vdCBjaGFuZ2UgPFJvdXRlciBoaXN0b3J5PlwiKTtcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy51bmxpc3RlbigpO1xuICB9O1xuXG4gIFJvdXRlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBjaGlsZHJlbiA9IHRoaXMucHJvcHMuY2hpbGRyZW47XG5cbiAgICByZXR1cm4gY2hpbGRyZW4gPyBSZWFjdC5DaGlsZHJlbi5vbmx5KGNoaWxkcmVuKSA6IG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGVcbn07XG5Sb3V0ZXIuY29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5vYmplY3Rcbn07XG5Sb3V0ZXIuY2hpbGRDb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IFJvdXRlcjsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5pbXBvcnQgd2FybmluZyBmcm9tICd3YXJuaW5nJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAnaW52YXJpYW50JztcbmltcG9ydCB7IGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCB9IGZyb20gJy4vTG9jYXRpb25VdGlscyc7XG5pbXBvcnQgeyBhZGRMZWFkaW5nU2xhc2gsIHN0cmlwTGVhZGluZ1NsYXNoLCBzdHJpcFRyYWlsaW5nU2xhc2gsIGhhc0Jhc2VuYW1lLCBzdHJpcEJhc2VuYW1lLCBjcmVhdGVQYXRoIH0gZnJvbSAnLi9QYXRoVXRpbHMnO1xuaW1wb3J0IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIGZyb20gJy4vY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXInO1xuaW1wb3J0IHsgY2FuVXNlRE9NLCBhZGRFdmVudExpc3RlbmVyLCByZW1vdmVFdmVudExpc3RlbmVyLCBnZXRDb25maXJtYXRpb24sIHN1cHBvcnRzR29XaXRob3V0UmVsb2FkVXNpbmdIYXNoIH0gZnJvbSAnLi9ET01VdGlscyc7XG5cbnZhciBIYXNoQ2hhbmdlRXZlbnQgPSAnaGFzaGNoYW5nZSc7XG5cbnZhciBIYXNoUGF0aENvZGVycyA9IHtcbiAgaGFzaGJhbmc6IHtcbiAgICBlbmNvZGVQYXRoOiBmdW5jdGlvbiBlbmNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aCA6ICchLycgKyBzdHJpcExlYWRpbmdTbGFzaChwYXRoKTtcbiAgICB9LFxuICAgIGRlY29kZVBhdGg6IGZ1bmN0aW9uIGRlY29kZVBhdGgocGF0aCkge1xuICAgICAgcmV0dXJuIHBhdGguY2hhckF0KDApID09PSAnIScgPyBwYXRoLnN1YnN0cigxKSA6IHBhdGg7XG4gICAgfVxuICB9LFxuICBub3NsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogc3RyaXBMZWFkaW5nU2xhc2gsXG4gICAgZGVjb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoXG4gIH0sXG4gIHNsYXNoOiB7XG4gICAgZW5jb2RlUGF0aDogYWRkTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9XG59O1xuXG52YXIgZ2V0SGFzaFBhdGggPSBmdW5jdGlvbiBnZXRIYXNoUGF0aCgpIHtcbiAgLy8gV2UgY2FuJ3QgdXNlIHdpbmRvdy5sb2NhdGlvbi5oYXNoIGhlcmUgYmVjYXVzZSBpdCdzIG5vdFxuICAvLyBjb25zaXN0ZW50IGFjcm9zcyBicm93c2VycyAtIEZpcmVmb3ggd2lsbCBwcmUtZGVjb2RlIGl0IVxuICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuICB2YXIgaGFzaEluZGV4ID0gaHJlZi5pbmRleE9mKCcjJyk7XG4gIHJldHVybiBoYXNoSW5kZXggPT09IC0xID8gJycgOiBocmVmLnN1YnN0cmluZyhoYXNoSW5kZXggKyAxKTtcbn07XG5cbnZhciBwdXNoSGFzaFBhdGggPSBmdW5jdGlvbiBwdXNoSGFzaFBhdGgocGF0aCkge1xuICByZXR1cm4gd2luZG93LmxvY2F0aW9uLmhhc2ggPSBwYXRoO1xufTtcblxudmFyIHJlcGxhY2VIYXNoUGF0aCA9IGZ1bmN0aW9uIHJlcGxhY2VIYXNoUGF0aChwYXRoKSB7XG4gIHZhciBoYXNoSW5kZXggPSB3aW5kb3cubG9jYXRpb24uaHJlZi5pbmRleE9mKCcjJyk7XG5cbiAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2Uod2luZG93LmxvY2F0aW9uLmhyZWYuc2xpY2UoMCwgaGFzaEluZGV4ID49IDAgPyBoYXNoSW5kZXggOiAwKSArICcjJyArIHBhdGgpO1xufTtcblxudmFyIGNyZWF0ZUhhc2hIaXN0b3J5ID0gZnVuY3Rpb24gY3JlYXRlSGFzaEhpc3RvcnkoKSB7XG4gIHZhciBwcm9wcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG5cbiAgaW52YXJpYW50KGNhblVzZURPTSwgJ0hhc2ggaGlzdG9yeSBuZWVkcyBhIERPTScpO1xuXG4gIHZhciBnbG9iYWxIaXN0b3J5ID0gd2luZG93Lmhpc3Rvcnk7XG4gIHZhciBjYW5Hb1dpdGhvdXRSZWxvYWQgPSBzdXBwb3J0c0dvV2l0aG91dFJlbG9hZFVzaW5nSGFzaCgpO1xuXG4gIHZhciBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBwcm9wcy5nZXRVc2VyQ29uZmlybWF0aW9uLFxuICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbiA9IF9wcm9wcyRnZXRVc2VyQ29uZmlybSA9PT0gdW5kZWZpbmVkID8gZ2V0Q29uZmlybWF0aW9uIDogX3Byb3BzJGdldFVzZXJDb25maXJtLFxuICAgICAgX3Byb3BzJGhhc2hUeXBlID0gcHJvcHMuaGFzaFR5cGUsXG4gICAgICBoYXNoVHlwZSA9IF9wcm9wcyRoYXNoVHlwZSA9PT0gdW5kZWZpbmVkID8gJ3NsYXNoJyA6IF9wcm9wcyRoYXNoVHlwZTtcblxuICB2YXIgYmFzZW5hbWUgPSBwcm9wcy5iYXNlbmFtZSA/IHN0cmlwVHJhaWxpbmdTbGFzaChhZGRMZWFkaW5nU2xhc2gocHJvcHMuYmFzZW5hbWUpKSA6ICcnO1xuXG4gIHZhciBfSGFzaFBhdGhDb2RlcnMkaGFzaFQgPSBIYXNoUGF0aENvZGVyc1toYXNoVHlwZV0sXG4gICAgICBlbmNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmVuY29kZVBhdGgsXG4gICAgICBkZWNvZGVQYXRoID0gX0hhc2hQYXRoQ29kZXJzJGhhc2hULmRlY29kZVBhdGg7XG5cblxuICB2YXIgZ2V0RE9NTG9jYXRpb24gPSBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbigpIHtcbiAgICB2YXIgcGF0aCA9IGRlY29kZVBhdGgoZ2V0SGFzaFBhdGgoKSk7XG5cbiAgICB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpO1xuXG4gICAgaWYgKGJhc2VuYW1lKSBwYXRoID0gc3RyaXBCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSk7XG5cbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCk7XG4gIH07XG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICB2YXIgc2V0U3RhdGUgPSBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBnbG9iYWxIaXN0b3J5Lmxlbmd0aDtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH07XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICB2YXIgaWdub3JlUGF0aCA9IG51bGw7XG5cbiAgdmFyIGhhbmRsZUhhc2hDaGFuZ2UgPSBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuXG4gICAgaWYgKHBhdGggIT09IGVuY29kZWRQYXRoKSB7XG4gICAgICAvLyBFbnN1cmUgd2UgYWx3YXlzIGhhdmUgYSBwcm9wZXJseS1lbmNvZGVkIGhhc2guXG4gICAgICByZXBsYWNlSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgbG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICAgICAgdmFyIHByZXZMb2NhdGlvbiA9IGhpc3RvcnkubG9jYXRpb247XG5cbiAgICAgIGlmICghZm9yY2VOZXh0UG9wICYmIGxvY2F0aW9uc0FyZUVxdWFsKHByZXZMb2NhdGlvbiwgbG9jYXRpb24pKSByZXR1cm47IC8vIEEgaGFzaGNoYW5nZSBkb2Vzbid0IGFsd2F5cyA9PSBsb2NhdGlvbiBjaGFuZ2UuXG5cbiAgICAgIGlmIChpZ25vcmVQYXRoID09PSBjcmVhdGVQYXRoKGxvY2F0aW9uKSkgcmV0dXJuOyAvLyBJZ25vcmUgdGhpcyBjaGFuZ2U7IHdlIGFscmVhZHkgc2V0U3RhdGUgaW4gcHVzaC9yZXBsYWNlLlxuXG4gICAgICBpZ25vcmVQYXRoID0gbnVsbDtcblxuICAgICAgaGFuZGxlUG9wKGxvY2F0aW9uKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGhhbmRsZVBvcCA9IGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuXG4gICAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgICBpZiAob2spIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7IGFjdGlvbjogYWN0aW9uLCBsb2NhdGlvbjogbG9jYXRpb24gfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciByZXZlcnRQb3AgPSBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuXG4gICAgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBwYXRocyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBwYXRocyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKHRvTG9jYXRpb24pKTtcblxuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG5cbiAgICB2YXIgZnJvbUluZGV4ID0gYWxsUGF0aHMubGFzdEluZGV4T2YoY3JlYXRlUGF0aChmcm9tTG9jYXRpb24pKTtcblxuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuXG4gICAgdmFyIGRlbHRhID0gdG9JbmRleCAtIGZyb21JbmRleDtcblxuICAgIGlmIChkZWx0YSkge1xuICAgICAgZm9yY2VOZXh0UG9wID0gdHJ1ZTtcbiAgICAgIGdvKGRlbHRhKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gRW5zdXJlIHRoZSBoYXNoIGlzIGVuY29kZWQgcHJvcGVybHkgYmVmb3JlIGRvaW5nIGFueXRoaW5nIGVsc2UuXG4gIHZhciBwYXRoID0gZ2V0SGFzaFBhdGgoKTtcbiAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcblxuICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG5cbiAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IGdldERPTUxvY2F0aW9uKCk7XG4gIHZhciBhbGxQYXRocyA9IFtjcmVhdGVQYXRoKGluaXRpYWxMb2NhdGlvbildO1xuXG4gIC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICB2YXIgY3JlYXRlSHJlZiA9IGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICByZXR1cm4gJyMnICsgZW5jb2RlUGF0aChiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pKTtcbiAgfTtcblxuICB2YXIgcHVzaCA9IGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdIYXNoIGhpc3RvcnkgY2Fubm90IHB1c2ggc3RhdGU7IGl0IGlzIGlnbm9yZWQnKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgdmFyIHBhdGggPSBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbiAgICAgIHZhciBlbmNvZGVkUGF0aCA9IGVuY29kZVBhdGgoYmFzZW5hbWUgKyBwYXRoKTtcbiAgICAgIHZhciBoYXNoQ2hhbmdlZCA9IGdldEhhc2hQYXRoKCkgIT09IGVuY29kZWRQYXRoO1xuXG4gICAgICBpZiAoaGFzaENoYW5nZWQpIHtcbiAgICAgICAgLy8gV2UgY2Fubm90IHRlbGwgaWYgYSBoYXNoY2hhbmdlIHdhcyBjYXVzZWQgYnkgYSBQVVNILCBzbyB3ZSdkXG4gICAgICAgIC8vIHJhdGhlciBzZXRTdGF0ZSBoZXJlIGFuZCBpZ25vcmUgdGhlIGhhc2hjaGFuZ2UuIFRoZSBjYXZlYXQgaGVyZVxuICAgICAgICAvLyBpcyB0aGF0IG90aGVyIGhhc2ggaGlzdG9yaWVzIGluIHRoZSBwYWdlIHdpbGwgY29uc2lkZXIgaXQgYSBQT1AuXG4gICAgICAgIGlnbm9yZVBhdGggPSBwYXRoO1xuICAgICAgICBwdXNoSGFzaFBhdGgoZW5jb2RlZFBhdGgpO1xuXG4gICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgICAgdmFyIG5leHRQYXRocyA9IGFsbFBhdGhzLnNsaWNlKDAsIHByZXZJbmRleCA9PT0gLTEgPyAwIDogcHJldkluZGV4ICsgMSk7XG5cbiAgICAgICAgbmV4dFBhdGhzLnB1c2gocGF0aCk7XG4gICAgICAgIGFsbFBhdGhzID0gbmV4dFBhdGhzO1xuXG4gICAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdhcm5pbmcoZmFsc2UsICdIYXNoIGhpc3RvcnkgY2Fubm90IFBVU0ggdGhlIHNhbWUgcGF0aDsgYSBuZXcgZW50cnkgd2lsbCBub3QgYmUgYWRkZWQgdG8gdGhlIGhpc3Rvcnkgc3RhY2snKTtcblxuICAgICAgICBzZXRTdGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIHZhciByZXBsYWNlID0gZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcmVwbGFjZSBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFJFUExBQ0UsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICB9XG5cbiAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5pbmRleE9mKGNyZWF0ZVBhdGgoaGlzdG9yeS5sb2NhdGlvbikpO1xuXG4gICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsUGF0aHNbcHJldkluZGV4XSA9IHBhdGg7XG5cbiAgICAgIHNldFN0YXRlKHsgYWN0aW9uOiBhY3Rpb24sIGxvY2F0aW9uOiBsb2NhdGlvbiB9KTtcbiAgICB9KTtcbiAgfTtcblxuICB2YXIgZ28gPSBmdW5jdGlvbiBnbyhuKSB7XG4gICAgd2FybmluZyhjYW5Hb1dpdGhvdXRSZWxvYWQsICdIYXNoIGhpc3RvcnkgZ28obikgY2F1c2VzIGEgZnVsbCBwYWdlIHJlbG9hZCBpbiB0aGlzIGJyb3dzZXInKTtcblxuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH07XG5cbiAgdmFyIGdvQmFjayA9IGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICByZXR1cm4gZ28oLTEpO1xuICB9O1xuXG4gIHZhciBnb0ZvcndhcmQgPSBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgcmV0dXJuIGdvKDEpO1xuICB9O1xuXG4gIHZhciBsaXN0ZW5lckNvdW50ID0gMDtcblxuICB2YXIgY2hlY2tET01MaXN0ZW5lcnMgPSBmdW5jdGlvbiBjaGVja0RPTUxpc3RlbmVycyhkZWx0YSkge1xuICAgIGxpc3RlbmVyQ291bnQgKz0gZGVsdGE7XG5cbiAgICBpZiAobGlzdGVuZXJDb3VudCA9PT0gMSkge1xuICAgICAgYWRkRXZlbnRMaXN0ZW5lcih3aW5kb3csIEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICByZW1vdmVFdmVudExpc3RlbmVyKHdpbmRvdywgSGFzaENoYW5nZUV2ZW50LCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIHZhciBibG9jayA9IGZ1bmN0aW9uIGJsb2NrKCkge1xuICAgIHZhciBwcm9tcHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGZhbHNlO1xuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBsaXN0ZW4gPSBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgdW5saXN0ZW4oKTtcbiAgICB9O1xuICB9O1xuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcblxuICByZXR1cm4gaGlzdG9yeTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUhhc2hIaXN0b3J5OyIsInZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuaW1wb3J0IHdhcm5pbmcgZnJvbSAnd2FybmluZyc7XG5pbXBvcnQgeyBjcmVhdGVQYXRoIH0gZnJvbSAnLi9QYXRoVXRpbHMnO1xuaW1wb3J0IHsgY3JlYXRlTG9jYXRpb24gfSBmcm9tICcuL0xvY2F0aW9uVXRpbHMnO1xuaW1wb3J0IGNyZWF0ZVRyYW5zaXRpb25NYW5hZ2VyIGZyb20gJy4vY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXInO1xuXG52YXIgY2xhbXAgPSBmdW5jdGlvbiBjbGFtcChuLCBsb3dlckJvdW5kLCB1cHBlckJvdW5kKSB7XG4gIHJldHVybiBNYXRoLm1pbihNYXRoLm1heChuLCBsb3dlckJvdW5kKSwgdXBwZXJCb3VuZCk7XG59O1xuXG4vKipcbiAqIENyZWF0ZXMgYSBoaXN0b3J5IG9iamVjdCB0aGF0IHN0b3JlcyBsb2NhdGlvbnMgaW4gbWVtb3J5LlxuICovXG52YXIgY3JlYXRlTWVtb3J5SGlzdG9yeSA9IGZ1bmN0aW9uIGNyZWF0ZU1lbW9yeUhpc3RvcnkoKSB7XG4gIHZhciBwcm9wcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gIHZhciBnZXRVc2VyQ29uZmlybWF0aW9uID0gcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIF9wcm9wcyRpbml0aWFsRW50cmllcyA9IHByb3BzLmluaXRpYWxFbnRyaWVzLFxuICAgICAgaW5pdGlhbEVudHJpZXMgPSBfcHJvcHMkaW5pdGlhbEVudHJpZXMgPT09IHVuZGVmaW5lZCA/IFsnLyddIDogX3Byb3BzJGluaXRpYWxFbnRyaWVzLFxuICAgICAgX3Byb3BzJGluaXRpYWxJbmRleCA9IHByb3BzLmluaXRpYWxJbmRleCxcbiAgICAgIGluaXRpYWxJbmRleCA9IF9wcm9wcyRpbml0aWFsSW5kZXggPT09IHVuZGVmaW5lZCA/IDAgOiBfcHJvcHMkaW5pdGlhbEluZGV4LFxuICAgICAgX3Byb3BzJGtleUxlbmd0aCA9IHByb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHVuZGVmaW5lZCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuXG5cbiAgdmFyIHRyYW5zaXRpb25NYW5hZ2VyID0gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKTtcblxuICB2YXIgc2V0U3RhdGUgPSBmdW5jdGlvbiBzZXRTdGF0ZShuZXh0U3RhdGUpIHtcbiAgICBfZXh0ZW5kcyhoaXN0b3J5LCBuZXh0U3RhdGUpO1xuXG4gICAgaGlzdG9yeS5sZW5ndGggPSBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfTtcblxuICB2YXIgY3JlYXRlS2V5ID0gZnVuY3Rpb24gY3JlYXRlS2V5KCkge1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwga2V5TGVuZ3RoKTtcbiAgfTtcblxuICB2YXIgaW5kZXggPSBjbGFtcChpbml0aWFsSW5kZXgsIDAsIGluaXRpYWxFbnRyaWVzLmxlbmd0aCAtIDEpO1xuICB2YXIgZW50cmllcyA9IGluaXRpYWxFbnRyaWVzLm1hcChmdW5jdGlvbiAoZW50cnkpIHtcbiAgICByZXR1cm4gdHlwZW9mIGVudHJ5ID09PSAnc3RyaW5nJyA/IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGNyZWF0ZUtleSgpKSA6IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGVudHJ5LmtleSB8fCBjcmVhdGVLZXkoKSk7XG4gIH0pO1xuXG4gIC8vIFB1YmxpYyBpbnRlcmZhY2VcblxuICB2YXIgY3JlYXRlSHJlZiA9IGNyZWF0ZVBhdGg7XG5cbiAgdmFyIHB1c2ggPSBmdW5jdGlvbiBwdXNoKHBhdGgsIHN0YXRlKSB7XG4gICAgd2FybmluZyghKCh0eXBlb2YgcGF0aCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YocGF0aCkpID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byBwdXNoIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpO1xuXG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuXG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcblxuICAgICAgdmFyIHByZXZJbmRleCA9IGhpc3RvcnkuaW5kZXg7XG4gICAgICB2YXIgbmV4dEluZGV4ID0gcHJldkluZGV4ICsgMTtcblxuICAgICAgdmFyIG5leHRFbnRyaWVzID0gaGlzdG9yeS5lbnRyaWVzLnNsaWNlKDApO1xuICAgICAgaWYgKG5leHRFbnRyaWVzLmxlbmd0aCA+IG5leHRJbmRleCkge1xuICAgICAgICBuZXh0RW50cmllcy5zcGxpY2UobmV4dEluZGV4LCBuZXh0RW50cmllcy5sZW5ndGggLSBuZXh0SW5kZXgsIGxvY2F0aW9uKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnB1c2gobG9jYXRpb24pO1xuICAgICAgfVxuXG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIGluZGV4OiBuZXh0SW5kZXgsXG4gICAgICAgIGVudHJpZXM6IG5leHRFbnRyaWVzXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICB2YXIgcmVwbGFjZSA9IGZ1bmN0aW9uIHJlcGxhY2UocGF0aCwgc3RhdGUpIHtcbiAgICB3YXJuaW5nKCEoKHR5cGVvZiBwYXRoID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihwYXRoKSkgPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHJlcGxhY2Ugd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJyk7XG5cbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG5cbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuXG4gICAgICBoaXN0b3J5LmVudHJpZXNbaGlzdG9yeS5pbmRleF0gPSBsb2NhdGlvbjtcblxuICAgICAgc2V0U3RhdGUoeyBhY3Rpb246IGFjdGlvbiwgbG9jYXRpb246IGxvY2F0aW9uIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIHZhciBnbyA9IGZ1bmN0aW9uIGdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gY2xhbXAoaGlzdG9yeS5pbmRleCArIG4sIDAsIGhpc3RvcnkuZW50cmllcy5sZW5ndGggLSAxKTtcblxuICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICB2YXIgbG9jYXRpb24gPSBoaXN0b3J5LmVudHJpZXNbbmV4dEluZGV4XTtcblxuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAob2spIHtcbiAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgICBpbmRleDogbmV4dEluZGV4XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gTWltaWMgdGhlIGJlaGF2aW9yIG9mIERPTSBoaXN0b3JpZXMgYnlcbiAgICAgICAgLy8gY2F1c2luZyBhIHJlbmRlciBhZnRlciBhIGNhbmNlbGxlZCBQT1AuXG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIGdvQmFjayA9IGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICByZXR1cm4gZ28oLTEpO1xuICB9O1xuXG4gIHZhciBnb0ZvcndhcmQgPSBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgcmV0dXJuIGdvKDEpO1xuICB9O1xuXG4gIHZhciBjYW5HbyA9IGZ1bmN0aW9uIGNhbkdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gaGlzdG9yeS5pbmRleCArIG47XG4gICAgcmV0dXJuIG5leHRJbmRleCA+PSAwICYmIG5leHRJbmRleCA8IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG4gIH07XG5cbiAgdmFyIGJsb2NrID0gZnVuY3Rpb24gYmxvY2soKSB7XG4gICAgdmFyIHByb21wdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogZmFsc2U7XG4gICAgcmV0dXJuIHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuICB9O1xuXG4gIHZhciBsaXN0ZW4gPSBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICB9O1xuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZW50cmllcy5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogZW50cmllc1tpbmRleF0sXG4gICAgaW5kZXg6IGluZGV4LFxuICAgIGVudHJpZXM6IGVudHJpZXMsXG4gICAgY3JlYXRlSHJlZjogY3JlYXRlSHJlZixcbiAgICBwdXNoOiBwdXNoLFxuICAgIHJlcGxhY2U6IHJlcGxhY2UsXG4gICAgZ286IGdvLFxuICAgIGdvQmFjazogZ29CYWNrLFxuICAgIGdvRm9yd2FyZDogZ29Gb3J3YXJkLFxuICAgIGNhbkdvOiBjYW5HbyxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcblxuICByZXR1cm4gaGlzdG9yeTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZU1lbW9yeUhpc3Rvcnk7IiwiLy8gV3JpdHRlbiBpbiB0aGlzIHJvdW5kIGFib3V0IHdheSBmb3IgYmFiZWwtdHJhbnNmb3JtLWltcG9ydHNcbmltcG9ydCBSb3V0ZXIgZnJvbSBcInJlYWN0LXJvdXRlci9lcy9Sb3V0ZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgUm91dGVyOyIsImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IHdhcm5pbmcgZnJvbSBcIndhcm5pbmdcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJIaXN0b3J5IGFzIGNyZWF0ZUhpc3RvcnkgfSBmcm9tIFwiaGlzdG9yeVwiO1xuaW1wb3J0IFJvdXRlciBmcm9tIFwiLi9Sb3V0ZXJcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgSFRNTDUgaGlzdG9yeS5cbiAqL1xuXG52YXIgQnJvd3NlclJvdXRlciA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhCcm93c2VyUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBCcm93c2VyUm91dGVyKCkge1xuICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQnJvd3NlclJvdXRlcik7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JldCA9IChfdGVtcCA9IChfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzKSwgX3RoaXMuaGlzdG9yeSA9IGNyZWF0ZUhpc3RvcnkoX3RoaXMucHJvcHMpLCBfdGVtcCksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgfVxuXG4gIEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEJyb3dzZXJSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBCcm93c2VyUm91dGVyIGFzIFJvdXRlciB9YC5cIik7XG4gIH07XG5cbiAgQnJvd3NlclJvdXRlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwgeyBoaXN0b3J5OiB0aGlzLmhpc3RvcnksIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuIH0pO1xuICB9O1xuXG4gIHJldHVybiBCcm93c2VyUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5Ccm93c2VyUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGZvcmNlUmVmcmVzaDogUHJvcFR5cGVzLmJvb2wsXG4gIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICBrZXlMZW5ndGg6IFByb3BUeXBlcy5udW1iZXIsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZVxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBCcm93c2VyUm91dGVyOyIsImltcG9ydCBwYXRoVG9SZWdleHAgZnJvbSBcInBhdGgtdG8tcmVnZXhwXCI7XG5cbnZhciBwYXR0ZXJuQ2FjaGUgPSB7fTtcbnZhciBjYWNoZUxpbWl0ID0gMTAwMDA7XG52YXIgY2FjaGVDb3VudCA9IDA7XG5cbnZhciBjb21waWxlUGF0aCA9IGZ1bmN0aW9uIGNvbXBpbGVQYXRoKHBhdHRlcm4sIG9wdGlvbnMpIHtcbiAgdmFyIGNhY2hlS2V5ID0gXCJcIiArIG9wdGlvbnMuZW5kICsgb3B0aW9ucy5zdHJpY3QgKyBvcHRpb25zLnNlbnNpdGl2ZTtcbiAgdmFyIGNhY2hlID0gcGF0dGVybkNhY2hlW2NhY2hlS2V5XSB8fCAocGF0dGVybkNhY2hlW2NhY2hlS2V5XSA9IHt9KTtcblxuICBpZiAoY2FjaGVbcGF0dGVybl0pIHJldHVybiBjYWNoZVtwYXR0ZXJuXTtcblxuICB2YXIga2V5cyA9IFtdO1xuICB2YXIgcmUgPSBwYXRoVG9SZWdleHAocGF0dGVybiwga2V5cywgb3B0aW9ucyk7XG4gIHZhciBjb21waWxlZFBhdHRlcm4gPSB7IHJlOiByZSwga2V5czoga2V5cyB9O1xuXG4gIGlmIChjYWNoZUNvdW50IDwgY2FjaGVMaW1pdCkge1xuICAgIGNhY2hlW3BhdHRlcm5dID0gY29tcGlsZWRQYXR0ZXJuO1xuICAgIGNhY2hlQ291bnQrKztcbiAgfVxuXG4gIHJldHVybiBjb21waWxlZFBhdHRlcm47XG59O1xuXG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgVVJMIHBhdGhuYW1lIHRvIGEgcGF0aCBwYXR0ZXJuLlxuICovXG52YXIgbWF0Y2hQYXRoID0gZnVuY3Rpb24gbWF0Y2hQYXRoKHBhdGhuYW1lKSB7XG4gIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcbiAgdmFyIHBhcmVudCA9IGFyZ3VtZW50c1syXTtcblxuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCIpIG9wdGlvbnMgPSB7IHBhdGg6IG9wdGlvbnMgfTtcblxuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgcGF0aCA9IF9vcHRpb25zLnBhdGgsXG4gICAgICBfb3B0aW9ucyRleGFjdCA9IF9vcHRpb25zLmV4YWN0LFxuICAgICAgZXhhY3QgPSBfb3B0aW9ucyRleGFjdCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfb3B0aW9ucyRleGFjdCxcbiAgICAgIF9vcHRpb25zJHN0cmljdCA9IF9vcHRpb25zLnN0cmljdCxcbiAgICAgIHN0cmljdCA9IF9vcHRpb25zJHN0cmljdCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfb3B0aW9ucyRzdHJpY3QsXG4gICAgICBfb3B0aW9ucyRzZW5zaXRpdmUgPSBfb3B0aW9ucy5zZW5zaXRpdmUsXG4gICAgICBzZW5zaXRpdmUgPSBfb3B0aW9ucyRzZW5zaXRpdmUgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogX29wdGlvbnMkc2Vuc2l0aXZlO1xuXG5cbiAgaWYgKHBhdGggPT0gbnVsbCkgcmV0dXJuIHBhcmVudDtcblxuICB2YXIgX2NvbXBpbGVQYXRoID0gY29tcGlsZVBhdGgocGF0aCwgeyBlbmQ6IGV4YWN0LCBzdHJpY3Q6IHN0cmljdCwgc2Vuc2l0aXZlOiBzZW5zaXRpdmUgfSksXG4gICAgICByZSA9IF9jb21waWxlUGF0aC5yZSxcbiAgICAgIGtleXMgPSBfY29tcGlsZVBhdGgua2V5cztcblxuICB2YXIgbWF0Y2ggPSByZS5leGVjKHBhdGhuYW1lKTtcblxuICBpZiAoIW1hdGNoKSByZXR1cm4gbnVsbDtcblxuICB2YXIgdXJsID0gbWF0Y2hbMF0sXG4gICAgICB2YWx1ZXMgPSBtYXRjaC5zbGljZSgxKTtcblxuICB2YXIgaXNFeGFjdCA9IHBhdGhuYW1lID09PSB1cmw7XG5cbiAgaWYgKGV4YWN0ICYmICFpc0V4YWN0KSByZXR1cm4gbnVsbDtcblxuICByZXR1cm4ge1xuICAgIHBhdGg6IHBhdGgsIC8vIHRoZSBwYXRoIHBhdHRlcm4gdXNlZCB0byBtYXRjaFxuICAgIHVybDogcGF0aCA9PT0gXCIvXCIgJiYgdXJsID09PSBcIlwiID8gXCIvXCIgOiB1cmwsIC8vIHRoZSBtYXRjaGVkIHBvcnRpb24gb2YgdGhlIFVSTFxuICAgIGlzRXhhY3Q6IGlzRXhhY3QsIC8vIHdoZXRoZXIgb3Igbm90IHdlIG1hdGNoZWQgZXhhY3RseVxuICAgIHBhcmFtczoga2V5cy5yZWR1Y2UoZnVuY3Rpb24gKG1lbW8sIGtleSwgaW5kZXgpIHtcbiAgICAgIG1lbW9ba2V5Lm5hbWVdID0gdmFsdWVzW2luZGV4XTtcbiAgICAgIHJldHVybiBtZW1vO1xuICAgIH0sIHt9KVxuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgbWF0Y2hQYXRoOyIsImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSBcIndhcm5pbmdcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcImludmFyaWFudFwiO1xuaW1wb3J0IG1hdGNoUGF0aCBmcm9tIFwiLi9tYXRjaFBhdGhcIjtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIHRoZSBmaXJzdCA8Um91dGU+IHRoYXQgbWF0Y2hlcy5cbiAqL1xuXG52YXIgU3dpdGNoID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFN3aXRjaCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3dpdGNoKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTd2l0Y2gpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBTd2l0Y2gucHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICBpbnZhcmlhbnQodGhpcy5jb250ZXh0LnJvdXRlciwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFN3aXRjaD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpO1xuICB9O1xuXG4gIFN3aXRjaC5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgd2FybmluZyghKG5leHRQcm9wcy5sb2NhdGlvbiAmJiAhdGhpcy5wcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpO1xuXG4gICAgd2FybmluZyghKCFuZXh0UHJvcHMubG9jYXRpb24gJiYgdGhpcy5wcm9wcy5sb2NhdGlvbiksICc8U3dpdGNoPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIGNvbnRyb2xsZWQgdG8gdW5jb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IHByb3ZpZGVkIGEgXCJsb2NhdGlvblwiIHByb3AgaW5pdGlhbGx5IGJ1dCBvbWl0dGVkIGl0IG9uIGEgc3Vic2VxdWVudCByZW5kZXIuJyk7XG4gIH07XG5cbiAgU3dpdGNoLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIHJvdXRlID0gdGhpcy5jb250ZXh0LnJvdXRlci5yb3V0ZTtcbiAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLnByb3BzLmNoaWxkcmVuO1xuXG4gICAgdmFyIGxvY2F0aW9uID0gdGhpcy5wcm9wcy5sb2NhdGlvbiB8fCByb3V0ZS5sb2NhdGlvbjtcblxuICAgIHZhciBtYXRjaCA9IHZvaWQgMCxcbiAgICAgICAgY2hpbGQgPSB2b2lkIDA7XG4gICAgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaChjaGlsZHJlbiwgZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgIGlmIChtYXRjaCA9PSBudWxsICYmIFJlYWN0LmlzVmFsaWRFbGVtZW50KGVsZW1lbnQpKSB7XG4gICAgICAgIHZhciBfZWxlbWVudCRwcm9wcyA9IGVsZW1lbnQucHJvcHMsXG4gICAgICAgICAgICBwYXRoUHJvcCA9IF9lbGVtZW50JHByb3BzLnBhdGgsXG4gICAgICAgICAgICBleGFjdCA9IF9lbGVtZW50JHByb3BzLmV4YWN0LFxuICAgICAgICAgICAgc3RyaWN0ID0gX2VsZW1lbnQkcHJvcHMuc3RyaWN0LFxuICAgICAgICAgICAgc2Vuc2l0aXZlID0gX2VsZW1lbnQkcHJvcHMuc2Vuc2l0aXZlLFxuICAgICAgICAgICAgZnJvbSA9IF9lbGVtZW50JHByb3BzLmZyb207XG5cbiAgICAgICAgdmFyIHBhdGggPSBwYXRoUHJvcCB8fCBmcm9tO1xuXG4gICAgICAgIGNoaWxkID0gZWxlbWVudDtcbiAgICAgICAgbWF0Y2ggPSBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIHsgcGF0aDogcGF0aCwgZXhhY3Q6IGV4YWN0LCBzdHJpY3Q6IHN0cmljdCwgc2Vuc2l0aXZlOiBzZW5zaXRpdmUgfSwgcm91dGUubWF0Y2gpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIG1hdGNoID8gUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkLCB7IGxvY2F0aW9uOiBsb2NhdGlvbiwgY29tcHV0ZWRNYXRjaDogbWF0Y2ggfSkgOiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBTd2l0Y2g7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblN3aXRjaC5jb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICByb3V0ZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG4gIH0pLmlzUmVxdWlyZWRcbn07XG5Td2l0Y2gucHJvcFR5cGVzID0ge1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0XG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IFN3aXRjaDsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IFN3aXRjaCBmcm9tIFwicmVhY3Qtcm91dGVyL2VzL1N3aXRjaFwiO1xuXG5leHBvcnQgZGVmYXVsdCBTd2l0Y2g7IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5pbXBvcnQgd2FybmluZyBmcm9tIFwid2FybmluZ1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwiaW52YXJpYW50XCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgbWF0Y2hQYXRoIGZyb20gXCIuL21hdGNoUGF0aFwiO1xuXG52YXIgaXNFbXB0eUNoaWxkcmVuID0gZnVuY3Rpb24gaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSB7XG4gIHJldHVybiBSZWFjdC5DaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPT09IDA7XG59O1xuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciBtYXRjaGluZyBhIHNpbmdsZSBwYXRoIGFuZCByZW5kZXJpbmcuXG4gKi9cblxudmFyIFJvdXRlID0gZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFJvdXRlLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBSb3V0ZSgpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJvdXRlKTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JENvbXBvbmVudC5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIG1hdGNoOiBfdGhpcy5jb21wdXRlTWF0Y2goX3RoaXMucHJvcHMsIF90aGlzLmNvbnRleHQucm91dGVyKVxuICAgIH0sIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICB9XG5cbiAgUm91dGUucHJvdG90eXBlLmdldENoaWxkQ29udGV4dCA9IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcm91dGVyOiBfZXh0ZW5kcyh7fSwgdGhpcy5jb250ZXh0LnJvdXRlciwge1xuICAgICAgICByb3V0ZToge1xuICAgICAgICAgIGxvY2F0aW9uOiB0aGlzLnByb3BzLmxvY2F0aW9uIHx8IHRoaXMuY29udGV4dC5yb3V0ZXIucm91dGUubG9jYXRpb24sXG4gICAgICAgICAgbWF0Y2g6IHRoaXMuc3RhdGUubWF0Y2hcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9O1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wdXRlTWF0Y2ggPSBmdW5jdGlvbiBjb21wdXRlTWF0Y2goX3JlZiwgcm91dGVyKSB7XG4gICAgdmFyIGNvbXB1dGVkTWF0Y2ggPSBfcmVmLmNvbXB1dGVkTWF0Y2gsXG4gICAgICAgIGxvY2F0aW9uID0gX3JlZi5sb2NhdGlvbixcbiAgICAgICAgcGF0aCA9IF9yZWYucGF0aCxcbiAgICAgICAgc3RyaWN0ID0gX3JlZi5zdHJpY3QsXG4gICAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcbiAgICAgICAgc2Vuc2l0aXZlID0gX3JlZi5zZW5zaXRpdmU7XG5cbiAgICBpZiAoY29tcHV0ZWRNYXRjaCkgcmV0dXJuIGNvbXB1dGVkTWF0Y2g7IC8vIDxTd2l0Y2g+IGFscmVhZHkgY29tcHV0ZWQgdGhlIG1hdGNoIGZvciB1c1xuXG4gICAgaW52YXJpYW50KHJvdXRlciwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlPiBvciB3aXRoUm91dGVyKCkgb3V0c2lkZSBhIDxSb3V0ZXI+XCIpO1xuXG4gICAgdmFyIHJvdXRlID0gcm91dGVyLnJvdXRlO1xuXG4gICAgdmFyIHBhdGhuYW1lID0gKGxvY2F0aW9uIHx8IHJvdXRlLmxvY2F0aW9uKS5wYXRobmFtZTtcblxuICAgIHJldHVybiBtYXRjaFBhdGgocGF0aG5hbWUsIHsgcGF0aDogcGF0aCwgc3RyaWN0OiBzdHJpY3QsIGV4YWN0OiBleGFjdCwgc2Vuc2l0aXZlOiBzZW5zaXRpdmUgfSwgcm91dGUubWF0Y2gpO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgd2FybmluZyghKHRoaXMucHJvcHMuY29tcG9uZW50ICYmIHRoaXMucHJvcHMucmVuZGVyKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSByZW5kZXI+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIik7XG5cbiAgICB3YXJuaW5nKCEodGhpcy5wcm9wcy5jb21wb25lbnQgJiYgdGhpcy5wcm9wcy5jaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKHRoaXMucHJvcHMuY2hpbGRyZW4pKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgcm91dGU7IDxSb3V0ZSBjaGlsZHJlbj4gd2lsbCBiZSBpZ25vcmVkXCIpO1xuXG4gICAgd2FybmluZyghKHRoaXMucHJvcHMucmVuZGVyICYmIHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSByZW5kZXI+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgY2hpbGRyZW4+IHdpbGwgYmUgaWdub3JlZFwiKTtcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzLCBuZXh0Q29udGV4dCkge1xuICAgIHdhcm5pbmcoIShuZXh0UHJvcHMubG9jYXRpb24gJiYgIXRoaXMucHJvcHMubG9jYXRpb24pLCAnPFJvdXRlPiBlbGVtZW50cyBzaG91bGQgbm90IGNoYW5nZSBmcm9tIHVuY29udHJvbGxlZCB0byBjb250cm9sbGVkIChvciB2aWNlIHZlcnNhKS4gWW91IGluaXRpYWxseSB1c2VkIG5vIFwibG9jYXRpb25cIiBwcm9wIGFuZCB0aGVuIHByb3ZpZGVkIG9uZSBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpO1xuXG4gICAgd2FybmluZyghKCFuZXh0UHJvcHMubG9jYXRpb24gJiYgdGhpcy5wcm9wcy5sb2NhdGlvbiksICc8Um91dGU+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKTtcblxuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgbWF0Y2g6IHRoaXMuY29tcHV0ZU1hdGNoKG5leHRQcm9wcywgbmV4dENvbnRleHQucm91dGVyKVxuICAgIH0pO1xuICB9O1xuXG4gIFJvdXRlLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIG1hdGNoID0gdGhpcy5zdGF0ZS5tYXRjaDtcbiAgICB2YXIgX3Byb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgY2hpbGRyZW4gPSBfcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgIGNvbXBvbmVudCA9IF9wcm9wcy5jb21wb25lbnQsXG4gICAgICAgIHJlbmRlciA9IF9wcm9wcy5yZW5kZXI7XG4gICAgdmFyIF9jb250ZXh0JHJvdXRlciA9IHRoaXMuY29udGV4dC5yb3V0ZXIsXG4gICAgICAgIGhpc3RvcnkgPSBfY29udGV4dCRyb3V0ZXIuaGlzdG9yeSxcbiAgICAgICAgcm91dGUgPSBfY29udGV4dCRyb3V0ZXIucm91dGUsXG4gICAgICAgIHN0YXRpY0NvbnRleHQgPSBfY29udGV4dCRyb3V0ZXIuc3RhdGljQ29udGV4dDtcblxuICAgIHZhciBsb2NhdGlvbiA9IHRoaXMucHJvcHMubG9jYXRpb24gfHwgcm91dGUubG9jYXRpb247XG4gICAgdmFyIHByb3BzID0geyBtYXRjaDogbWF0Y2gsIGxvY2F0aW9uOiBsb2NhdGlvbiwgaGlzdG9yeTogaGlzdG9yeSwgc3RhdGljQ29udGV4dDogc3RhdGljQ29udGV4dCB9O1xuXG4gICAgaWYgKGNvbXBvbmVudCkgcmV0dXJuIG1hdGNoID8gUmVhY3QuY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKSA6IG51bGw7XG5cbiAgICBpZiAocmVuZGVyKSByZXR1cm4gbWF0Y2ggPyByZW5kZXIocHJvcHMpIDogbnVsbDtcblxuICAgIGlmICh0eXBlb2YgY2hpbGRyZW4gPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIGNoaWxkcmVuKHByb3BzKTtcblxuICAgIGlmIChjaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSkgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLm9ubHkoY2hpbGRyZW4pO1xuXG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIFJvdXRlO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5Sb3V0ZS5wcm9wVHlwZXMgPSB7XG4gIGNvbXB1dGVkTWF0Y2g6IFByb3BUeXBlcy5vYmplY3QsIC8vIHByaXZhdGUsIGZyb20gPFN3aXRjaD5cbiAgcGF0aDogUHJvcFR5cGVzLnN0cmluZyxcbiAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICBzdHJpY3Q6IFByb3BUeXBlcy5ib29sLFxuICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICBjb21wb25lbnQ6IFByb3BUeXBlcy5mdW5jLFxuICByZW5kZXI6IFByb3BUeXBlcy5mdW5jLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5ub2RlXSksXG4gIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0XG59O1xuUm91dGUuY29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHJvdXRlOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gICAgc3RhdGljQ29udGV4dDogUHJvcFR5cGVzLm9iamVjdFxuICB9KVxufTtcblJvdXRlLmNoaWxkQ29udGV4dFR5cGVzID0ge1xuICByb3V0ZXI6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBSb3V0ZTsiLCIvLyBXcml0dGVuIGluIHRoaXMgcm91bmQgYWJvdXQgd2F5IGZvciBiYWJlbC10cmFuc2Zvcm0taW1wb3J0c1xuaW1wb3J0IFJvdXRlIGZyb20gXCJyZWFjdC1yb3V0ZXIvZXMvUm91dGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgUm91dGU7IiwiaW1wb3J0IHBhdGhUb1JlZ2V4cCBmcm9tIFwicGF0aC10by1yZWdleHBcIjtcblxudmFyIHBhdHRlcm5DYWNoZSA9IHt9O1xudmFyIGNhY2hlTGltaXQgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50ID0gMDtcblxudmFyIGNvbXBpbGVHZW5lcmF0b3IgPSBmdW5jdGlvbiBjb21waWxlR2VuZXJhdG9yKHBhdHRlcm4pIHtcbiAgdmFyIGNhY2hlS2V5ID0gcGF0dGVybjtcbiAgdmFyIGNhY2hlID0gcGF0dGVybkNhY2hlW2NhY2hlS2V5XSB8fCAocGF0dGVybkNhY2hlW2NhY2hlS2V5XSA9IHt9KTtcblxuICBpZiAoY2FjaGVbcGF0dGVybl0pIHJldHVybiBjYWNoZVtwYXR0ZXJuXTtcblxuICB2YXIgY29tcGlsZWRHZW5lcmF0b3IgPSBwYXRoVG9SZWdleHAuY29tcGlsZShwYXR0ZXJuKTtcblxuICBpZiAoY2FjaGVDb3VudCA8IGNhY2hlTGltaXQpIHtcbiAgICBjYWNoZVtwYXR0ZXJuXSA9IGNvbXBpbGVkR2VuZXJhdG9yO1xuICAgIGNhY2hlQ291bnQrKztcbiAgfVxuXG4gIHJldHVybiBjb21waWxlZEdlbmVyYXRvcjtcbn07XG5cbi8qKlxuICogUHVibGljIEFQSSBmb3IgZ2VuZXJhdGluZyBhIFVSTCBwYXRobmFtZSBmcm9tIGEgcGF0dGVybiBhbmQgcGFyYW1ldGVycy5cbiAqL1xudmFyIGdlbmVyYXRlUGF0aCA9IGZ1bmN0aW9uIGdlbmVyYXRlUGF0aCgpIHtcbiAgdmFyIHBhdHRlcm4gPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFwiL1wiO1xuICB2YXIgcGFyYW1zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcblxuICBpZiAocGF0dGVybiA9PT0gXCIvXCIpIHtcbiAgICByZXR1cm4gcGF0dGVybjtcbiAgfVxuICB2YXIgZ2VuZXJhdG9yID0gY29tcGlsZUdlbmVyYXRvcihwYXR0ZXJuKTtcbiAgcmV0dXJuIGdlbmVyYXRvcihwYXJhbXMsIHsgcHJldHR5OiB0cnVlIH0pO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZ2VuZXJhdGVQYXRoOyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSBcIndhcm5pbmdcIjtcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSBcImludmFyaWFudFwiO1xuaW1wb3J0IHsgY3JlYXRlTG9jYXRpb24sIGxvY2F0aW9uc0FyZUVxdWFsIH0gZnJvbSBcImhpc3RvcnlcIjtcbmltcG9ydCBnZW5lcmF0ZVBhdGggZnJvbSBcIi4vZ2VuZXJhdGVQYXRoXCI7XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIHVwZGF0aW5nIHRoZSBsb2NhdGlvbiBwcm9ncmFtbWF0aWNhbGx5XG4gKiB3aXRoIGEgY29tcG9uZW50LlxuICovXG5cbnZhciBSZWRpcmVjdCA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhSZWRpcmVjdCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUmVkaXJlY3QoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJlZGlyZWN0KTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgUmVkaXJlY3QucHJvdG90eXBlLmlzU3RhdGljID0gZnVuY3Rpb24gaXNTdGF0aWMoKSB7XG4gICAgcmV0dXJuIHRoaXMuY29udGV4dC5yb3V0ZXIgJiYgdGhpcy5jb250ZXh0LnJvdXRlci5zdGF0aWNDb250ZXh0O1xuICB9O1xuXG4gIFJlZGlyZWN0LnByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgaW52YXJpYW50KHRoaXMuY29udGV4dC5yb3V0ZXIsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSZWRpcmVjdD4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpO1xuXG4gICAgaWYgKHRoaXMuaXNTdGF0aWMoKSkgdGhpcy5wZXJmb3JtKCk7XG4gIH07XG5cbiAgUmVkaXJlY3QucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgaWYgKCF0aGlzLmlzU3RhdGljKCkpIHRoaXMucGVyZm9ybSgpO1xuICB9O1xuXG4gIFJlZGlyZWN0LnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzKSB7XG4gICAgdmFyIHByZXZUbyA9IGNyZWF0ZUxvY2F0aW9uKHByZXZQcm9wcy50byk7XG4gICAgdmFyIG5leHRUbyA9IGNyZWF0ZUxvY2F0aW9uKHRoaXMucHJvcHMudG8pO1xuXG4gICAgaWYgKGxvY2F0aW9uc0FyZUVxdWFsKHByZXZUbywgbmV4dFRvKSkge1xuICAgICAgd2FybmluZyhmYWxzZSwgXCJZb3UgdHJpZWQgdG8gcmVkaXJlY3QgdG8gdGhlIHNhbWUgcm91dGUgeW91J3JlIGN1cnJlbnRseSBvbjogXCIgKyAoXCJcXFwiXCIgKyBuZXh0VG8ucGF0aG5hbWUgKyBuZXh0VG8uc2VhcmNoICsgXCJcXFwiXCIpKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLnBlcmZvcm0oKTtcbiAgfTtcblxuICBSZWRpcmVjdC5wcm90b3R5cGUuY29tcHV0ZVRvID0gZnVuY3Rpb24gY29tcHV0ZVRvKF9yZWYpIHtcbiAgICB2YXIgY29tcHV0ZWRNYXRjaCA9IF9yZWYuY29tcHV0ZWRNYXRjaCxcbiAgICAgICAgdG8gPSBfcmVmLnRvO1xuXG4gICAgaWYgKGNvbXB1dGVkTWF0Y2gpIHtcbiAgICAgIGlmICh0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmV0dXJuIGdlbmVyYXRlUGF0aCh0bywgY29tcHV0ZWRNYXRjaC5wYXJhbXMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIF9leHRlbmRzKHt9LCB0bywge1xuICAgICAgICAgIHBhdGhuYW1lOiBnZW5lcmF0ZVBhdGgodG8ucGF0aG5hbWUsIGNvbXB1dGVkTWF0Y2gucGFyYW1zKVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdG87XG4gIH07XG5cbiAgUmVkaXJlY3QucHJvdG90eXBlLnBlcmZvcm0gPSBmdW5jdGlvbiBwZXJmb3JtKCkge1xuICAgIHZhciBoaXN0b3J5ID0gdGhpcy5jb250ZXh0LnJvdXRlci5oaXN0b3J5O1xuICAgIHZhciBwdXNoID0gdGhpcy5wcm9wcy5wdXNoO1xuXG4gICAgdmFyIHRvID0gdGhpcy5jb21wdXRlVG8odGhpcy5wcm9wcyk7XG5cbiAgICBpZiAocHVzaCkge1xuICAgICAgaGlzdG9yeS5wdXNoKHRvKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaGlzdG9yeS5yZXBsYWNlKHRvKTtcbiAgICB9XG4gIH07XG5cbiAgUmVkaXJlY3QucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICByZXR1cm4gUmVkaXJlY3Q7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblJlZGlyZWN0LnByb3BUeXBlcyA9IHtcbiAgY29tcHV0ZWRNYXRjaDogUHJvcFR5cGVzLm9iamVjdCwgLy8gcHJpdmF0ZSwgZnJvbSA8U3dpdGNoPlxuICBwdXNoOiBQcm9wVHlwZXMuYm9vbCxcbiAgZnJvbTogUHJvcFR5cGVzLnN0cmluZyxcbiAgdG86IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3RdKS5pc1JlcXVpcmVkXG59O1xuUmVkaXJlY3QuZGVmYXVsdFByb3BzID0ge1xuICBwdXNoOiBmYWxzZVxufTtcblJlZGlyZWN0LmNvbnRleHRUeXBlcyA9IHtcbiAgcm91dGVyOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICBwdXNoOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgICAgcmVwbGFjZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxuICAgIH0pLmlzUmVxdWlyZWQsXG4gICAgc3RhdGljQ29udGV4dDogUHJvcFR5cGVzLm9iamVjdFxuICB9KS5pc1JlcXVpcmVkXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IFJlZGlyZWN0OyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgUmVkaXJlY3QgZnJvbSBcInJlYWN0LXJvdXRlci9lcy9SZWRpcmVjdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBSZWRpcmVjdDsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMob2JqLCBrZXlzKSB7IHZhciB0YXJnZXQgPSB7fTsgZm9yICh2YXIgaSBpbiBvYmopIHsgaWYgKGtleXMuaW5kZXhPZihpKSA+PSAwKSBjb250aW51ZTsgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBpKSkgY29udGludWU7IHRhcmdldFtpXSA9IG9ialtpXTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBob2lzdFN0YXRpY3MgZnJvbSBcImhvaXN0LW5vbi1yZWFjdC1zdGF0aWNzXCI7XG5pbXBvcnQgUm91dGUgZnJvbSBcIi4vUm91dGVcIjtcblxuLyoqXG4gKiBBIHB1YmxpYyBoaWdoZXItb3JkZXIgY29tcG9uZW50IHRvIGFjY2VzcyB0aGUgaW1wZXJhdGl2ZSBBUElcbiAqL1xudmFyIHdpdGhSb3V0ZXIgPSBmdW5jdGlvbiB3aXRoUm91dGVyKENvbXBvbmVudCkge1xuICB2YXIgQyA9IGZ1bmN0aW9uIEMocHJvcHMpIHtcbiAgICB2YXIgd3JhcHBlZENvbXBvbmVudFJlZiA9IHByb3BzLndyYXBwZWRDb21wb25lbnRSZWYsXG4gICAgICAgIHJlbWFpbmluZ1Byb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHByb3BzLCBbXCJ3cmFwcGVkQ29tcG9uZW50UmVmXCJdKTtcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7XG4gICAgICBjaGlsZHJlbjogZnVuY3Rpb24gY2hpbGRyZW4ocm91dGVDb21wb25lbnRQcm9wcykge1xuICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9leHRlbmRzKHt9LCByZW1haW5pbmdQcm9wcywgcm91dGVDb21wb25lbnRQcm9wcywge1xuICAgICAgICAgIHJlZjogd3JhcHBlZENvbXBvbmVudFJlZlxuICAgICAgICB9KSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgQy5kaXNwbGF5TmFtZSA9IFwid2l0aFJvdXRlcihcIiArIChDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9uZW50Lm5hbWUpICsgXCIpXCI7XG4gIEMuV3JhcHBlZENvbXBvbmVudCA9IENvbXBvbmVudDtcbiAgQy5wcm9wVHlwZXMgPSB7XG4gICAgd3JhcHBlZENvbXBvbmVudFJlZjogUHJvcFR5cGVzLmZ1bmNcbiAgfTtcblxuICByZXR1cm4gaG9pc3RTdGF0aWNzKEMsIENvbXBvbmVudCk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB3aXRoUm91dGVyOyIsIi8vIFdyaXR0ZW4gaW4gdGhpcyByb3VuZCBhYm91dCB3YXkgZm9yIGJhYmVsLXRyYW5zZm9ybS1pbXBvcnRzXG5pbXBvcnQgd2l0aFJvdXRlciBmcm9tIFwicmVhY3Qtcm91dGVyL2VzL3dpdGhSb3V0ZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgd2l0aFJvdXRlcjsiLCJleHBvcnQgY29uc3QgZ2V0ID0gdXJsID0+IHtcbiAgcmV0dXJuIGZldGNoKHVybCkudGhlbihyZXMgPT4gcmVzLmpzb24oKSk7XG59O1xuIiwiaW1wb3J0IHsgZ2V0IH0gZnJvbSAnLi9yZXF1ZXN0JztcblxuY29uc3QgUEFHRV9TSVpFID0gMjU7XG5cbmV4cG9ydCBjb25zdCBnZXRBcnRpc3RzID0gKHNlYXJjaE5hbWUsIHBhZ2UgPSAwKSA9PiB7XG4gIGNvbnN0IG9mZnNldCA9IChwYWdlIC0gMSkgKiAyNTtcbiAgcmV0dXJuIGdldChcbiAgICBgaHR0cDovL211c2ljYnJhaW56Lm9yZy93cy8yL2FydGlzdD9xdWVyeT0ke3NlYXJjaE5hbWV9JmxpbWl0PSR7UEFHRV9TSVpFfSZvZmZzZXQ9JHtvZmZzZXR9JmZtdD1qc29uYFxuICApLnRoZW4oKHsgY291bnQsIGFydGlzdHMgfSkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICBwYWdlczogTWF0aC5jZWlsKGNvdW50IC8gUEFHRV9TSVpFKSxcbiAgICAgIGFydGlzdHM6IGFydGlzdHMubWFwKGFydGlzdCA9PiAoe1xuICAgICAgICBuYW1lOiBhcnRpc3QubmFtZSxcbiAgICAgICAgZGVzY3JpcHRpb246IGFydGlzdC5kaXNhbWJpZ3VhdGlvbixcbiAgICAgICAgaWQ6IGFydGlzdC5pZFxuICAgICAgfSkpXG4gICAgfTtcbiAgfSk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0QXJ0aXN0ID0gaWQgPT4ge1xuICByZXR1cm4gZ2V0KFxuICAgIGBodHRwOi8vbXVzaWNicmFpbnoub3JnL3dzLzIvYXJ0aXN0LyR7aWR9P2ZtdD1qc29uJmluYz13b3Jrc2BcbiAgKS50aGVuKGFydGlzdCA9PiAoe1xuICAgIGlkOiBhcnRpc3QuaWQsXG4gICAgbmFtZTogYXJ0aXN0Lm5hbWUsXG4gICAgZGVzY3JpcHRpb246IGFydGlzdC5kaXNhbWJpZ3VhdGlvbixcbiAgICB3b3JrczogYXJ0aXN0LndvcmtzXG4gIH0pKTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRMeXJpY3MgPSAoYXJ0aXN0LCB0aXRsZSkgPT4ge1xuICByZXR1cm4gZ2V0KGBodHRwczovL2FwaS5seXJpY3Mub3ZoL3YxLyR7YXJ0aXN0fS8ke3RpdGxlfWApLnRoZW4ocmVzdWx0ID0+ICh7XG4gICAgbHlyaWNzOiByZXN1bHQubHlyaWNzXG4gIH0pKTtcbn07XG4iLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMob2JqLCBrZXlzKSB7IHZhciB0YXJnZXQgPSB7fTsgZm9yICh2YXIgaSBpbiBvYmopIHsgaWYgKGtleXMuaW5kZXhPZihpKSA+PSAwKSBjb250aW51ZTsgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBpKSkgY29udGludWU7IHRhcmdldFtpXSA9IG9ialtpXTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwiaW52YXJpYW50XCI7XG5pbXBvcnQgeyBjcmVhdGVMb2NhdGlvbiB9IGZyb20gXCJoaXN0b3J5XCI7XG5cbnZhciBpc01vZGlmaWVkRXZlbnQgPSBmdW5jdGlvbiBpc01vZGlmaWVkRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuICEhKGV2ZW50Lm1ldGFLZXkgfHwgZXZlbnQuYWx0S2V5IHx8IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQuc2hpZnRLZXkpO1xufTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcmVuZGVyaW5nIGEgaGlzdG9yeS1hd2FyZSA8YT4uXG4gKi9cblxudmFyIExpbmsgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoTGluaywgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTGluaygpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExpbmspO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLmhhbmRsZUNsaWNrID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBpZiAoX3RoaXMucHJvcHMub25DbGljaykgX3RoaXMucHJvcHMub25DbGljayhldmVudCk7XG5cbiAgICAgIGlmICghZXZlbnQuZGVmYXVsdFByZXZlbnRlZCAmJiAvLyBvbkNsaWNrIHByZXZlbnRlZCBkZWZhdWx0XG4gICAgICBldmVudC5idXR0b24gPT09IDAgJiYgLy8gaWdub3JlIGV2ZXJ5dGhpbmcgYnV0IGxlZnQgY2xpY2tzXG4gICAgICAhX3RoaXMucHJvcHMudGFyZ2V0ICYmIC8vIGxldCBicm93c2VyIGhhbmRsZSBcInRhcmdldD1fYmxhbmtcIiBldGMuXG4gICAgICAhaXNNb2RpZmllZEV2ZW50KGV2ZW50KSAvLyBpZ25vcmUgY2xpY2tzIHdpdGggbW9kaWZpZXIga2V5c1xuICAgICAgKSB7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgIHZhciBoaXN0b3J5ID0gX3RoaXMuY29udGV4dC5yb3V0ZXIuaGlzdG9yeTtcbiAgICAgICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICAgICAgcmVwbGFjZSA9IF90aGlzJHByb3BzLnJlcGxhY2UsXG4gICAgICAgICAgICAgIHRvID0gX3RoaXMkcHJvcHMudG87XG5cblxuICAgICAgICAgIGlmIChyZXBsYWNlKSB7XG4gICAgICAgICAgICBoaXN0b3J5LnJlcGxhY2UodG8pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBoaXN0b3J5LnB1c2godG8pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sIF90ZW1wKSwgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oX3RoaXMsIF9yZXQpO1xuICB9XG5cbiAgTGluay5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHZhciBfcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICByZXBsYWNlID0gX3Byb3BzLnJlcGxhY2UsXG4gICAgICAgIHRvID0gX3Byb3BzLnRvLFxuICAgICAgICBpbm5lclJlZiA9IF9wcm9wcy5pbm5lclJlZixcbiAgICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3Byb3BzLCBbXCJyZXBsYWNlXCIsIFwidG9cIiwgXCJpbm5lclJlZlwiXSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcblxuICAgIGludmFyaWFudCh0aGlzLmNvbnRleHQucm91dGVyLCBcIllvdSBzaG91bGQgbm90IHVzZSA8TGluaz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpO1xuXG4gICAgaW52YXJpYW50KHRvICE9PSB1bmRlZmluZWQsICdZb3UgbXVzdCBzcGVjaWZ5IHRoZSBcInRvXCIgcHJvcGVydHknKTtcblxuICAgIHZhciBoaXN0b3J5ID0gdGhpcy5jb250ZXh0LnJvdXRlci5oaXN0b3J5O1xuXG4gICAgdmFyIGxvY2F0aW9uID0gdHlwZW9mIHRvID09PSBcInN0cmluZ1wiID8gY3JlYXRlTG9jYXRpb24odG8sIG51bGwsIG51bGwsIGhpc3RvcnkubG9jYXRpb24pIDogdG87XG5cbiAgICB2YXIgaHJlZiA9IGhpc3RvcnkuY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIF9leHRlbmRzKHt9LCBwcm9wcywgeyBvbkNsaWNrOiB0aGlzLmhhbmRsZUNsaWNrLCBocmVmOiBocmVmLCByZWY6IGlubmVyUmVmIH0pKTtcbiAgfTtcblxuICByZXR1cm4gTGluaztcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuTGluay5wcm9wVHlwZXMgPSB7XG4gIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICB0YXJnZXQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHJlcGxhY2U6IFByb3BUeXBlcy5ib29sLFxuICB0bzogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pLmlzUmVxdWlyZWQsXG4gIGlubmVyUmVmOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuY10pXG59O1xuTGluay5kZWZhdWx0UHJvcHMgPSB7XG4gIHJlcGxhY2U6IGZhbHNlXG59O1xuTGluay5jb250ZXh0VHlwZXMgPSB7XG4gIHJvdXRlcjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBoaXN0b3J5OiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgICAgcHVzaDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICAgIHJlcGxhY2U6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgICBjcmVhdGVIcmVmOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG4gICAgfSkuaXNSZXF1aXJlZFxuICB9KS5pc1JlcXVpcmVkXG59O1xuXG5cbmV4cG9ydCBkZWZhdWx0IExpbms7IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7IFJPVVRFUyB9IGZyb20gJy4uLy4uL3JvdXRlcy9yb3V0ZXMnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuY29uc3QgQXJ0aXN0ID0gKHsgbmFtZSwgZGVzY3JpcHRpb24sIGlkIH0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPGgzPlxuICAgICAgICB7bmFtZX0gLSB7ZGVzY3JpcHRpb259XG4gICAgICA8L2gzPlxuICAgICAgPExpbmsgdG89e1JPVVRFUy5BUlRJU1QubGlua1RvKGlkKX0+R2V0IFdvcmtzIGJ5IHtuYW1lfS48L0xpbms+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5BcnRpc3QucHJvcFR5cGVzID0ge1xuICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIGRlc2NyaXB0aW9uOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBpZDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkXG59O1xuXG5leHBvcnQgZGVmYXVsdCBBcnRpc3Q7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuL1BhZ2luZy5jc3MnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuY29uc3QgUGFnaW5nID0gKHsgY3VycmVudFBhZ2UsIHRvdGFsUGFnZXMsIHVwZGF0ZVBhZ2UgfSkgPT4ge1xuICBsZXQgcHJldmlvdXNCdXR0b24gPSBudWxsO1xuICBpZihjdXJyZW50UGFnZSA+IDEpIHtcbiAgICBwcmV2aW91c0J1dHRvbiA9IChcbiAgICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gdXBkYXRlUGFnZShjdXJyZW50UGFnZSAtIDEpfT4mbHQ7PC9idXR0b24+XG4gICAgKTtcbiAgfVxuICBsZXQgbmV4dEJ1dHRvbiA9IG51bGw7XG4gIGlmKGN1cnJlbnRQYWdlIDwgdG90YWxQYWdlcykge1xuICAgIG5leHRCdXR0b24gPSAoXG4gICAgICA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IHVwZGF0ZVBhZ2UoY3VycmVudFBhZ2UgKyAxKX0+Jmd0OzwvYnV0dG9uPlxuICAgICk7XG4gIH1cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnBhZ2luZ30+XG4gICAgICB7cHJldmlvdXNCdXR0b259XG4gICAgICA8c3Bhbj5cbiAgICAgICAge2N1cnJlbnRQYWdlfSBvdXQgb2Yge3RvdGFsUGFnZXN9XG4gICAgICA8L3NwYW4+XG4gICAgICB7bmV4dEJ1dHRvbn1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cblBhZ2luZy5wcm9wVHlwZXMgPSB7XG4gIGN1cnJlbnRQYWdlOiBQcm9wVHlwZXMubnVtYmVyLFxuICB0b3RhbFBhZ2VzOiBQcm9wVHlwZXMubnVtYmVyLFxuICB1cGRhdGVQYWdlOiBQcm9wVHlwZXMuZnVuY1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUGFnaW5nO1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCwgRnJhZ21lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHF1ZXJ5U3RyaW5nIGZyb20gJ3F1ZXJ5c3RyaW5nJztcbmltcG9ydCB7IHdpdGhSb3V0ZXIgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7IGdldEFydGlzdHMgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9tdXNpY1NlYXJjaCc7XG5pbXBvcnQgeyBST1VURVMgfSBmcm9tICcuLi8uLi9yb3V0ZXMvcm91dGVzJztcbmltcG9ydCBBcnRpc3QgZnJvbSAnLi4vYXJ0aXN0cy9BcnRpc3QnO1xuaW1wb3J0IFBhZ2luZyBmcm9tICcuLi9wYWdpbmcvUGFnaW5nJztcblxuY2xhc3MgU2VhcmNoIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZFxuICB9O1xuXG4gIHN0YXRlID0ge1xuICAgIGN1cnJlbnRQYWdlOiAxLFxuICAgIHRvdGFsUGFnZXM6IG51bGwsXG4gICAgYXJ0aXN0czogW11cbiAgfTtcblxuICBkb1NlYXJjaCA9ICgpID0+IHtcbiAgICBjb25zdCB7IHNlYXJjaFRlcm0gfSA9IHF1ZXJ5U3RyaW5nLnBhcnNlKFxuICAgICAgdGhpcy5wcm9wcy5sb2NhdGlvbi5zZWFyY2guc2xpY2UoMSlcbiAgICApO1xuICAgIGlmKCFzZWFyY2hUZXJtKSByZXR1cm4gdGhpcy5zZXRTdGF0ZSh7IGFydGlzdHM6IFtdIH0pO1xuXG4gICAgZ2V0QXJ0aXN0cyhzZWFyY2hUZXJtLCB0aGlzLnN0YXRlLmN1cnJlbnRQYWdlKS50aGVuKCh7IHBhZ2VzLCBhcnRpc3RzIH0pID0+XG4gICAgICB0aGlzLnNldFN0YXRlKHsgdG90YWxQYWdlczogcGFnZXMsIGFydGlzdHMgfSlcbiAgICApO1xuICB9O1xuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuZG9TZWFyY2goKTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICBpZihwcmV2UHJvcHMubG9jYXRpb24uc2VhcmNoICE9PSB0aGlzLnByb3BzLmxvY2F0aW9uLnNlYXJjaCkge1xuICAgICAgdGhpcy5kb1NlYXJjaCgpO1xuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZUhhbmRsZVBhZ2UgPSBwYWdlID0+IHtcbiAgICB0aGlzLnNldFN0YXRlKHsgY3VycmVudFBhZ2U6IHBhZ2UgfSwgKCkgPT4ge1xuICAgICAgdGhpcy5kb1NlYXJjaCgpO1xuICAgIH0pO1xuICB9O1xuXG4gIHVwZGF0ZVNlYXJjaFRlcm0gPSBldmVudCA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCBzZWFyY2hUZXJtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NlYXJjaFRlcm0nKS52YWx1ZTtcbiAgICBjb25zdCBzZWFyY2hRdWVyeSA9IHF1ZXJ5U3RyaW5nLnN0cmluZ2lmeSh7IHNlYXJjaFRlcm0gfSk7XG4gICAgdGhpcy5wcm9wcy5oaXN0b3J5LnB1c2goe1xuICAgICAgcGF0aE5hbWU6IFJPVVRFUy5TRUFSQ0gucGF0aCxcbiAgICAgIHNlYXJjaDogc2VhcmNoUXVlcnlcbiAgICB9KTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBjdXJyZW50UGFnZSwgdG90YWxQYWdlcywgYXJ0aXN0cyB9ID0gdGhpcy5zdGF0ZTtcblxuICAgIGNvbnN0IGFydGlzdHNMaXN0ID0gYXJ0aXN0cy5tYXAoYXJ0aXN0ID0+IHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxsaSBrZXk9e2FydGlzdC5pZH0+XG4gICAgICAgICAgPEFydGlzdFxuICAgICAgICAgICAgaWQ9e2FydGlzdC5pZH1cbiAgICAgICAgICAgIG5hbWU9e2FydGlzdC5uYW1lfVxuICAgICAgICAgICAgZGVzY3JpcHRpb249e2FydGlzdC5kZXNjcmlwdGlvbn1cbiAgICAgICAgICAvPlxuICAgICAgICA8L2xpPlxuICAgICAgKTtcbiAgICB9KTtcblxuICAgIHJldHVybiAoXG4gICAgICA8RnJhZ21lbnQ+XG4gICAgICAgIDxmb3JtIG9uU3VibWl0PXt0aGlzLnVwZGF0ZVNlYXJjaFRlcm19PlxuICAgICAgICAgIDxpbnB1dCBpZD1cInNlYXJjaFRlcm1cIiB0eXBlPVwidGV4dFwiIC8+XG4gICAgICAgICAgPGJ1dHRvbiB0eXBlPVwic3VibWl0XCI+U2VhcmNoPC9idXR0b24+XG4gICAgICAgIDwvZm9ybT5cbiAgICAgICAgPFBhZ2luZ1xuICAgICAgICAgIGN1cnJlbnRQYWdlPXtjdXJyZW50UGFnZX1cbiAgICAgICAgICB0b3RhbFBhZ2VzPXt0b3RhbFBhZ2VzfVxuICAgICAgICAgIHVwZGF0ZVBhZ2U9e3RoaXMudXBkYXRlSGFuZGxlUGFnZX1cbiAgICAgICAgLz5cbiAgICAgICAgPHVsPnthcnRpc3RzTGlzdH08L3VsPlxuICAgICAgPC9GcmFnbWVudD5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhSb3V0ZXIoU2VhcmNoKTtcbiIsImltcG9ydCBSZWFjdCwgeyBGcmFnbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7IFJPVVRFUyB9IGZyb20gJy4uLy4uL3JvdXRlcy9yb3V0ZXMnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuY29uc3QgV29yayA9ICh7IG5hbWUsIHRpdGxlIH0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICA8aDM+e3RpdGxlfTwvaDM+XG4gICAgICA8TGluayB0bz17Uk9VVEVTLkxZUklDUy5saW5rVG8obmFtZSwgdGl0bGUpfT5HZXQgTHlyaWNzPC9MaW5rPlxuICAgIDwvRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5jb25zdCBXb3JrcyA9ICh7IHdvcmtzLCBuYW1lIH0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8RnJhZ21lbnQ+XG4gICAgICB7d29ya3MubWFwKHdvcmsgPT4gKFxuICAgICAgICA8V29yayBrZXk9e3dvcmsuaWR9IHRpdGxlPXt3b3JrLnRpdGxlfSBuYW1lPXtuYW1lfSAvPlxuICAgICAgKSl9XG4gICAgPC9GcmFnbWVudD5cbiAgKTtcbn07XG5cbldvcmtzLnByb3BUeXBlcyA9IHtcbiAgd29ya3M6IFByb3BUeXBlcy5hcnJheS5pc1JlcXVpcmVkLFxuICBuYW1lOiBQcm9wVHlwZXMuc3RyaW5nXG59O1xuXG5leHBvcnQgZGVmYXVsdCBXb3JrcztcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBnZXRBcnRpc3QgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9tdXNpY1NlYXJjaCc7XG5pbXBvcnQgV29ya3MgZnJvbSAnLi4vd29ya3MvV29ya3MnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXJ0aXN0RGV0YWlsIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG4gIH07XG5cbiAgc3RhdGUgPSB7XG4gICAgYXJ0aXN0OiB7fVxuICB9O1xuXG4gIGZldGNoQXJ0aXN0ID0gKCkgPT4ge1xuICAgIGNvbnN0IGlkID0gdGhpcy5wcm9wcy5sb2NhdGlvbi5wYXRobmFtZS5zbGljZSgxKS5zcGxpdCgnLycpWzFdO1xuICAgIGdldEFydGlzdChpZCkudGhlbihhcnRpc3QgPT4gdGhpcy5zZXRTdGF0ZSh7IGFydGlzdCB9KSk7XG4gIH07XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5mZXRjaEFydGlzdCgpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgbmFtZSwgZGVzY3JpcHRpb24sIHdvcmtzIH0gPSB0aGlzLnN0YXRlLmFydGlzdDtcbiAgICBpZih3b3JrcyA9PT0gdW5kZWZpbmVkKSByZXR1cm4gbnVsbDtcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8aDM+e25hbWV9PC9oMz5cbiAgICAgICAgPGgyPntkZXNjcmlwdGlvbn08L2gyPlxuICAgICAgICA8V29ya3Mgd29ya3M9e3dvcmtzfSBuYW1lPXtuYW1lfSAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCwgRnJhZ21lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBnZXRMeXJpY3MgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9tdXNpY1NlYXJjaCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMeXJpY3MgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbiAgfTtcblxuICBzdGF0ZSA9IHtcbiAgICBseXJpY3M6ICcnLFxuICAgIGFydGlzdDogJycsXG4gICAgdGl0bGU6ICcnXG4gIH07XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgY29uc3QgYXJ0aXN0ID0gdGhpcy5wcm9wcy5sb2NhdGlvbi5wYXRobmFtZS5zbGljZSgxKS5zcGxpdCgnLycpWzFdO1xuICAgIGNvbnN0IHRpdGxlID0gdGhpcy5wcm9wcy5sb2NhdGlvbi5wYXRobmFtZS5zbGljZSgxKS5zcGxpdCgnLycpWzJdO1xuXG4gICAgZ2V0THlyaWNzKGFydGlzdCwgdGl0bGUpLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoeyBseXJpY3M6IHJlc3VsdC5seXJpY3MsIGFydGlzdCwgdGl0bGUgfSk7XG4gICAgfSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBhcnRpc3QsIHRpdGxlLCBseXJpY3MgfSA9IHRoaXMuc3RhdGU7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPEZyYWdtZW50PlxuICAgICAgICA8aDM+e2FydGlzdH08L2gzPlxuICAgICAgICA8aDQ+e3RpdGxlfTwvaDQ+XG4gICAgICAgIDxwPntseXJpY3N9PC9wPlxuICAgICAgPC9GcmFnbWVudD5cbiAgICApO1xuICB9XG59XG4iLCJpbXBvcnQgU2VhcmNoIGZyb20gJy4uL2NvbXBvbmVudHMvc2VhcmNoL1NlYXJjaCc7XG5pbXBvcnQgQXJ0aXN0RGV0YWlsIGZyb20gJy4uL2NvbXBvbmVudHMvYXJ0aXN0cy9BcnRpc3REZXRhaWwnO1xuaW1wb3J0IEx5cmljcyBmcm9tICcuLi9jb21wb25lbnRzL3dvcmtzL0x5cmljcyc7XG5cbmV4cG9ydCBjb25zdCBST1VURVMgPSB7XG4gIFNFQVJDSDoge1xuICAgIHBhdGg6ICcvc2VhcmNoJyxcbiAgICBDb21wb25lbnQ6IFNlYXJjaCxcbiAgICBsaW5rVG86ICgpID0+ICcvc2VhcmNoJ1xuICB9LFxuICBBUlRJU1Q6IHtcbiAgICBwYXRoOiAnL2FydGlzdHMvOmlkJyxcbiAgICBDb21wb25lbnQ6IEFydGlzdERldGFpbCxcbiAgICBsaW5rVG86IGlkID0+IGAvYXJ0aXN0cy8ke2lkfWBcbiAgfSxcbiAgTFlSSUNTOiB7XG4gICAgcGF0aDogJy9seXJpY3MvOmFydGlzdC86dGl0bGUnLFxuICAgIENvbXBvbmVudDogTHlyaWNzLFxuICAgIGxpbmtUbzogKGFydGlzdCwgdGl0bGUpID0+IGAvbHlyaWNzLyR7YXJ0aXN0fS8ke3RpdGxlfWBcbiAgfVxufTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCBBcHAgZnJvbSAnLi9jb21wb25lbnRzL2FwcC9BcHAnO1xuXG5SZWFjdERPTS5yZW5kZXIoPEFwcCAvPiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKSk7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtcbiAgQnJvd3NlclJvdXRlciBhcyBSb3V0ZXIsXG4gIFJvdXRlLFxuICBTd2l0Y2gsXG4gIFJlZGlyZWN0XG59IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHsgUk9VVEVTIH0gZnJvbSAnLi4vLi4vcm91dGVzL3JvdXRlcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFwcCgpIHtcbiAgcmV0dXJuIChcbiAgICA8Um91dGVyPlxuICAgICAgPFN3aXRjaD5cbiAgICAgICAgPFJvdXRlIHBhdGg9e1JPVVRFUy5TRUFSQ0gucGF0aH0gY29tcG9uZW50PXtST1VURVMuU0VBUkNILkNvbXBvbmVudH0gLz5cbiAgICAgICAgPFJvdXRlIGNvbXBvbmVudD17Uk9VVEVTLkFSVElTVC5Db21wb25lbnR9IHBhdGg9e1JPVVRFUy5BUlRJU1QucGF0aH0gLz5cbiAgICAgICAgPFJvdXRlIGNvbXBvbmVudD17Uk9VVEVTLkxZUklDUy5Db21wb25lbnR9IHBhdGg9e1JPVVRFUy5MWVJJQ1MucGF0aH0gLz5cbiAgICAgICAgPFJlZGlyZWN0IHRvPXtST1VURVMuU0VBUkNILnBhdGh9IC8+XG4gICAgICA8L1N3aXRjaD5cbiAgICA8L1JvdXRlcj5cbiAgKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=